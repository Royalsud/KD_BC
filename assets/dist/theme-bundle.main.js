/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 	};
/******/
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"main": 0
/******/ 	};
/******/
/******/
/******/
/******/ 	// script path function
/******/ 	function jsonpScriptSrc(chunkId) {
/******/ 		return __webpack_require__.p + "theme-bundle.chunk." + ({}[chunkId]||chunkId) + ".js"
/******/ 	}
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId) {
/******/ 		var promises = [];
/******/
/******/
/******/ 		// JSONP chunk loading for javascript
/******/
/******/ 		var installedChunkData = installedChunks[chunkId];
/******/ 		if(installedChunkData !== 0) { // 0 means "already installed".
/******/
/******/ 			// a Promise means "currently loading".
/******/ 			if(installedChunkData) {
/******/ 				promises.push(installedChunkData[2]);
/******/ 			} else {
/******/ 				// setup Promise in chunk cache
/******/ 				var promise = new Promise(function(resolve, reject) {
/******/ 					installedChunkData = installedChunks[chunkId] = [resolve, reject];
/******/ 				});
/******/ 				promises.push(installedChunkData[2] = promise);
/******/
/******/ 				// start chunk loading
/******/ 				var script = document.createElement('script');
/******/ 				var onScriptComplete;
/******/
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.src = jsonpScriptSrc(chunkId);
/******/
/******/ 				// create error before stack unwound to get useful stacktrace later
/******/ 				var error = new Error();
/******/ 				onScriptComplete = function (event) {
/******/ 					// avoid mem leaks in IE.
/******/ 					script.onerror = script.onload = null;
/******/ 					clearTimeout(timeout);
/******/ 					var chunk = installedChunks[chunkId];
/******/ 					if(chunk !== 0) {
/******/ 						if(chunk) {
/******/ 							var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 							var realSrc = event && event.target && event.target.src;
/******/ 							error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 							error.name = 'ChunkLoadError';
/******/ 							error.type = errorType;
/******/ 							error.request = realSrc;
/******/ 							chunk[1](error);
/******/ 						}
/******/ 						installedChunks[chunkId] = undefined;
/******/ 					}
/******/ 				};
/******/ 				var timeout = setTimeout(function(){
/******/ 					onScriptComplete({ type: 'timeout', target: script });
/******/ 				}, 120000);
/******/ 				script.onerror = script.onload = onScriptComplete;
/******/ 				document.head.appendChild(script);
/******/ 			}
/******/ 		}
/******/ 		return Promise.all(promises);
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// on error function for async loading
/******/ 	__webpack_require__.oe = function(err) { console.error(err); throw err; };
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./assets/js/app.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./assets/js/app.js":
/*!**************************!*\
  !*** ./assets/js/app.js ***!
  \**************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var _theme_global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./theme/global */ "./assets/js/theme/global.js");
__webpack_require__.p = window.__webpack_public_path__; // eslint-disable-line


window.$ = $;
window.jquery = $;
var getAccount = function getAccount() {
  return __webpack_require__.e(/*! import() */ 4).then(__webpack_require__.bind(null, /*! ./theme/account */ "./assets/js/theme/account.js"));
};
var getLogin = function getLogin() {
  return __webpack_require__.e(/*! import() */ 6).then(__webpack_require__.bind(null, /*! ./theme/auth */ "./assets/js/theme/auth.js"));
};
var noop = null;
var pageClasses = {
  account_orderstatus: getAccount,
  account_order: getAccount,
  account_addressbook: getAccount,
  shippingaddressform: getAccount,
  account_new_return: getAccount,
  'add-wishlist': function addWishlist() {
    return Promise.resolve(/*! import() */).then(__webpack_require__.bind(null, /*! ./theme/wishlist */ "./assets/js/theme/wishlist.js"));
  },
  account_recentitems: getAccount,
  account_downloaditem: getAccount,
  editaccount: getAccount,
  account_inbox: getAccount,
  account_saved_return: getAccount,
  account_returns: getAccount,
  account_paymentmethods: getAccount,
  account_addpaymentmethod: getAccount,
  account_editpaymentmethod: getAccount,
  login: getLogin,
  createaccount_thanks: getLogin,
  createaccount: getLogin,
  getnewpassword: getLogin,
  forgotpassword: getLogin,
  blog: noop,
  blog_post: noop,
  brand: function brand() {
    return Promise.all(/*! import() */[__webpack_require__.e(0), __webpack_require__.e(13)]).then(__webpack_require__.bind(null, /*! ./theme/brand */ "./assets/js/theme/brand.js"));
  },
  brands: function brands() {
    return __webpack_require__.e(/*! import() */ 9).then(__webpack_require__.bind(null, /*! ./theme/brands */ "./assets/js/theme/brands.js"));
  },
  cart: function cart() {
    return Promise.resolve(/*! import() */).then(__webpack_require__.bind(null, /*! ./theme/cart */ "./assets/js/theme/cart.js"));
  },
  category: function category() {
    return Promise.all(/*! import() */[__webpack_require__.e(0), __webpack_require__.e(1)]).then(__webpack_require__.bind(null, /*! ./theme/category */ "./assets/js/theme/category.js"));
  },
  compare: function compare() {
    return __webpack_require__.e(/*! import() */ 10).then(__webpack_require__.bind(null, /*! ./theme/compare */ "./assets/js/theme/compare.js"));
  },
  page_contact_form: function page_contact_form() {
    return __webpack_require__.e(/*! import() */ 12).then(__webpack_require__.bind(null, /*! ./theme/contact-us */ "./assets/js/theme/contact-us.js"));
  },
  error: noop,
  404: noop,
  giftcertificates: function giftcertificates() {
    return __webpack_require__.e(/*! import() */ 2).then(__webpack_require__.bind(null, /*! ./theme/gift-certificate */ "./assets/js/theme/gift-certificate.js"));
  },
  giftcertificates_balance: function giftcertificates_balance() {
    return __webpack_require__.e(/*! import() */ 2).then(__webpack_require__.bind(null, /*! ./theme/gift-certificate */ "./assets/js/theme/gift-certificate.js"));
  },
  giftcertificates_redeem: function giftcertificates_redeem() {
    return __webpack_require__.e(/*! import() */ 2).then(__webpack_require__.bind(null, /*! ./theme/gift-certificate */ "./assets/js/theme/gift-certificate.js"));
  },
  "default": noop,
  page: function page() {
    return __webpack_require__.e(/*! import() */ 11).then(__webpack_require__.bind(null, /*! ./theme/page */ "./assets/js/theme/page.js"));
  },
  product: function product() {
    return __webpack_require__.e(/*! import() */ 3).then(__webpack_require__.bind(null, /*! ./theme/product */ "./assets/js/theme/product.js"));
  },
  amp_product_options: function amp_product_options() {
    return __webpack_require__.e(/*! import() */ 3).then(__webpack_require__.bind(null, /*! ./theme/product */ "./assets/js/theme/product.js"));
  },
  search: function search() {
    return Promise.all(/*! import() */[__webpack_require__.e(0), __webpack_require__.e(14)]).then(__webpack_require__.bind(null, /*! ./theme/search */ "./assets/js/theme/search.js"));
  },
  rss: noop,
  sitemap: noop,
  newsletter_subscribe: noop,
  wishlist: function wishlist() {
    return Promise.resolve(/*! import() */).then(__webpack_require__.bind(null, /*! ./theme/wishlist */ "./assets/js/theme/wishlist.js"));
  },
  wishlists: function wishlists() {
    return Promise.resolve(/*! import() */).then(__webpack_require__.bind(null, /*! ./theme/wishlist */ "./assets/js/theme/wishlist.js"));
  }
};
var customClasses = {};

/**
 * This function gets added to the global window and then called
 * on page load with the current template loaded and JS Context passed in
 * @param pageType String
 * @param contextJSON
 * @returns {*}
 */
window.stencilBootstrap = function stencilBootstrap(pageType, contextJSON, loadGlobal) {
  if (contextJSON === void 0) {
    contextJSON = null;
  }
  if (loadGlobal === void 0) {
    loadGlobal = true;
  }
  var context = JSON.parse(contextJSON || '{}');
  return {
    load: function load() {
      $(function () {
        // Load globals
        if (loadGlobal) {
          _theme_global__WEBPACK_IMPORTED_MODULE_0__["default"].load(context);
        }
        var importPromises = [];

        // Find the appropriate page loader based on pageType
        var pageClassImporter = pageClasses[pageType];
        if (typeof pageClassImporter === 'function') {
          importPromises.push(pageClassImporter());
        }

        // See if there is a page class default for a custom template
        var customTemplateImporter = customClasses[context.template];
        if (typeof customTemplateImporter === 'function') {
          importPromises.push(customTemplateImporter());
        }

        // Wait for imports to resolve, then call load() on them
        Promise.all(importPromises).then(function (imports) {
          imports.forEach(function (imported) {
            imported["default"].load(context);
          });
        });
      });
    }
  };
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/cart.js":
/*!*********************************!*\
  !*** ./assets/js/theme/cart.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Cart; });
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/debounce */ "./node_modules/lodash/debounce.js");
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_bind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/bind */ "./node_modules/lodash/bind.js");
/* harmony import */ var lodash_bind__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_bind__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _page_manager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./page-manager */ "./assets/js/theme/page-manager.js");
/* harmony import */ var _common_gift_certificate_validator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common/gift-certificate-validator */ "./assets/js/theme/common/gift-certificate-validator.js");
/* harmony import */ var _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @bigcommerce/stencil-utils */ "./node_modules/@bigcommerce/stencil-utils/src/main.js");
/* harmony import */ var _cart_shipping_estimator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cart/shipping-estimator */ "./assets/js/theme/cart/shipping-estimator.js");
/* harmony import */ var _global_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./global/modal */ "./assets/js/theme/global/modal.js");
/* harmony import */ var _global_sweet_alert__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./global/sweet-alert */ "./assets/js/theme/global/sweet-alert.js");
/* harmony import */ var _common_cart_item_details__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./common/cart-item-details */ "./assets/js/theme/common/cart-item-details.js");
/* harmony import */ var _halothemes_haloQuickEditCart__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./halothemes/haloQuickEditCart */ "./assets/js/theme/halothemes/haloQuickEditCart.js");
/* harmony import */ var _halothemes_haloCalculateFreeShipping__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./halothemes/haloCalculateFreeShipping */ "./assets/js/theme/halothemes/haloCalculateFreeShipping.js");


function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }









var Cart = /*#__PURE__*/function (_PageManager) {
  _inheritsLoose(Cart, _PageManager);
  function Cart() {
    return _PageManager.apply(this, arguments) || this;
  }
  var _proto = Cart.prototype;
  _proto.onReady = function onReady() {
    this.$modal = null;
    this.$cartContent = $('[data-cart-content]');
    this.$cartMessages = $('[data-cart-status]');
    this.$cartTotals = $('[data-cart-totals]');
    this.$overlay = $('[data-cart] .loadingOverlay').hide(); // TODO: temporary until roper pulls in his cart components
    this.$activeCartItemId = null;
    this.$activeCartItemBtnAction = null;
    this.bindEvents();
    Object(_halothemes_haloQuickEditCart__WEBPACK_IMPORTED_MODULE_9__["default"])(this.context);
    Object(_halothemes_haloCalculateFreeShipping__WEBPACK_IMPORTED_MODULE_10__["default"])(this.context);
    if ($('body').hasClass('page-type-cart')) {
      var $cart = $('[data-cart-preview]');
      var $cart2 = $('[data-cart-preview2]');
      $cart.on('click', function (event) {
        event.preventDefault();
        $('html, body').animate({
          scrollTop: $('[data-cart]').offset().top
        }, 700);
      });
      $cart2.on('click', function (event) {
        event.preventDefault();
        $('html, body').animate({
          scrollTop: $('[data-cart]').offset().top
        }, 700);
      });
    }
    var time = $('.cart-notification').data('count-down');
    if ($('.cart-notification').length && time != '') {
      var duration = time * 60,
        element = $('.cart-notification .cart-count-down');
      this.startTimer(duration, element);
    }
  };
  _proto.cartUpdate = function cartUpdate($target) {
    var _this = this;
    var itemId = $target.data('cartItemid');
    this.$activeCartItemId = itemId;
    this.$activeCartItemBtnAction = $target.data('action');
    var $el = $("#qty-" + itemId);
    var oldQty = parseInt($el.val(), 10);
    var maxQty = parseInt($el.data('quantityMax'), 10);
    var minQty = parseInt($el.data('quantityMin'), 10);
    var minError = $el.data('quantityMinError');
    var maxError = $el.data('quantityMaxError');
    var newQty = $target.data('action') === 'inc' ? oldQty + 1 : oldQty - 1;
    // Does not quality for min/max quantity
    if (newQty < minQty) {
      return _global_sweet_alert__WEBPACK_IMPORTED_MODULE_7__["default"].fire({
        text: minError,
        icon: 'error'
      });
    } else if (maxQty > 0 && newQty > maxQty) {
      return _global_sweet_alert__WEBPACK_IMPORTED_MODULE_7__["default"].fire({
        text: maxError,
        icon: 'error'
      });
    }
    this.$overlay.show();
    _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_4__["default"].api.cart.itemUpdate(itemId, newQty, function (err, response) {
      _this.$overlay.hide();
      if (response.data.status === 'succeed') {
        // if the quantity is changed "1" from "0", we have to remove the row.
        var remove = newQty === 0;
        _this.refreshContent(remove);
      } else {
        $el.val(oldQty);
        _global_sweet_alert__WEBPACK_IMPORTED_MODULE_7__["default"].fire({
          text: response.data.errors.join('\n'),
          icon: 'error'
        });
      }
    });
  };
  _proto.cartUpdateQtyTextChange = function cartUpdateQtyTextChange($target, preVal) {
    var _this2 = this;
    if (preVal === void 0) {
      preVal = null;
    }
    var itemId = $target.data('cartItemid');
    var $el = $("#qty-" + itemId);
    var maxQty = parseInt($el.data('quantityMax'), 10);
    var minQty = parseInt($el.data('quantityMin'), 10);
    var oldQty = preVal !== null ? preVal : minQty;
    var minError = $el.data('quantityMinError');
    var maxError = $el.data('quantityMaxError');
    var newQty = parseInt(Number($el.val()), 10);
    var invalidEntry;

    // Does not quality for min/max quantity
    if (!newQty) {
      invalidEntry = $el.val();
      $el.val(oldQty);
      return _global_sweet_alert__WEBPACK_IMPORTED_MODULE_7__["default"].fire({
        text: invalidEntry + " is not a valid entry",
        icon: 'error'
      });
    } else if (newQty < minQty) {
      $el.val(oldQty);
      return _global_sweet_alert__WEBPACK_IMPORTED_MODULE_7__["default"].fire({
        text: minError,
        icon: 'error'
      });
    } else if (maxQty > 0 && newQty > maxQty) {
      $el.val(oldQty);
      return _global_sweet_alert__WEBPACK_IMPORTED_MODULE_7__["default"].fire({
        text: maxError,
        icon: 'error'
      });
    }
    this.$overlay.show();
    _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_4__["default"].api.cart.itemUpdate(itemId, newQty, function (err, response) {
      _this2.$overlay.hide();
      if (response.data.status === 'succeed') {
        // if the quantity is changed "1" from "0", we have to remove the row.
        var remove = newQty === 0;
        _this2.refreshContent(remove);
      } else {
        $el.val(oldQty);
        _global_sweet_alert__WEBPACK_IMPORTED_MODULE_7__["default"].fire({
          text: response.data.errors.join('\n'),
          icon: 'error'
        });
      }
    });
  };
  _proto.cartRemoveItem = function cartRemoveItem(itemId) {
    var _this3 = this;
    this.$overlay.show();
    _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_4__["default"].api.cart.itemRemove(itemId, function (err, response) {
      if (response.data.status === 'succeed') {
        _this3.refreshContent(true);
      } else {
        _global_sweet_alert__WEBPACK_IMPORTED_MODULE_7__["default"].fire({
          text: response.data.errors.join('\n'),
          icon: 'error'
        });
      }
    });
  };
  _proto.cartEditOptions = function cartEditOptions(itemId, productId) {
    var _this4 = this;
    var context = Object.assign({
      productForChangeId: productId
    }, this.context);
    var modal = Object(_global_modal__WEBPACK_IMPORTED_MODULE_6__["defaultModal"])();
    if (this.$modal === null) {
      this.$modal = $('#modal');
    }
    var options = {
      template: 'cart/modals/configure-product'
    };
    modal.open();
    this.$modal.find('.modal-content').addClass('hide-content');
    _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_4__["default"].api.productAttributes.configureInCart(itemId, options, function (err, response) {
      modal.updateContent(response.content);
      var $productOptionsContainer = $('[data-product-attributes-wrapper]', _this4.$modal);
      var modalBodyReservedHeight = $productOptionsContainer.outerHeight();
      $productOptionsContainer.css('height', modalBodyReservedHeight);
      _this4.productDetails = new _common_cart_item_details__WEBPACK_IMPORTED_MODULE_8__["default"](_this4.$modal, context);
      _this4.bindGiftWrappingForm();
      modal.setupFocusableElements(_global_modal__WEBPACK_IMPORTED_MODULE_6__["modalTypes"].CART_CHANGE_PRODUCT);
    });
    _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_4__["default"].hooks.on('product-option-change', function (event, currentTarget) {
      var $form = $(currentTarget).find('form');
      var $submit = $('input.button', $form);
      var $messageBox = $('.alertMessageBox');
      _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_4__["default"].api.productAttributes.optionChange(productId, $form.serialize(), function (err, result) {
        var data = result.data || {};
        if (err) {
          _global_sweet_alert__WEBPACK_IMPORTED_MODULE_7__["default"].fire({
            text: err,
            icon: 'error'
          });
          return false;
        }
        if (data.purchasing_message) {
          $('p.alertBox-message', $messageBox).text(data.purchasing_message);
          $submit.prop('disabled', true);
          $messageBox.show();
        } else {
          $submit.prop('disabled', false);
          $messageBox.hide();
        }
        if (!data.purchasable || !data.instock) {
          $submit.prop('disabled', true);
        } else {
          $submit.prop('disabled', false);
        }
      });
    });
  };
  _proto.refreshContent = function refreshContent(remove) {
    var _this5 = this;
    var $cartItemsRows = $('[data-item-row]', this.$cartContent);
    var $cartPageTitle = $('[data-cart-page-title]');
    var options = {
      template: {
        content: 'cart/content',
        totals: 'cart/totals',
        pageTitle: 'cart/page-title',
        statusMessages: 'cart/status-messages'
      }
    };
    this.$overlay.show();

    // Remove last item from cart? Reload
    if (remove && $cartItemsRows.length === 1) {
      return window.location.reload();
    }
    _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_4__["default"].api.cart.getContent(options, function (err, response) {
      _this5.$cartContent.html(response.content);
      _this5.$cartTotals.html(response.totals);
      _this5.$cartMessages.html(response.statusMessages);
      $cartPageTitle.replaceWith(response.pageTitle);
      _this5.bindEvents();
      _this5.$overlay.hide();
      var quantity = $('[data-cart-quantity]', _this5.$cartContent).data('cartQuantity') || 0;
      $('body').trigger('cart-quantity-update', quantity);
      $("[data-cart-itemid='" + _this5.$activeCartItemId + "']", _this5.$cartContent).filter("[data-action='" + _this5.$activeCartItemBtnAction + "']").trigger('focus');
    });
    Object(_halothemes_haloCalculateFreeShipping__WEBPACK_IMPORTED_MODULE_10__["default"])(this.context);
  };
  _proto.bindCartEvents = function bindCartEvents() {
    var _this6 = this;
    var debounceTimeout = 400;
    var cartUpdate = lodash_bind__WEBPACK_IMPORTED_MODULE_1___default()(lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default()(this.cartUpdate, debounceTimeout), this);
    var cartUpdateQtyTextChange = lodash_bind__WEBPACK_IMPORTED_MODULE_1___default()(lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default()(this.cartUpdateQtyTextChange, debounceTimeout), this);
    var cartRemoveItem = lodash_bind__WEBPACK_IMPORTED_MODULE_1___default()(lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default()(this.cartRemoveItem, debounceTimeout), this);
    var preVal;

    // cart update
    $('[data-cart-update]', this.$cartContent).on('click', function (event) {
      var $target = $(event.currentTarget);
      event.preventDefault();

      // update cart quantity
      cartUpdate($target);
    });

    // cart qty manually updates
    $('.cart-item-qty-input', this.$cartContent).on('focus', function onQtyFocus() {
      preVal = this.value;
    }).change(function (event) {
      var $target = $(event.currentTarget);
      event.preventDefault();

      // update cart quantity
      cartUpdateQtyTextChange($target, preVal);
    });
    $('.cart-remove', this.$cartContent).on('click', function (event) {
      var itemId = $(event.currentTarget).data('cartItemid');
      var string = $(event.currentTarget).data('confirmDelete');
      _global_sweet_alert__WEBPACK_IMPORTED_MODULE_7__["default"].fire({
        text: string,
        icon: 'warning',
        showCancelButton: true
      }).then(function (result) {
        if (result.value) {
          // remove item from cart
          cartRemoveItem(itemId);
        }
      });
      event.preventDefault();
    });
    $('[data-item-edit]', this.$cartContent).on('click', function (event) {
      var itemId = $(event.currentTarget).data('itemEdit');
      var productId = $(event.currentTarget).data('productId');
      event.preventDefault();
      // edit item in cart
      _this6.cartEditOptions(itemId, productId);
    });
  };
  _proto.bindPromoCodeEvents = function bindPromoCodeEvents() {
    var _this7 = this;
    var $couponContainer = $('.coupon-code');
    var $couponForm = $('.coupon-form');
    var $codeInput = $('[name="couponcode"]', $couponForm);
    $('.coupon-code-add').on('click', function (event) {
      event.preventDefault();
      $(event.currentTarget).hide();
      $couponContainer.show();
      $('.coupon-code-cancel').show();
      $codeInput.trigger('focus');
    });
    $('.coupon-code-cancel').on('click', function (event) {
      event.preventDefault();
      $couponContainer.hide();
      $('.coupon-code-cancel').hide();
      $('.coupon-code-add').show();
    });
    $couponForm.on('submit', function (event) {
      var code = $codeInput.val();
      event.preventDefault();

      // Empty code
      if (!code) {
        return _global_sweet_alert__WEBPACK_IMPORTED_MODULE_7__["default"].fire({
          text: $codeInput.data('error'),
          icon: 'error'
        });
      }
      _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_4__["default"].api.cart.applyCode(code, function (err, response) {
        if (response.data.status === 'success') {
          _this7.refreshContent();
        } else {
          _global_sweet_alert__WEBPACK_IMPORTED_MODULE_7__["default"].fire({
            html: response.data.errors.join('\n'),
            icon: 'error'
          });
        }
      });
    });
  };
  _proto.bindGiftCertificateEvents = function bindGiftCertificateEvents() {
    var _this8 = this;
    var $certContainer = $('.gift-certificate-code');
    var $certForm = $('.cart-gift-certificate-form');
    var $certInput = $('[name="certcode"]', $certForm);
    $('.gift-certificate-add').on('click', function (event) {
      event.preventDefault();
      $(event.currentTarget).toggle();
      $certContainer.toggle();
      $('.gift-certificate-cancel').toggle();
    });
    $('.gift-certificate-cancel').on('click', function (event) {
      event.preventDefault();
      $certContainer.toggle();
      $('.gift-certificate-add').toggle();
      $('.gift-certificate-cancel').toggle();
    });
    $certForm.on('submit', function (event) {
      var code = $certInput.val();
      event.preventDefault();
      if (!Object(_common_gift_certificate_validator__WEBPACK_IMPORTED_MODULE_3__["default"])(code)) {
        return _global_sweet_alert__WEBPACK_IMPORTED_MODULE_7__["default"].fire({
          text: $certInput.data('error'),
          icon: 'error'
        });
      }
      _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_4__["default"].api.cart.applyGiftCertificate(code, function (err, resp) {
        if (resp.data.status === 'success') {
          _this8.refreshContent();
        } else {
          _global_sweet_alert__WEBPACK_IMPORTED_MODULE_7__["default"].fire({
            html: resp.data.errors.join('\n'),
            icon: 'error'
          });
        }
      });
    });
  };
  _proto.bindGiftWrappingEvents = function bindGiftWrappingEvents() {
    var _this9 = this;
    var modal = Object(_global_modal__WEBPACK_IMPORTED_MODULE_6__["defaultModal"])();
    $('[data-item-giftwrap]').on('click', function (event) {
      var itemId = $(event.currentTarget).data('itemGiftwrap');
      var options = {
        template: 'cart/modals/gift-wrapping-form'
      };
      event.preventDefault();
      modal.open();
      _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_4__["default"].api.cart.getItemGiftWrappingOptions(itemId, options, function (err, response) {
        modal.updateContent(response.content);
        _this9.bindGiftWrappingForm();
      });
    });
  };
  _proto.bindGiftWrappingForm = function bindGiftWrappingForm() {
    $('.giftWrapping-select').on('change', function (event) {
      var $select = $(event.currentTarget);
      var id = $select.val();
      var index = $select.data('index');
      if (!id) {
        return;
      }
      var allowMessage = $select.find("option[value=" + id + "]").data('allowMessage');
      $(".giftWrapping-image-" + index).hide();
      $("#giftWrapping-image-" + index + "-" + id).show();
      if (allowMessage) {
        $("#giftWrapping-message-" + index).show();
      } else {
        $("#giftWrapping-message-" + index).hide();
      }
    });
    $('.giftWrapping-select').trigger('change');
    function toggleViews() {
      var value = $('input:radio[name ="giftwraptype"]:checked').val();
      var $singleForm = $('.giftWrapping-single');
      var $multiForm = $('.giftWrapping-multiple');
      if (value === 'same') {
        $singleForm.show();
        $multiForm.hide();
      } else {
        $singleForm.hide();
        $multiForm.show();
      }
    }
    $('[name="giftwraptype"]').on('click', toggleViews);
    toggleViews();
  };
  _proto.bindEvents = function bindEvents() {
    this.bindCartEvents();
    this.bindPromoCodeEvents();
    this.bindGiftWrappingEvents();
    this.bindGiftCertificateEvents();

    // initiate shipping estimator module
    this.shippingEstimator = new _cart_shipping_estimator__WEBPACK_IMPORTED_MODULE_5__["default"]($('[data-shipping-estimator]'));
  };
  _proto.startTimer = function startTimer(duration, element) {
    var timer = duration,
      minutes,
      seconds;
    var startCoundown = setInterval(function () {
      minutes = parseInt(timer / 60, 10);
      seconds = parseInt(timer % 60, 10);
      minutes = minutes < 10 ? "0" + minutes : minutes;
      seconds = seconds < 10 ? "0" + seconds : seconds;
      element.text(minutes + ":" + seconds);
      if (--timer < 0) {
        clearInterval(startCoundown);
        $('.cart-notification').remove();
      }
    }, 1000);
  };
  return Cart;
}(_page_manager__WEBPACK_IMPORTED_MODULE_2__["default"]);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/cart/shipping-estimator.js":
/*!****************************************************!*\
  !*** ./assets/js/theme/cart/shipping-estimator.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ShippingEstimator; });
/* harmony import */ var _common_state_country__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/state-country */ "./assets/js/theme/common/state-country.js");
/* harmony import */ var _common_nod__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/nod */ "./assets/js/theme/common/nod.js");
/* harmony import */ var _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bigcommerce/stencil-utils */ "./node_modules/@bigcommerce/stencil-utils/src/main.js");
/* harmony import */ var _common_utils_form_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/utils/form-utils */ "./assets/js/theme/common/utils/form-utils.js");
/* harmony import */ var _common_collapsible__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/collapsible */ "./assets/js/theme/common/collapsible.js");
/* harmony import */ var _global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../global/sweet-alert */ "./assets/js/theme/global/sweet-alert.js");






var ShippingEstimator = /*#__PURE__*/function () {
  function ShippingEstimator($element) {
    this.$element = $element;
    this.$state = $('[data-field-type="State"]', this.$element);
    this.isEstimatorFormOpened = false;
    this.initFormValidation();
    this.bindStateCountryChange();
    this.bindEstimatorEvents();
  }
  var _proto = ShippingEstimator.prototype;
  _proto.initFormValidation = function initFormValidation() {
    var _this = this;
    var shippingEstimatorAlert = $('.shipping-quotes');
    this.shippingEstimator = 'form[data-shipping-estimator]';
    this.shippingValidator = Object(_common_nod__WEBPACK_IMPORTED_MODULE_1__["default"])({
      submit: this.shippingEstimator + " .shipping-estimate-submit",
      tap: _common_utils_form_utils__WEBPACK_IMPORTED_MODULE_3__["announceInputErrorMessage"]
    });
    $('.shipping-estimate-submit', this.$element).on('click', function (event) {
      // estimator error messages are being injected in html as a result
      // of user submit; clearing and adding role on submit provides
      // regular announcement of these error messages
      if (shippingEstimatorAlert.attr('role')) {
        shippingEstimatorAlert.removeAttr('role');
      }
      shippingEstimatorAlert.attr('role', 'alert');
      // When switching between countries, the state/region is dynamic
      // Only perform a check for all fields when country has a value
      // Otherwise areAll('valid') will check country for validity
      if ($(_this.shippingEstimator + " select[name=\"shipping-country\"]").val()) {
        _this.shippingValidator.performCheck();
      }
      if (_this.shippingValidator.areAll('valid')) {
        return;
      }
      event.preventDefault();
    });
    this.bindValidation();
    this.bindStateValidation();
    this.bindUPSRates();
  };
  _proto.bindValidation = function bindValidation() {
    this.shippingValidator.add([{
      selector: this.shippingEstimator + " select[name=\"shipping-country\"]",
      validate: function validate(cb, val) {
        var countryId = Number(val);
        var result = countryId !== 0 && !Number.isNaN(countryId);
        cb(result);
      },
      errorMessage: 'The \'Country\' field cannot be blank.'
    }]);
  };
  _proto.bindStateValidation = function bindStateValidation() {
    var _this2 = this;
    this.shippingValidator.add([{
      selector: $(this.shippingEstimator + " select[name=\"shipping-state\"]"),
      validate: function validate(cb) {
        var result;
        var $ele = $(_this2.shippingEstimator + " select[name=\"shipping-state\"]");
        if ($ele.length) {
          var eleVal = $ele.val();
          result = eleVal && eleVal.length && eleVal !== 'State/province';
        }
        cb(result);
      },
      errorMessage: 'The \'State/Province\' field cannot be blank.'
    }]);
  }

  /**
   * Toggle between default shipping and ups shipping rates
   */;
  _proto.bindUPSRates = function bindUPSRates() {
    var UPSRateToggle = '.estimator-form-toggleUPSRate';
    $('body').on('click', UPSRateToggle, function (event) {
      var $estimatorFormUps = $('.estimator-form--ups');
      var $estimatorFormDefault = $('.estimator-form--default');
      event.preventDefault();
      $estimatorFormUps.toggleClass('u-hiddenVisually');
      $estimatorFormDefault.toggleClass('u-hiddenVisually');
    });
  };
  _proto.bindStateCountryChange = function bindStateCountryChange() {
    var _this3 = this;
    var $last;

    // Requests the states for a country with AJAX
    Object(_common_state_country__WEBPACK_IMPORTED_MODULE_0__["default"])(this.$state, this.context, {
      useIdForStates: true
    }, function (err, field) {
      if (err) {
        _global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__["default"].fire({
          text: err,
          icon: 'error'
        });
        throw new Error(err);
      }
      var $field = $(field);
      if (_this3.shippingValidator.getStatus(_this3.$state) !== 'undefined') {
        _this3.shippingValidator.remove(_this3.$state);
      }
      if ($last) {
        _this3.shippingValidator.remove($last);
      }
      if ($field.is('select')) {
        $last = field;
        _this3.bindStateValidation();
      } else {
        $field.attr('placeholder', 'State/province');
        _common_utils_form_utils__WEBPACK_IMPORTED_MODULE_3__["Validators"].cleanUpStateValidation(field);
      }

      // When you change a country, you swap the state/province between an input and a select dropdown
      // Not all countries require the province to be filled
      // We have to remove this class when we swap since nod validation doesn't cleanup for us
      $(_this3.shippingEstimator).find('.form-field--success').removeClass('form-field--success');
    });
  };
  _proto.toggleEstimatorFormState = function toggleEstimatorFormState(toggleButton, buttonSelector, $toggleContainer) {
    var changeAttributesOnToggle = function changeAttributesOnToggle(selectorToActivate) {
      $(toggleButton).attr('aria-labelledby', selectorToActivate);
      $(buttonSelector).text($("#" + selectorToActivate).text());
    };
    if (!this.isEstimatorFormOpened) {
      changeAttributesOnToggle('estimator-close');
      $toggleContainer.removeClass('u-hidden');
    } else {
      changeAttributesOnToggle('estimator-add');
      $toggleContainer.addClass('u-hidden');
    }
    this.isEstimatorFormOpened = !this.isEstimatorFormOpened;
  };
  _proto.bindEstimatorEvents = function bindEstimatorEvents() {
    var _this4 = this;
    var $estimatorContainer = $('.shipping-estimator');
    var $estimatorForm = $('.estimator-form');
    Object(_common_collapsible__WEBPACK_IMPORTED_MODULE_4__["default"])();
    $estimatorForm.on('submit', function (event) {
      var params = {
        country_id: $('[name="shipping-country"]', $estimatorForm).val(),
        state_id: $('[name="shipping-state"]', $estimatorForm).val(),
        city: $('[name="shipping-city"]', $estimatorForm).val(),
        zip_code: $('[name="shipping-zip"]', $estimatorForm).val()
      };
      event.preventDefault();
      _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__["default"].api.cart.getShippingQuotes(params, 'cart/shipping-quotes', function (err, response) {
        $('.shipping-quotes').html(response.content);

        // bind the select button
        $('.select-shipping-quote').on('click', function (clickEvent) {
          var quoteId = $('.shipping-quote:checked').val();
          clickEvent.preventDefault();
          _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__["default"].api.cart.submitShippingQuote(quoteId, function () {
            window.location.reload();
          });
        });
      });
    });
    $('.shipping-estimate-show').on('click', function (event) {
      event.preventDefault();
      _this4.toggleEstimatorFormState(event.currentTarget, '.shipping-estimate-show__btn-name', $estimatorContainer);
    });
  };
  return ShippingEstimator;
}();

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/common/aria/constants.js":
/*!**************************************************!*\
  !*** ./assets/js/theme/common/aria/constants.js ***!
  \**************************************************/
/*! exports provided: ariaKeyCodes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ariaKeyCodes", function() { return ariaKeyCodes; });
var ariaKeyCodes = {
  RETURN: 13,
  SPACE: 32,
  LEFT: 37,
  UP: 38,
  RIGHT: 39,
  DOWN: 40
};

/***/ }),

/***/ "./assets/js/theme/common/aria/index.js":
/*!**********************************************!*\
  !*** ./assets/js/theme/common/aria/index.js ***!
  \**********************************************/
/*! exports provided: initRadioOptions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _radioOptions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./radioOptions */ "./assets/js/theme/common/aria/radioOptions.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "initRadioOptions", function() { return _radioOptions__WEBPACK_IMPORTED_MODULE_0__["default"]; });



/***/ }),

/***/ "./assets/js/theme/common/aria/radioOptions.js":
/*!*****************************************************!*\
  !*** ./assets/js/theme/common/aria/radioOptions.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./assets/js/theme/common/aria/constants.js");

var setCheckedRadioItem = function setCheckedRadioItem(itemCollection, itemIdx) {
  itemCollection.each(function (idx, item) {
    var $item = $(item);
    if (idx !== itemIdx) {
      $item.attr('aria-checked', false).prop('checked', false);
      return;
    }
    $item.attr('aria-checked', true).prop('checked', true).focus();
    $item.trigger('change');
  });
};
var calculateTargetItemPosition = function calculateTargetItemPosition(lastItemIdx, currentIdx) {
  switch (true) {
    case currentIdx > lastItemIdx:
      return 0;
    case currentIdx < 0:
      return lastItemIdx;
    default:
      return currentIdx;
  }
};
var handleItemKeyDown = function handleItemKeyDown(itemCollection) {
  return function (e) {
    var keyCode = e.keyCode;
    var itemIdx = itemCollection.index(e.currentTarget);
    var lastCollectionItemIdx = itemCollection.length - 1;
    if (Object.values(_constants__WEBPACK_IMPORTED_MODULE_0__["ariaKeyCodes"]).includes(keyCode)) {
      e.preventDefault();
      e.stopPropagation();
    }
    switch (keyCode) {
      case _constants__WEBPACK_IMPORTED_MODULE_0__["ariaKeyCodes"].LEFT:
      case _constants__WEBPACK_IMPORTED_MODULE_0__["ariaKeyCodes"].UP:
        {
          var prevItemIdx = calculateTargetItemPosition(lastCollectionItemIdx, itemIdx - 1);
          itemCollection.get(prevItemIdx).focus();
          setCheckedRadioItem(itemCollection, itemIdx - 1);
          break;
        }
      case _constants__WEBPACK_IMPORTED_MODULE_0__["ariaKeyCodes"].RIGHT:
      case _constants__WEBPACK_IMPORTED_MODULE_0__["ariaKeyCodes"].DOWN:
        {
          var nextItemIdx = calculateTargetItemPosition(lastCollectionItemIdx, itemIdx + 1);
          itemCollection.get(nextItemIdx).focus();
          setCheckedRadioItem(itemCollection, itemIdx + 1);
          break;
        }
      default:
        break;
    }
  };
};
/* harmony default export */ __webpack_exports__["default"] = (function ($container, itemSelector) {
  var $itemCollection = $container.find(itemSelector);
  $container.on('keydown', itemSelector, handleItemKeyDown($itemCollection));
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/common/carousel/constants.js":
/*!******************************************************!*\
  !*** ./assets/js/theme/common/carousel/constants.js ***!
  \******************************************************/
/*! exports provided: FOCUSABLE_ELEMENTS_SELECTOR */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FOCUSABLE_ELEMENTS_SELECTOR", function() { return FOCUSABLE_ELEMENTS_SELECTOR; });
var FOCUSABLE_ELEMENTS_SELECTOR = '[href], button, input, textarea, select, details, [contenteditable="true"], [tabindex]';

/***/ }),

/***/ "./assets/js/theme/common/carousel/index.js":
/*!**************************************************!*\
  !*** ./assets/js/theme/common/carousel/index.js ***!
  \**************************************************/
/*! exports provided: setCarouselState, onUserCarouselChange, onSlickCarouselChange, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setCarouselState", function() { return setCarouselState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onUserCarouselChange", function() { return onUserCarouselChange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onSlickCarouselChange", function() { return onSlickCarouselChange; });
/* harmony import */ var slick_carousel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! slick-carousel */ "./node_modules/slick-carousel/slick/slick.min.js");
/* harmony import */ var slick_carousel__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(slick_carousel__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ "./assets/js/theme/common/carousel/utils/index.js");


var setCarouselState = function setCarouselState(_ref, carouselObj) {
  var delegateTarget = _ref.delegateTarget;
  var carouselObjCurrent = carouselObj || delegateTarget.slick;
  var $slider = carouselObjCurrent.$slider;
  $slider.data('state', Object(_utils__WEBPACK_IMPORTED_MODULE_1__["getActiveSlideIdxAndSlidesQuantity"])(carouselObjCurrent));
};
var onUserCarouselChange = function onUserCarouselChange(_ref2, context, $slider) {
  var data = _ref2.data;
  var $activeSlider = $slider || data;
  var $parentContainer = $activeSlider.hasClass('productView-thumbnails') ? $activeSlider.parent('.productView-images') : $activeSlider;
  var _$activeSlider$data = $activeSlider.data('state'),
    activeSlideIdx = _$activeSlider$data.activeSlideIdx,
    slidesQuantity = _$activeSlider$data.slidesQuantity;
  var $carouselContentElement = $('[data-carousel-content-change-message]', $parentContainer);
  var carouselContentAnnounceMessage = Object(_utils__WEBPACK_IMPORTED_MODULE_1__["updateTextWithLiveData"])(context.carouselContentAnnounceMessage, activeSlideIdx + 1, slidesQuantity);
  $carouselContentElement.text(carouselContentAnnounceMessage);
};
var onSlickCarouselChange = function onSlickCarouselChange(e, carouselObj, context) {
  var $dots = carouselObj.$dots,
    $slider = carouselObj.$slider,
    $prevArrow = carouselObj.$prevArrow,
    $nextArrow = carouselObj.$nextArrow,
    infinite = carouselObj.options.infinite;
  var _ref3 = $slider.data('state') || Object(_utils__WEBPACK_IMPORTED_MODULE_1__["getActiveSlideIdxAndSlidesQuantity"])(carouselObj),
    activeSlideIdx = _ref3.activeSlideIdx,
    slidesQuantity = _ref3.slidesQuantity;
  Object(_utils__WEBPACK_IMPORTED_MODULE_1__["dotsSetup"])($dots, activeSlideIdx, slidesQuantity, context);
  Object(_utils__WEBPACK_IMPORTED_MODULE_1__["arrowAriaLabling"])($prevArrow, $nextArrow, activeSlideIdx, slidesQuantity, infinite, context.carouselArrowAndDotAriaLabel);
  Object(_utils__WEBPACK_IMPORTED_MODULE_1__["analizeSlides"])($slider.find('.slick-slide'));
  Object(_utils__WEBPACK_IMPORTED_MODULE_1__["refreshFocus"])($prevArrow, $nextArrow, $dots, $slider, activeSlideIdx, slidesQuantity, infinite);
  $slider.data('state', null);
};
/* harmony default export */ __webpack_exports__["default"] = (function (context) {
  $('[data-slick]').each(function (idx, carousel) {
    // getting element using find to pass jest test
    var $carousel = $(document).find(carousel);
    $carousel.on('init breakpoint swipe', setCarouselState);
    $carousel.on('click', '.slick-arrow, .slick-dots', setCarouselState);
    $carousel.on('init breakpoint', function (e, carouselObj) {
      return Object(_utils__WEBPACK_IMPORTED_MODULE_1__["activatePlayPauseButton"])(e, carouselObj, context);
    });
    $carousel.on('init afterChange', function (e, carouselObj) {
      return onSlickCarouselChange(e, carouselObj, context);
    });
    $carousel.on('click', '.slick-arrow, .slick-dots', $carousel, function (e) {
      return onUserCarouselChange(e, context);
    });
    $carousel.on('swipe', function (e, carouselObj) {
      return onUserCarouselChange(e, context, carouselObj.$slider);
    });
    if ($carousel.hasClass('heroCarousel')) {
      $carousel.on('init afterChange', _utils__WEBPACK_IMPORTED_MODULE_1__["handleImageLoad"]);
      $carousel.on('swipe', _utils__WEBPACK_IMPORTED_MODULE_1__["handleImageAspectRatio"]);
      $carousel.on('click', '.slick-arrow, .slick-dots', _utils__WEBPACK_IMPORTED_MODULE_1__["handleImageAspectRatio"]);

      // Alternative image styling for IE, which doesn't support objectfit
      if (typeof document.documentElement.style.objectFit === 'undefined') {
        $carousel.find('.heroCarousel-slide').each(function (index, slide) {
          $(slide).addClass('compat-object-fit');
        });
      }
    }
    var isMultipleSlides = $carousel.children().length > 1;
    var customPaging = isMultipleSlides ? function () {
      return '<button data-carousel-dot type="button"></button>';
    } : function () {};
    $carousel.slick({
      accessibility: false,
      arrows: isMultipleSlides,
      customPaging: customPaging,
      dots: isMultipleSlides
    });
  });
  $(".homepage-layout-1 .productCarousel").each(function (index) {
    var height = $(this).find('.card .card-figure').height();
    $(this).find('.slick-arrow').css('top', height / 2);
  });
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/common/carousel/utils/activatePlayPauseButton.js":
/*!**************************************************************************!*\
  !*** ./assets/js/theme/common/carousel/utils/activatePlayPauseButton.js ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash_throttle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/throttle */ "./node_modules/lodash/throttle.js");
/* harmony import */ var lodash_throttle__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_throttle__WEBPACK_IMPORTED_MODULE_0__);

var PLAY_ACTION = 'slickPlay';
var PAUSE_ACTION = 'slickPause';
var updateButtonLabels = function updateButtonLabels(context) {
  var carouselPlayPauseButtonPlay = context.carouselPlayPauseButtonPlay,
    carouselPlayPauseButtonPause = context.carouselPlayPauseButtonPause,
    carouselPlayPauseButtonAriaPlay = context.carouselPlayPauseButtonAriaPlay,
    carouselPlayPauseButtonAriaPause = context.carouselPlayPauseButtonAriaPause;
  return function ($button, action) {
    $button.attr('aria-label', action === PLAY_ACTION ? carouselPlayPauseButtonAriaPause : carouselPlayPauseButtonAriaPlay).find('.text').text(action === PLAY_ACTION ? carouselPlayPauseButtonPause : carouselPlayPauseButtonPlay).find('.icon').attr('title', action === PLAY_ACTION ? carouselPlayPauseButtonAriaPause : carouselPlayPauseButtonAriaPlay);
  };
};
var updateButtonLabelsWithContext;
/* harmony default export */ __webpack_exports__["default"] = (function (e, carouselObj, context) {
  var $slider = carouselObj.$slider,
    $dots = carouselObj.$dots,
    speed = carouselObj.options.speed;
  var $playPauseButton = $slider.find('[data-play-pause-button]');
  if ($playPauseButton.length === 0) return;

  // for correct carousel controls focus order
  if ($dots) {
    $playPauseButton.insertBefore($dots);
  } else $slider.append($playPauseButton);
  var _$slider$data = $slider.data('state'),
    slidesQuantity = _$slider$data.slidesQuantity;
  $playPauseButton.css('display', slidesQuantity > 1 ? 'block' : 'none');
  if (e.type === 'init') updateButtonLabelsWithContext = updateButtonLabels(context);
  if (e.type === 'breakpoint') {
    updateButtonLabelsWithContext($playPauseButton, PLAY_ACTION);
    return;
  }
  var onPlayPauseClick = function onPlayPauseClick() {
    var action = carouselObj.paused ? PLAY_ACTION : PAUSE_ACTION;
    $slider.slick(action);
    updateButtonLabelsWithContext($playPauseButton, action);
  };
  $playPauseButton.on('click', lodash_throttle__WEBPACK_IMPORTED_MODULE_0___default()(onPlayPauseClick, speed, {
    trailing: false
  }));
});

/***/ }),

/***/ "./assets/js/theme/common/carousel/utils/analizeSlides.js":
/*!****************************************************************!*\
  !*** ./assets/js/theme/common/carousel/utils/analizeSlides.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./assets/js/theme/common/carousel/constants.js");

/* harmony default export */ __webpack_exports__["default"] = (function ($slides) {
  $slides.each(function (idx, slide) {
    var $slide = $(slide);
    var tabIndex = $slide.hasClass('slick-active') ? 0 : -1;
    if ($slide.is(_constants__WEBPACK_IMPORTED_MODULE_0__["FOCUSABLE_ELEMENTS_SELECTOR"])) $slide.attr('tabindex', tabIndex);
    $slide.find(_constants__WEBPACK_IMPORTED_MODULE_0__["FOCUSABLE_ELEMENTS_SELECTOR"]).each(function (index, child) {
      $(child).attr('tabindex', tabIndex);
    });
  });
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/common/carousel/utils/arrowAriaLabling.js":
/*!*******************************************************************!*\
  !*** ./assets/js/theme/common/carousel/utils/arrowAriaLabling.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _updateTextWithLiveData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./updateTextWithLiveData */ "./assets/js/theme/common/carousel/utils/updateTextWithLiveData.js");
/* harmony import */ var _tooltipSetup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tooltipSetup */ "./assets/js/theme/common/carousel/utils/tooltipSetup.js");


/* harmony default export */ __webpack_exports__["default"] = (function ($prevArrow, $nextArrow, activeSlideIdx, slidesQuantity, isInfinite, ariaLabel) {
  if (slidesQuantity < 2 || !$prevArrow || !$nextArrow) return;
  var activeSlideNumber = activeSlideIdx + 1;
  var prevSlideNumber = activeSlideIdx === 0 ? slidesQuantity : activeSlideNumber - 1;
  var arrowLeftText = Object(_updateTextWithLiveData__WEBPACK_IMPORTED_MODULE_0__["default"])(ariaLabel, prevSlideNumber, slidesQuantity);
  $prevArrow.attr({
    'aria-label': arrowLeftText,
    tabindex: !isInfinite && activeSlideIdx === 0 ? -1 : 0
  });
  Object(_tooltipSetup__WEBPACK_IMPORTED_MODULE_1__["default"])($prevArrow);
  var nextSlideNumber = activeSlideIdx === slidesQuantity - 1 ? 1 : activeSlideNumber + 1;
  var arrowRightText = Object(_updateTextWithLiveData__WEBPACK_IMPORTED_MODULE_0__["default"])(ariaLabel, nextSlideNumber, slidesQuantity);
  $nextArrow.attr({
    'aria-label': arrowRightText,
    tabindex: !isInfinite && activeSlideIdx === slidesQuantity - 1 ? -1 : 0
  });
  Object(_tooltipSetup__WEBPACK_IMPORTED_MODULE_1__["default"])($nextArrow);
});

/***/ }),

/***/ "./assets/js/theme/common/carousel/utils/dotsSetup.js":
/*!************************************************************!*\
  !*** ./assets/js/theme/common/carousel/utils/dotsSetup.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var _updateTextWithLiveData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./updateTextWithLiveData */ "./assets/js/theme/common/carousel/utils/updateTextWithLiveData.js");
/* harmony import */ var _tooltipSetup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tooltipSetup */ "./assets/js/theme/common/carousel/utils/tooltipSetup.js");


/* harmony default export */ __webpack_exports__["default"] = (function ($dots, activeSlideIdx, slidesQuantity, _ref) {
  var carouselArrowAndDotAriaLabel = _ref.carouselArrowAndDotAriaLabel,
    carouselActiveDotAriaLabel = _ref.carouselActiveDotAriaLabel;
  if (!$dots) return;
  if (slidesQuantity < 2) {
    $dots.css('display', 'none');
    return;
  }
  $dots.css('display', 'block');
  $dots.children().each(function (idx, dot) {
    var dotLabelText = Object(_updateTextWithLiveData__WEBPACK_IMPORTED_MODULE_0__["default"])(carouselArrowAndDotAriaLabel, idx + 1, slidesQuantity);
    var dotSlideStatusText = idx === activeSlideIdx ? ", " + carouselActiveDotAriaLabel : '';
    var dotAriaLabel = "" + dotLabelText + dotSlideStatusText;
    var $dotButton = $(dot).find('[data-carousel-dot]');
    Object(_tooltipSetup__WEBPACK_IMPORTED_MODULE_1__["default"])($dotButton.attr('aria-label', dotAriaLabel));
  });
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/common/carousel/utils/getActiveSlideIdxAndSlidesQuantity.js":
/*!*************************************************************************************!*\
  !*** ./assets/js/theme/common/carousel/utils/getActiveSlideIdxAndSlidesQuantity.js ***!
  \*************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony default export */ __webpack_exports__["default"] = (function (_ref) {
  var slideCount = _ref.slideCount,
    $slides = _ref.$slides,
    _ref$options = _ref.options,
    slidesToShow = _ref$options.slidesToShow,
    slidesToScroll = _ref$options.slidesToScroll;
  var lastVisibleIdx = $slides.get().reduce(function (acc, curr, idx) {
    if ($(curr).hasClass('slick-active')) return idx;
    return acc;
  }, -1);
  var activeSlideIdx = lastVisibleIdx < slidesToShow ? 0 : Math.ceil((lastVisibleIdx + 1 - slidesToShow) / slidesToScroll);
  var slidesQuantity;
  if (slideCount === 0) {
    slidesQuantity = 0;
  } else if (slideCount <= slidesToShow) {
    slidesQuantity = 1;
  } else slidesQuantity = Math.ceil((slideCount - slidesToShow) / slidesToScroll) + 1;

  // FYI - one slide can contain several card items for product carousel
  return {
    activeSlideIdx: activeSlideIdx,
    slidesQuantity: slidesQuantity
  };
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/common/carousel/utils/getActiveSlideInfo.js":
/*!*********************************************************************!*\
  !*** ./assets/js/theme/common/carousel/utils/getActiveSlideInfo.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (_ref, isAnalyzedDataAttr) {
  var $slider = _ref.$slider;
  var $activeSlide = $slider.find('.slick-current');
  var isAnalyzedSlide = $activeSlide.data(isAnalyzedDataAttr);
  if (isAnalyzedSlide) return {
    isAnalyzedSlide: isAnalyzedSlide
  };
  var $activeSlideImg = $activeSlide.find('.heroCarousel-image');
  var activeSlideImgNode = $activeSlideImg[0];
  return {
    $slider: $slider,
    $activeSlide: $activeSlide,
    $activeSlideImg: $activeSlideImg,
    activeSlideImgNode: activeSlideImgNode
  };
});

/***/ }),

/***/ "./assets/js/theme/common/carousel/utils/handleImageAspectRatio.js":
/*!*************************************************************************!*\
  !*** ./assets/js/theme/common/carousel/utils/handleImageAspectRatio.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var _getActiveSlideInfo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getActiveSlideInfo */ "./assets/js/theme/common/carousel/utils/getActiveSlideInfo.js");

var IMAGE_CLASSES = {
  vertical: 'is-vertical-image-type',
  square: 'is-square-image-type'
};
var IS_ANALYZED_DATA_ATTR = 'image-ratio-analyzed';
var defineAspectRatioClass = function defineAspectRatioClass(imageAspectRatio) {
  switch (true) {
    case imageAspectRatio > 0.8 && imageAspectRatio <= 1.2:
      return IMAGE_CLASSES.square;
    case imageAspectRatio > 1.2:
      return IMAGE_CLASSES.vertical;
    default:
      return '';
  }
};
var setAspectRatioClass = function setAspectRatioClass(imageNode, $slides) {
  if (imageNode.naturalHeight <= 1) return;
  var imageAspectRatio = imageNode.naturalHeight / imageNode.naturalWidth;
  $slides.each(function (idx, slide) {
    return $(slide).addClass(defineAspectRatioClass(imageAspectRatio));
  });
};
/* harmony default export */ __webpack_exports__["default"] = (function (_ref, carouselObj) {
  var delegateTarget = _ref.delegateTarget;
  var _getActiveSlideInfo = Object(_getActiveSlideInfo__WEBPACK_IMPORTED_MODULE_0__["default"])(carouselObj || delegateTarget.slick, IS_ANALYZED_DATA_ATTR),
    isAnalyzedSlide = _getActiveSlideInfo.isAnalyzedSlide,
    $slider = _getActiveSlideInfo.$slider,
    $activeSlide = _getActiveSlideInfo.$activeSlide,
    $activeSlideImg = _getActiveSlideInfo.$activeSlideImg,
    activeSlideImgNode = _getActiveSlideInfo.activeSlideImgNode;
  if (isAnalyzedSlide) return;
  var $activeSlideAndClones = $slider.find("[data-hero-slide=" + $activeSlide.data('hero-slide') + "]");
  $activeSlideAndClones.each(function (idx, slide) {
    return $(slide).data(IS_ANALYZED_DATA_ATTR, true);
  });
  if ($activeSlide.find('.heroCarousel-content').length) return;
  if (activeSlideImgNode.complete) {
    if (activeSlideImgNode.naturalHeight === 1) {
      // only base64 image from srcset was loaded
      $activeSlideImg.on('load', function () {
        return setAspectRatioClass(activeSlideImgNode, $activeSlideAndClones);
      });
    } else if (activeSlideImgNode.naturalHeight > 1) {
      setAspectRatioClass(activeSlideImgNode, $activeSlideAndClones);
    }
  } else $activeSlideImg.on('load', function () {
    return setAspectRatioClass(activeSlideImgNode, $activeSlideAndClones);
  });
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/common/carousel/utils/handleImageLoad.js":
/*!******************************************************************!*\
  !*** ./assets/js/theme/common/carousel/utils/handleImageLoad.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var _utils_ie_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/ie-helpers */ "./assets/js/theme/common/utils/ie-helpers.js");
/* harmony import */ var _getActiveSlideInfo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getActiveSlideInfo */ "./assets/js/theme/common/carousel/utils/getActiveSlideInfo.js");


var IMAGE_ERROR_CLASS = 'is-image-error';
var IS_ANALYZED_DATA_ATTR = 'image-load-analyzed';
var generateImage = function generateImage($slide, $image) {
  $('<img />').on('error', function () {
    return $slide.addClass(IMAGE_ERROR_CLASS);
  }).attr('src', $image.attr('src'));
};
/* harmony default export */ __webpack_exports__["default"] = (function (e, carouselObj) {
  var _getActiveSlideInfo = Object(_getActiveSlideInfo__WEBPACK_IMPORTED_MODULE_1__["default"])(carouselObj, IS_ANALYZED_DATA_ATTR),
    isAnalyzedSlide = _getActiveSlideInfo.isAnalyzedSlide,
    $activeSlide = _getActiveSlideInfo.$activeSlide,
    $activeSlideImg = _getActiveSlideInfo.$activeSlideImg,
    activeSlideImgNode = _getActiveSlideInfo.activeSlideImgNode;
  if (isAnalyzedSlide) return;
  $activeSlide.data(IS_ANALYZED_DATA_ATTR, true);
  if (activeSlideImgNode.complete) {
    if (activeSlideImgNode.naturalHeight === 0) {
      $activeSlide.addClass(IMAGE_ERROR_CLASS);
    } else if (activeSlideImgNode.naturalHeight === 1) {
      // only base64 image from srcset was loaded
      $activeSlideImg.on('error', function () {
        return $activeSlide.addClass(IMAGE_ERROR_CLASS);
      });
    }
    return;
  }
  if (!$activeSlideImg.attr('src')) {
    $activeSlide.addClass(IMAGE_ERROR_CLASS);
    return;
  }
  if (_utils_ie_helpers__WEBPACK_IMPORTED_MODULE_0__["isBrowserIE"]) {
    generateImage($activeSlide, $activeSlideImg);
    return;
  }
  $activeSlideImg.on('error', function () {
    return $activeSlide.addClass(IMAGE_ERROR_CLASS);
  });
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/common/carousel/utils/index.js":
/*!********************************************************!*\
  !*** ./assets/js/theme/common/carousel/utils/index.js ***!
  \********************************************************/
/*! exports provided: activatePlayPauseButton, analizeSlides, arrowAriaLabling, dotsSetup, getActiveSlideIdxAndSlidesQuantity, handleImageAspectRatio, handleImageLoad, refreshFocus, updateTextWithLiveData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _activatePlayPauseButton__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./activatePlayPauseButton */ "./assets/js/theme/common/carousel/utils/activatePlayPauseButton.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "activatePlayPauseButton", function() { return _activatePlayPauseButton__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _analizeSlides__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./analizeSlides */ "./assets/js/theme/common/carousel/utils/analizeSlides.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "analizeSlides", function() { return _analizeSlides__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _arrowAriaLabling__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./arrowAriaLabling */ "./assets/js/theme/common/carousel/utils/arrowAriaLabling.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arrowAriaLabling", function() { return _arrowAriaLabling__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _dotsSetup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dotsSetup */ "./assets/js/theme/common/carousel/utils/dotsSetup.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dotsSetup", function() { return _dotsSetup__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _getActiveSlideIdxAndSlidesQuantity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getActiveSlideIdxAndSlidesQuantity */ "./assets/js/theme/common/carousel/utils/getActiveSlideIdxAndSlidesQuantity.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getActiveSlideIdxAndSlidesQuantity", function() { return _getActiveSlideIdxAndSlidesQuantity__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _handleImageAspectRatio__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./handleImageAspectRatio */ "./assets/js/theme/common/carousel/utils/handleImageAspectRatio.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "handleImageAspectRatio", function() { return _handleImageAspectRatio__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _handleImageLoad__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./handleImageLoad */ "./assets/js/theme/common/carousel/utils/handleImageLoad.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "handleImageLoad", function() { return _handleImageLoad__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _refreshFocus__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./refreshFocus */ "./assets/js/theme/common/carousel/utils/refreshFocus.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "refreshFocus", function() { return _refreshFocus__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _updateTextWithLiveData__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./updateTextWithLiveData */ "./assets/js/theme/common/carousel/utils/updateTextWithLiveData.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "updateTextWithLiveData", function() { return _updateTextWithLiveData__WEBPACK_IMPORTED_MODULE_8__["default"]; });











/***/ }),

/***/ "./assets/js/theme/common/carousel/utils/refreshFocus.js":
/*!***************************************************************!*\
  !*** ./assets/js/theme/common/carousel/utils/refreshFocus.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./assets/js/theme/common/carousel/constants.js");

/* harmony default export */ __webpack_exports__["default"] = (function ($prevArrow, $nextArrow, $dots, $slider, activeSlideIdx, slidesQuantity, isInfinite) {
  if (isInfinite || !$prevArrow || !$nextArrow) return;
  if (activeSlideIdx === 0 && $prevArrow.is(':focus')) {
    $nextArrow.focus();
  } else if (activeSlideIdx === slidesQuantity - 1 && $nextArrow.is(':focus')) {
    if ($dots) {
      $dots.children().first().find('[data-carousel-dot]').focus();
      return;
    }
    var $firstActiveSlide = $slider.find('.slick-active').first();
    if ($firstActiveSlide.is(_constants__WEBPACK_IMPORTED_MODULE_0__["FOCUSABLE_ELEMENTS_SELECTOR"])) {
      $firstActiveSlide.focus();
    } else $firstActiveSlide.find(_constants__WEBPACK_IMPORTED_MODULE_0__["FOCUSABLE_ELEMENTS_SELECTOR"]).first().focus();
  }
});

/***/ }),

/***/ "./assets/js/theme/common/carousel/utils/tooltipSetup.js":
/*!***************************************************************!*\
  !*** ./assets/js/theme/common/carousel/utils/tooltipSetup.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {var TOOLTIP_DATA_SELECTOR = 'data-carousel-tooltip';
var TOOLTIP_CLASS = 'carousel-tooltip';
var TOOLTIP_NODE = "<span " + TOOLTIP_DATA_SELECTOR + " class=\"" + TOOLTIP_CLASS + "\"></span>";
/* harmony default export */ __webpack_exports__["default"] = (function ($node) {
  var $existedTooltip = $node.find("[" + TOOLTIP_DATA_SELECTOR + "]");
  if ($existedTooltip.length) {
    $existedTooltip.attr('aria-label', $node.attr('aria-label'));
  } else {
    var $tooltip = $(TOOLTIP_NODE).attr('aria-label', $node.attr('aria-label'));
    $node.append($tooltip);
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/common/carousel/utils/updateTextWithLiveData.js":
/*!*************************************************************************!*\
  !*** ./assets/js/theme/common/carousel/utils/updateTextWithLiveData.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var SLIDE_NUMBER = '[SLIDE_NUMBER]';
var SLIDES_QUANTITY = '[SLIDES_QUANTITY]';
/* harmony default export */ __webpack_exports__["default"] = (function (textForChange, slideNumber, slidesQuantity) {
  return textForChange.replace(SLIDE_NUMBER, slideNumber).replace(SLIDES_QUANTITY, slidesQuantity);
});

/***/ }),

/***/ "./assets/js/theme/common/cart-item-details.js":
/*!*****************************************************!*\
  !*** ./assets/js/theme/common/cart-item-details.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return CartItemDetails; });
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/isEmpty */ "./node_modules/lodash/isEmpty.js");
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bigcommerce/stencil-utils */ "./node_modules/@bigcommerce/stencil-utils/src/main.js");
/* harmony import */ var _product_details_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./product-details-base */ "./assets/js/theme/common/product-details-base.js");
/* harmony import */ var _utils_ie_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/ie-helpers */ "./assets/js/theme/common/utils/ie-helpers.js");

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }



var CartItemDetails = /*#__PURE__*/function (_ProductDetailsBase) {
  _inheritsLoose(CartItemDetails, _ProductDetailsBase);
  function CartItemDetails($scope, context, productAttributesData) {
    var _this;
    if (productAttributesData === void 0) {
      productAttributesData = {};
    }
    _this = _ProductDetailsBase.call(this, $scope, context) || this;
    var $form = $('#CartEditProductFieldsForm', _this.$scope);
    var $productOptionsElement = $('[data-product-attributes-wrapper]', $form);
    var hasOptions = $productOptionsElement.html().trim().length;
    var hasDefaultOptions = $productOptionsElement.find('[data-default]').length;
    $productOptionsElement.on('change', function () {
      _this.setProductVariant();
    });
    var optionChangeCallback = _product_details_base__WEBPACK_IMPORTED_MODULE_2__["optionChangeDecorator"].call(_assertThisInitialized(_this), hasDefaultOptions);

    // Update product attributes. Also update the initial view in case items are oos
    // or have default variant properties that change the view
    if ((lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0___default()(productAttributesData) || hasDefaultOptions) && hasOptions) {
      var productId = _this.context.productForChangeId;
      _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_1__["default"].api.productAttributes.optionChange(productId, $form.serialize(), 'products/bulk-discount-rates', optionChangeCallback);
    } else {
      _this.updateProductAttributes(productAttributesData);
    }
    return _this;
  }
  var _proto = CartItemDetails.prototype;
  _proto.setProductVariant = function setProductVariant() {
    var unsatisfiedRequiredFields = [];
    var options = [];
    $.each($('[data-product-attribute]'), function (index, value) {
      var optionLabel = value.children[0].innerText;
      var optionTitle = optionLabel.split(':')[0].trim();
      var required = optionLabel.toLowerCase().includes('required');
      var type = value.getAttribute('data-product-attribute');
      if ((type === 'input-file' || type === 'input-text' || type === 'input-number') && value.querySelector('input').value === '' && required) {
        unsatisfiedRequiredFields.push(value);
      }
      if (type === 'textarea' && value.querySelector('textarea').value === '' && required) {
        unsatisfiedRequiredFields.push(value);
      }
      if (type === 'date') {
        var isSatisfied = Array.from(value.querySelectorAll('select')).every(function (select) {
          return select.selectedIndex !== 0;
        });
        if (isSatisfied) {
          var dateString = Array.from(value.querySelectorAll('select')).map(function (x) {
            return x.value;
          }).join('-');
          options.push(optionTitle + ":" + dateString);
          return;
        }
        if (required) {
          unsatisfiedRequiredFields.push(value);
        }
      }
      if (type === 'set-select') {
        var select = value.querySelector('select');
        var selectedIndex = select.selectedIndex;
        if (selectedIndex !== 0) {
          options.push(optionTitle + ":" + select.options[selectedIndex].innerText);
          return;
        }
        if (required) {
          unsatisfiedRequiredFields.push(value);
        }
      }
      if (type === 'set-rectangle' || type === 'set-radio' || type === 'swatch' || type === 'input-checkbox' || type === 'product-list') {
        var checked = value.querySelector(':checked');
        if (checked) {
          var getSelectedOptionLabel = function getSelectedOptionLabel() {
            var productVariantslist = Object(_utils_ie_helpers__WEBPACK_IMPORTED_MODULE_3__["convertIntoArray"])(value.children);
            var matchLabelForCheckedInput = function matchLabelForCheckedInput(inpt) {
              return inpt.dataset.productAttributeValue === checked.value;
            };
            return productVariantslist.filter(matchLabelForCheckedInput)[0];
          };
          if (type === 'set-rectangle' || type === 'set-radio' || type === 'product-list') {
            var label = _utils_ie_helpers__WEBPACK_IMPORTED_MODULE_3__["isBrowserIE"] ? getSelectedOptionLabel().innerText.trim() : checked.labels[0].innerText;
            if (label) {
              options.push(optionTitle + ":" + label);
            }
          }
          if (type === 'swatch') {
            var _label = _utils_ie_helpers__WEBPACK_IMPORTED_MODULE_3__["isBrowserIE"] ? getSelectedOptionLabel().children[0] : checked.labels[0].children[0];
            if (_label) {
              options.push(optionTitle + ":" + _label.title);
            }
          }
          if (type === 'input-checkbox') {
            options.push(optionTitle + ":Yes");
          }
          return;
        }
        if (type === 'input-checkbox') {
          options.push(optionTitle + ":No");
        }
        if (required) {
          unsatisfiedRequiredFields.push(value);
        }
      }
    });
    var productVariant = unsatisfiedRequiredFields.length === 0 ? options.sort().join(', ') : 'unsatisfied';
    var view = $('.modal-header-title');
    if (productVariant) {
      productVariant = productVariant === 'unsatisfied' ? '' : productVariant;
      if (view.attr('data-event-type')) {
        view.attr('data-product-variant', productVariant);
      } else {
        var productName = view.html().match(/'(.*?)'/)[1];
        var card = $("[data-name=\"" + productName + "\"]");
        card.attr('data-product-variant', productVariant);
      }
    }
  }

  /**
   * Hide or mark as unavailable out of stock attributes if enabled
   * @param  {Object} data Product attribute data
   */;
  _proto.updateProductAttributes = function updateProductAttributes(data) {
    _ProductDetailsBase.prototype.updateProductAttributes.call(this, data);
    this.$scope.find('.modal-content').removeClass('hide-content');
  };
  return CartItemDetails;
}(_product_details_base__WEBPACK_IMPORTED_MODULE_2__["default"]);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/common/collapsible-group.js":
/*!*****************************************************!*\
  !*** ./assets/js/theme/common/collapsible-group.js ***!
  \*****************************************************/
/*! exports provided: CollapsibleGroup, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CollapsibleGroup", function() { return CollapsibleGroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return collapsibleGroupFactory; });
/* harmony import */ var _common_collapsible__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/collapsible */ "./assets/js/theme/common/collapsible.js");

var PLUGIN_KEY = 'collapsible-group';

/*
 * Manage multiple instances of collapsibles. For example, if a collapsible is
 * about to open and there's one already open, close the latter first.
 * @param {jQuery} $component
 */
var CollapsibleGroup = /*#__PURE__*/function () {
  function CollapsibleGroup($component) {
    this.$component = $component;
    this.openCollapsible = null;

    // Auto bind
    this.onCollapsibleOpen = this.onCollapsibleOpen.bind(this);
    this.onCollapsibleClose = this.onCollapsibleClose.bind(this);

    // Listen
    this.bindEvents();
  }
  var _proto = CollapsibleGroup.prototype;
  _proto.close = function close() {
    if (this.openCollapsible && !this.openCollapsible.disabled) {
      this.openCollapsible.close();
    }
  };
  _proto.bindEvents = function bindEvents() {
    this.$component.on(_common_collapsible__WEBPACK_IMPORTED_MODULE_0__["CollapsibleEvents"].open, this.onCollapsibleOpen);
    this.$component.on(_common_collapsible__WEBPACK_IMPORTED_MODULE_0__["CollapsibleEvents"].close, this.onCollapsibleClose);
  };
  _proto.unbindEvents = function unbindEvents() {
    this.$component.off(_common_collapsible__WEBPACK_IMPORTED_MODULE_0__["CollapsibleEvents"].open, this.onCollapsibleOpen);
    this.$component.off(_common_collapsible__WEBPACK_IMPORTED_MODULE_0__["CollapsibleEvents"].close, this.onCollapsibleClose);
  };
  _proto.onCollapsibleOpen = function onCollapsibleOpen(event, collapsibleInstance) {
    if (this.openCollapsible && this.openCollapsible.hasCollapsible(collapsibleInstance)) {
      return;
    }
    this.close();
    this.openCollapsible = collapsibleInstance;
  };
  _proto.onCollapsibleClose = function onCollapsibleClose(event, collapsibleInstance) {
    if (this.openCollapsible && this.openCollapsible.hasCollapsible(collapsibleInstance)) {
      return;
    }
    this.openCollapsible = null;
  };
  return CollapsibleGroup;
}();

/**
 * Create new CollapsibleGroup instances
 * @param {string} [selector]
 * @param {Object} [options]
 * @param {Object} [options.$context]
 * @return {Array} array of CollapsibleGroup instances
 */
function collapsibleGroupFactory(selector, options) {
  if (selector === void 0) {
    selector = "[data-" + PLUGIN_KEY + "]";
  }
  if (options === void 0) {
    options = {};
  }
  var $groups = $(selector, options.$context);
  var instanceKey = PLUGIN_KEY + "Instance";
  return $groups.map(function (index, element) {
    var $group = $(element);
    var cachedGroup = $group.data(instanceKey);
    if (cachedGroup instanceof CollapsibleGroup) {
      return cachedGroup;
    }
    var group = new CollapsibleGroup($group);
    $group.data(instanceKey, group);
    return group;
  }).toArray();
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/common/collapsible.js":
/*!***********************************************!*\
  !*** ./assets/js/theme/common/collapsible.js ***!
  \***********************************************/
/*! exports provided: CollapsibleEvents, Collapsible, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CollapsibleEvents", function() { return CollapsibleEvents; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Collapsible", function() { return Collapsible; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return collapsibleFactory; });
/* harmony import */ var lodash_extend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/extend */ "./node_modules/lodash/extend.js");
/* harmony import */ var lodash_extend__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_extend__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _media_query_list__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./media-query-list */ "./assets/js/theme/common/media-query-list.js");

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var PLUGIN_KEY = 'collapsible';
var CollapsibleEvents = {
  open: 'open.collapsible',
  close: 'close.collapsible',
  toggle: 'toggle.collapsible',
  click: 'click.collapsible'
};
var CollapsibleState = {
  closed: 'closed',
  open: 'open'
};
function prependHash(id) {
  if (id && id.indexOf('#') === 0) {
    return id;
  }
  return "#" + id;
}
function optionsFromData($element) {
  return {
    disabledBreakpoint: $element.data(PLUGIN_KEY + "DisabledBreakpoint"),
    disabledState: $element.data(PLUGIN_KEY + "DisabledState"),
    enabledState: $element.data(PLUGIN_KEY + "EnabledState"),
    openClassName: $element.data(PLUGIN_KEY + "OpenClassName")
  };
}

/**
 * Collapse/Expand toggle
 */
var Collapsible = /*#__PURE__*/function () {
  /**
   * @param {jQuery} $toggle - Trigger button
   * @param {jQuery} $target - Content to collapse / expand
   * @param {Object} [options] - Configurable options
   * @param {Object} [options.$context]
   * @param {String} [options.disabledBreakpoint]
   * @param {Object} [options.disabledState]
   * @param {Object} [options.enabledState]
   * @param {String} [options.openClassName]
   * @example
   *
   * <button id="#more">Collapse</button>
   * <div id="content">...</div>
   *
   * new Collapsible($('#more'), $('#content'));
   */
  function Collapsible($toggle, $target, _temp) {
    var _ref = _temp === void 0 ? {} : _temp,
      disabledBreakpoint = _ref.disabledBreakpoint,
      disabledState = _ref.disabledState,
      enabledState = _ref.enabledState,
      _ref$openClassName = _ref.openClassName,
      openClassName = _ref$openClassName === void 0 ? 'is-open' : _ref$openClassName;
    this.$toggle = $toggle;
    this.$target = $target;
    this.targetId = $target.attr('id');
    this.openClassName = openClassName;
    this.disabledState = disabledState;
    this.enabledState = enabledState;
    if (disabledBreakpoint) {
      this.disabledMediaQueryList = Object(_media_query_list__WEBPACK_IMPORTED_MODULE_1__["default"])(disabledBreakpoint);
    }
    if (this.disabledMediaQueryList) {
      this.disabled = this.disabledMediaQueryList.matches;
    } else {
      this.disabled = false;
    }

    // Auto-bind
    this.onClicked = this.onClicked.bind(this);
    this.onDisabledMediaQueryListMatch = this.onDisabledMediaQueryListMatch.bind(this);

    // Assign DOM attributes
    this.$target.attr('aria-hidden', this.isCollapsed);
    this.$toggle.attr('aria-label', this._getToggleAriaLabelText($toggle)).attr('aria-controls', $target.attr('id')).attr('aria-expanded', this.isOpen);

    // Listen
    this.bindEvents();
  }
  var _proto = Collapsible.prototype;
  _proto._getToggleAriaLabelText = function _getToggleAriaLabelText($toggle) {
    var $textToggleChildren = $toggle.children().filter(function (__, child) {
      return $(child).text().trim();
    });
    var $ariaLabelTarget = $textToggleChildren.length ? $textToggleChildren.first() : $toggle;
    return $($ariaLabelTarget).text().trim();
  };
  _proto.open = function open(_temp2) {
    var _ref2 = _temp2 === void 0 ? {} : _temp2,
      _ref2$notify = _ref2.notify,
      notify = _ref2$notify === void 0 ? true : _ref2$notify;
    this.$toggle.addClass(this.openClassName).attr('aria-expanded', true);
    this.$target.addClass(this.openClassName).attr('aria-hidden', false);
    if (notify) {
      this.$toggle.trigger(CollapsibleEvents.open, [this]);
      this.$toggle.trigger(CollapsibleEvents.toggle, [this]);
    }
  };
  _proto.close = function close(_temp3) {
    var _ref3 = _temp3 === void 0 ? {} : _temp3,
      _ref3$notify = _ref3.notify,
      notify = _ref3$notify === void 0 ? true : _ref3$notify;
    this.$toggle.removeClass(this.openClassName).attr('aria-expanded', false);
    this.$target.removeClass(this.openClassName).attr('aria-hidden', true);
    if (notify) {
      this.$toggle.trigger(CollapsibleEvents.close, [this]);
      this.$toggle.trigger(CollapsibleEvents.toggle, [this]);
    }
  };
  _proto.toggle = function toggle() {
    if (this.isCollapsed) {
      this.open();
    } else {
      this.close();
    }
  };
  _proto.toggleByState = function toggleByState(state) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    switch (state) {
      case CollapsibleState.open:
        return this.open.apply(this, args);
      case CollapsibleState.closed:
        return this.close.apply(this, args);
      default:
        return undefined;
    }
  };
  _proto.hasCollapsible = function hasCollapsible(collapsibleInstance) {
    return $.contains(this.$target.get(0), collapsibleInstance.$target.get(0));
  };
  _proto.bindEvents = function bindEvents() {
    this.$toggle.on(CollapsibleEvents.click, this.onClicked);
    if (this.disabledMediaQueryList && this.disabledMediaQueryList.addListener) {
      this.disabledMediaQueryList.addListener(this.onDisabledMediaQueryListMatch);
    }
  };
  _proto.unbindEvents = function unbindEvents() {
    this.$toggle.off(CollapsibleEvents.click, this.onClicked);
    if (this.disabledMediaQueryList && this.disabledMediaQueryList.removeListener) {
      this.disabledMediaQueryList.removeListener(this.onDisabledMediaQueryListMatch);
    }
  };
  _proto.onClicked = function onClicked(event) {
    if (this.disabled) {
      return;
    }
    event.preventDefault();
    this.toggle();
  };
  _proto.onDisabledMediaQueryListMatch = function onDisabledMediaQueryListMatch(media) {
    this.disabled = media.matches;
  };
  _createClass(Collapsible, [{
    key: "isCollapsed",
    get: function get() {
      return this.$target.is(':hidden') && !this.$target.hasClass(this.openClassName);
    }
  }, {
    key: "isOpen",
    get: function get() {
      return !this.isCollapsed;
    }
  }, {
    key: "disabled",
    get: function get() {
      return this._disabled;
    },
    set: function set(disabled) {
      this._disabled = disabled;
      if (disabled) {
        this.toggleByState(this.disabledState);
      } else {
        this.toggleByState(this.enabledState);
      }
    }
  }]);
  return Collapsible;
}();

/**
 * Convenience method for constructing Collapsible instance
 *
 * @param {string} [selector]
 * @param {Object} [overrideOptions]
 * @param {Object} [overrideOptions.$context]
 * @param {String} [overrideOptions.disabledBreakpoint]
 * @param {Object} [overrideOptions.disabledState]
 * @param {Object} [overrideOptions.enabledState]
 * @param {String} [overrideOptions.openClassName]
 * @return {Array} array of Collapsible instances
 *
 * @example
 * <a href="#content" data-collapsible>Collapse</a>
 * <div id="content">...</div>
 *
 * collapsibleFactory();
 */
function collapsibleFactory(selector, overrideOptions) {
  if (selector === void 0) {
    selector = "[data-" + PLUGIN_KEY + "]";
  }
  if (overrideOptions === void 0) {
    overrideOptions = {};
  }
  var $collapsibles = $(selector, overrideOptions.$context);
  return $collapsibles.map(function (index, element) {
    var $toggle = $(element);
    var instanceKey = PLUGIN_KEY + "Instance";
    var cachedCollapsible = $toggle.data(instanceKey);
    if (cachedCollapsible instanceof Collapsible) {
      return cachedCollapsible;
    }
    var targetId = prependHash($toggle.data(PLUGIN_KEY) || $toggle.data(PLUGIN_KEY + "Target") || $toggle.attr('href'));
    var options = lodash_extend__WEBPACK_IMPORTED_MODULE_0___default()(optionsFromData($toggle), overrideOptions);
    var collapsible = new Collapsible($toggle, $(targetId, overrideOptions.$context), options);
    $toggle.data(instanceKey, collapsible);
    return collapsible;
  }).toArray();
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/common/gift-certificate-validator.js":
/*!**************************************************************!*\
  !*** ./assets/js/theme/common/gift-certificate-validator.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (cert) {
  if (typeof cert !== 'string') {
    return false;
  }

  // Add any custom gift certificate validation logic here
  return true;
});

/***/ }),

/***/ "./assets/js/theme/common/media-query-list.js":
/*!****************************************************!*\
  !*** ./assets/js/theme/common/media-query-list.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return mediaQueryListFactory; });
/*
 * Remember to update /assets/scss/settings/global/screensizes/screensizes.scss
 * if you decide to change breakpoint values
 */
var breakpointSizes = {
  large: 1281,
  medium: 1025,
  small: 551
};

/**
 * Create MediaQueryList using breakpoint name
 * @param {string} breakpointName
 * @return {MediaQueryList|null}
 */
function mediaQueryListFactory(breakpointName) {
  if (!breakpointName || !window.matchMedia) {
    return null;
  }
  var breakpoint = breakpointSizes[breakpointName];
  var mediaQuery = "(min-width: " + breakpoint + "px)";
  var mediaQueryList = window.matchMedia(mediaQuery);
  return mediaQueryList;
}

/***/ }),

/***/ "./assets/js/theme/common/models/forms.js":
/*!************************************************!*\
  !*** ./assets/js/theme/common/models/forms.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var forms = {
  email: function email(value) {
    var re = /^.+@.+\..+/;
    return re.test(value);
  },
  /**
   * Validates a password field
   * @param value
   * @returns {boolean}
   */
  password: function password(value) {
    return this.notEmpty(value);
  },
  /**
   * validates if a field is empty
   * @param value
   * @returns {boolean}
   *
   */
  notEmpty: function notEmpty(value) {
    return value.length > 0;
  }
};
/* harmony default export */ __webpack_exports__["default"] = (forms);

/***/ }),

/***/ "./assets/js/theme/common/nod-functions/min-max-validate.js":
/*!******************************************************************!*\
  !*** ./assets/js/theme/common/nod-functions/min-max-validate.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var lodash_isNaN__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/isNaN */ "./node_modules/lodash/isNaN.js");
/* harmony import */ var lodash_isNaN__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_isNaN__WEBPACK_IMPORTED_MODULE_0__);

function minMaxValidate(minInputSelector, maxInputSelector) {
  function validate(cb) {
    var minValue = parseFloat($(minInputSelector).val());
    var maxValue = parseFloat($(maxInputSelector).val());
    if (maxValue > minValue || lodash_isNaN__WEBPACK_IMPORTED_MODULE_0___default()(maxValue) || lodash_isNaN__WEBPACK_IMPORTED_MODULE_0___default()(minValue)) {
      return cb(true);
    }
    return cb(false);
  }
  return validate;
}
/* harmony default export */ __webpack_exports__["default"] = (minMaxValidate);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/common/nod.js":
/*!***************************************!*\
  !*** ./assets/js/theme/common/nod.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var nod_validate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nod-validate */ "./node_modules/nod-validate/nod.js");
/* harmony import */ var nod_validate__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(nod_validate__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nod_functions_min_max_validate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./nod-functions/min-max-validate */ "./assets/js/theme/common/nod-functions/min-max-validate.js");



// Hook our SCSS framework form field status classes into the nod validation system before use
nod_validate__WEBPACK_IMPORTED_MODULE_0___default.a.classes.errorClass = 'form-field--error';
nod_validate__WEBPACK_IMPORTED_MODULE_0___default.a.classes.successClass = 'form-field--success';
nod_validate__WEBPACK_IMPORTED_MODULE_0___default.a.classes.errorMessageClass = 'form-inlineMessage';

// Register validate functions
nod_validate__WEBPACK_IMPORTED_MODULE_0___default.a.checkFunctions['min-max'] = _nod_functions_min_max_validate__WEBPACK_IMPORTED_MODULE_1__["default"];
/* harmony default export */ __webpack_exports__["default"] = (nod_validate__WEBPACK_IMPORTED_MODULE_0___default.a);

/***/ }),

/***/ "./assets/js/theme/common/product-details-base.js":
/*!********************************************************!*\
  !*** ./assets/js/theme/common/product-details-base.js ***!
  \********************************************************/
/*! exports provided: optionChangeDecorator, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "optionChangeDecorator", function() { return optionChangeDecorator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ProductDetailsBase; });
/* harmony import */ var lodash_isNumber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/isNumber */ "./node_modules/lodash/isNumber.js");
/* harmony import */ var lodash_isNumber__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_isNumber__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_isObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isObject */ "./node_modules/lodash/isObject.js");
/* harmony import */ var lodash_isObject__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isObject__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wishlist__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../wishlist */ "./assets/js/theme/wishlist.js");
/* harmony import */ var _aria__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./aria */ "./assets/js/theme/common/aria/index.js");




var optionsTypesMap = {
  INPUT_FILE: 'input-file',
  INPUT_TEXT: 'input-text',
  INPUT_NUMBER: 'input-number',
  INPUT_CHECKBOX: 'input-checkbox',
  TEXTAREA: 'textarea',
  DATE: 'date',
  SET_SELECT: 'set-select',
  SET_RECTANGLE: 'set-rectangle',
  SET_RADIO: 'set-radio',
  SWATCH: 'swatch',
  PRODUCT_LIST: 'product-list'
};
function optionChangeDecorator(areDefaultOtionsSet) {
  var _this = this;
  return function (err, response) {
    var attributesData = response.data || {};
    var attributesContent = response.content || {};
    _this.updateProductAttributes(attributesData);
    if (areDefaultOtionsSet) {
      _this.updateView(attributesData, attributesContent);
    } else {
      _this.updateDefaultAttributesForOOS(attributesData);
    }
  };
}
var ProductDetailsBase = /*#__PURE__*/function () {
  function ProductDetailsBase($scope, context) {
    var _this2 = this;
    this.$scope = $scope;
    this.context = context;
    this.initRadioAttributes();
    _wishlist__WEBPACK_IMPORTED_MODULE_2__["default"].load(this.context);
    this.getTabRequests();
    $('[data-product-attribute]').each(function (__, value) {
      var type = value.getAttribute('data-product-attribute');
      _this2._makeProductVariantAccessible(value, type);
    });
  }
  var _proto = ProductDetailsBase.prototype;
  _proto._makeProductVariantAccessible = function _makeProductVariantAccessible(variantDomNode, variantType) {
    switch (variantType) {
      case optionsTypesMap.SET_RADIO:
      case optionsTypesMap.SWATCH:
        {
          Object(_aria__WEBPACK_IMPORTED_MODULE_3__["initRadioOptions"])($(variantDomNode), '[type=radio]');
          break;
        }
      default:
        break;
    }
  }

  /**
   * Allow radio buttons to get deselected
   */;
  _proto.initRadioAttributes = function initRadioAttributes() {
    var _this3 = this;
    $('[data-product-attribute] input[type="radio"]', this.$scope).each(function (i, radio) {
      var $radio = $(radio);

      // Only bind to click once
      if ($radio.attr('data-state') !== undefined) {
        $radio.on('click', function () {
          if ($radio.data('state') === true) {
            $radio.prop('checked', false);
            $radio.data('state', false);
            $radio.trigger('change');
          } else {
            $radio.data('state', true);
          }
          _this3.initRadioAttributes();
        });
      }
      $radio.attr('data-state', $radio.prop('checked'));
    });
  }

  /**
   * Hide or mark as unavailable out of stock attributes if enabled
   * @param  {Object} data Product attribute data
   */;
  _proto.updateProductAttributes = function updateProductAttributes(data) {
    var _this4 = this;
    var behavior = data.out_of_stock_behavior;
    var inStockIds = data.in_stock_attributes;
    var outOfStockMessage = " (" + data.out_of_stock_message + ")";
    if (behavior !== 'hide_option' && behavior !== 'label_option') {
      return;
    }
    $('[data-product-attribute-value]', this.$scope).each(function (i, attribute) {
      var $attribute = $(attribute);
      var attrId = parseInt($attribute.data('productAttributeValue'), 10);
      if ($attribute.closest('[data-fbt-option-change]').length) return;
      if (inStockIds.indexOf(attrId) !== -1) {
        _this4.enableAttribute($attribute, behavior, outOfStockMessage);
      } else {
        _this4.disableAttribute($attribute, behavior, outOfStockMessage);
      }
    });
  }

  /**
   * Check for fragment identifier in URL requesting a specific tab
   */;
  _proto.getTabRequests = function getTabRequests() {
    if (window.location.hash && window.location.hash.indexOf('#tab-') === 0) {
      var $activeTab = $('.tabs').has("[href='" + window.location.hash + "']");
      var $tabContent = $("" + window.location.hash);
      if ($activeTab.length > 0) {
        $activeTab.find('.tab').removeClass('is-active').has("[href='" + window.location.hash + "']").addClass('is-active');
        $tabContent.addClass('is-active').siblings().removeClass('is-active');
      }
    }
  }

  /**
   * Since $productView can be dynamically inserted using render_with,
   * We have to retrieve the respective elements
   *
   * @param $scope
   */;
  _proto.getViewModel = function getViewModel($scope) {
    return {
      $priceWithTax: $('[data-product-price-with-tax]', $scope),
      $priceWithoutTax: $('[data-product-price-without-tax]', $scope),
      rrpWithTax: {
        $div: $('.rrp-price--withTax', $scope),
        $span: $('[data-product-rrp-with-tax]', $scope)
      },
      rrpWithoutTax: {
        $div: $('.rrp-price--withoutTax', $scope),
        $span: $('[data-product-rrp-price-without-tax]', $scope)
      },
      nonSaleWithTax: {
        $div: $('.non-sale-price--withTax', $scope),
        $span: $('[data-product-non-sale-price-with-tax]', $scope)
      },
      nonSaleWithoutTax: {
        $div: $('.non-sale-price--withoutTax', $scope),
        $span: $('[data-product-non-sale-price-without-tax]', $scope)
      },
      priceSaved: {
        $div: $('.price-section--saving', $scope),
        $span: $('[data-product-price-saved]', $scope)
      },
      priceNowLabel: {
        $span: $('.price-now-label', $scope)
      },
      priceLabel: {
        $span: $('.price-label', $scope)
      },
      $weight: $('.productView-info [data-product-weight]', $scope),
      $increments: $('.form-field--increments :input', $scope),
      $addToCart: $('#form-action-addToCart', $scope),
      $wishlistVariation: $('[data-wishlist-add] [name="variation_id"]', $scope),
      stock: {
        $container: $('.form-field--stock', $scope),
        $input: $('[data-product-stock]', $scope)
      },
      sku: {
        $label: $('dt.sku-label', $scope),
        $value: $('[data-product-sku]', $scope)
      },
      upc: {
        $label: $('dt.upc-label', $scope),
        $value: $('[data-product-upc]', $scope)
      },
      quantity: {
        $text: $('.incrementTotal', $scope),
        $input: $('[name=qty\\[\\]]', $scope)
      },
      $bulkPricing: $('.productView-info-bulkPricing', $scope)
    };
  }

  /**
   * Hide the pricing elements that will show up only when the price exists in API
   * @param viewModel
   */;
  _proto.clearPricingNotFound = function clearPricingNotFound(viewModel) {
    viewModel.rrpWithTax.$div.hide();
    viewModel.rrpWithoutTax.$div.hide();
    viewModel.nonSaleWithTax.$div.hide();
    viewModel.nonSaleWithoutTax.$div.hide();
    viewModel.priceSaved.$div.hide();
    viewModel.priceNowLabel.$span.hide();
    viewModel.priceLabel.$span.hide();
  }

  /**
   * Update the view of price, messages, SKU and stock options when a product option changes
   * @param  {Object} data Product attribute data
   */;
  _proto.updateView = function updateView(data, content) {
    if (content === void 0) {
      content = null;
    }
    var $thisScope = this.$scope.find('.productView-details');
    var viewModel = this.getViewModel($thisScope);
    this.showMessageBox(data.stock_message || data.purchasing_message, $thisScope);
    if (lodash_isObject__WEBPACK_IMPORTED_MODULE_1___default()(data.price)) {
      this.updatePriceView(viewModel, data.price);
    }
    if (lodash_isObject__WEBPACK_IMPORTED_MODULE_1___default()(data.weight)) {
      viewModel.$weight.html(data.weight.formatted);
    }

    // Set variation_id if it exists for adding to wishlist
    if (data.variantId) {
      viewModel.$wishlistVariation.val(data.variantId);
    }

    // If SKU is available
    if (data.sku) {
      viewModel.sku.$value.text(data.sku);
      viewModel.sku.$label.show();
    } else {
      viewModel.sku.$label.hide();
      viewModel.sku.$value.text('');
    }

    // If UPC is available
    if (data.upc) {
      viewModel.upc.$value.text(data.upc);
      viewModel.upc.$label.show();
    } else {
      viewModel.upc.$label.hide();
      viewModel.upc.$value.text('');
    }

    // if stock view is on (CP settings)
    if (viewModel.stock.$container.length && lodash_isNumber__WEBPACK_IMPORTED_MODULE_0___default()(data.stock)) {
      // if the stock container is hidden, show
      viewModel.stock.$container.removeClass('u-hiddenVisually');
      viewModel.stock.$input.text(data.stock);
    } else {
      viewModel.stock.$container.addClass('u-hiddenVisually');
      viewModel.stock.$input.text(data.stock);
    }
    this.updateDefaultAttributesForOOS(data);

    // If Bulk Pricing rendered HTML is available
    if (data.bulk_discount_rates && content) {
      viewModel.$bulkPricing.html(content);
    } else if (typeof data.bulk_discount_rates !== 'undefined') {
      viewModel.$bulkPricing.html('');
    }
    var addToCartWrapper = $('#add-to-cart-wrapper');
    if (addToCartWrapper.is(':hidden') && data.purchasable) {
      addToCartWrapper.show();
    }
  }

  /**
   * Update the view of price, messages, SKU and stock options when a product option changes
   * @param  {Object} data Product attribute data
   */;
  _proto.updatePriceView = function updatePriceView(viewModel, price) {
    this.clearPricingNotFound(viewModel);
    if (price.with_tax) {
      var updatedPrice = price.price_range ? price.price_range.min.with_tax.formatted + " - " + price.price_range.max.with_tax.formatted : price.with_tax.formatted;
      viewModel.priceLabel.$span.show();
      viewModel.$priceWithTax.html(updatedPrice);
    }
    if (price.without_tax) {
      var _updatedPrice = price.price_range ? price.price_range.min.without_tax.formatted + " - " + price.price_range.max.without_tax.formatted : price.without_tax.formatted;
      viewModel.priceLabel.$span.show();
      viewModel.$priceWithoutTax.html(_updatedPrice);
    }
    if (price.rrp_with_tax) {
      viewModel.rrpWithTax.$div.show();
      viewModel.rrpWithTax.$span.html(price.rrp_with_tax.formatted);
    }
    if (price.rrp_without_tax) {
      viewModel.rrpWithoutTax.$div.show();
      viewModel.rrpWithoutTax.$span.html(price.rrp_without_tax.formatted);
    }
    if (price.saved) {
      viewModel.priceSaved.$div.show();
      viewModel.priceSaved.$span.html(price.saved.formatted);
    }
    if (price.non_sale_price_with_tax) {
      viewModel.priceLabel.$span.hide();
      viewModel.nonSaleWithTax.$div.show();
      viewModel.priceNowLabel.$span.show();
      viewModel.nonSaleWithTax.$span.html(price.non_sale_price_with_tax.formatted);
    }
    if (price.non_sale_price_without_tax) {
      viewModel.priceLabel.$span.hide();
      viewModel.nonSaleWithoutTax.$div.show();
      viewModel.priceNowLabel.$span.show();
      viewModel.nonSaleWithoutTax.$span.html(price.non_sale_price_without_tax.formatted);
    }
  }

  /**
   * Show an message box if a message is passed
   * Hide the box if the message is empty
   * @param  {String} message
   */;
  _proto.showMessageBox = function showMessageBox(message, $scope) {
    var $messageBox = $('#add-to-cart-wrapper .productAttributes-message', $scope);
    if (message) {
      $('.alertBox-message', $messageBox).text(message);
      $messageBox.show();
    } else {
      $messageBox.hide();
    }
  };
  _proto.updateDefaultAttributesForOOS = function updateDefaultAttributesForOOS(data) {
    var viewModel = this.getViewModel(this.$scope);
    if (!data.purchasable || !data.instock) {
      viewModel.$addToCart.prop('disabled', true);
      viewModel.$increments.prop('disabled', true);
    } else {
      viewModel.$addToCart.prop('disabled', false);
      viewModel.$increments.prop('disabled', false);
    }
  };
  _proto.enableAttribute = function enableAttribute($attribute, behavior, outOfStockMessage) {
    if (this.getAttributeType($attribute) === 'set-select') {
      return this.enableSelectOptionAttribute($attribute, behavior, outOfStockMessage);
    }
    if (behavior === 'hide_option') {
      $attribute.show();
    } else {
      $attribute.removeClass('unavailable');
    }
  };
  _proto.disableAttribute = function disableAttribute($attribute, behavior, outOfStockMessage) {
    if (this.getAttributeType($attribute) === 'set-select') {
      return this.disableSelectOptionAttribute($attribute, behavior, outOfStockMessage);
    }
    if (behavior === 'hide_option') {
      $attribute.hide(0);
    } else {
      $attribute.addClass('unavailable');
    }
  };
  _proto.getAttributeType = function getAttributeType($attribute) {
    var $parent = $attribute.closest('[data-product-attribute]');
    return $parent ? $parent.data('productAttribute') : null;
  };
  _proto.disableSelectOptionAttribute = function disableSelectOptionAttribute($attribute, behavior, outOfStockMessage) {
    var $select = $attribute.parent();
    if (behavior === 'hide_option') {
      $attribute.toggleOption(false);
      // If the attribute is the selected option in a select dropdown, select the first option (MERC-639)
      if ($select.val() === $attribute.attr('value')) {
        $select[0].selectedIndex = 0;
      }
    } else {
      $attribute.attr('disabled', 'disabled');
      $attribute.html($attribute.html().replace(outOfStockMessage, '') + outOfStockMessage);
    }
  };
  _proto.enableSelectOptionAttribute = function enableSelectOptionAttribute($attribute, behavior, outOfStockMessage) {
    if (behavior === 'hide_option') {
      $attribute.toggleOption(true);
    } else {
      $attribute.prop('disabled', false);
      $attribute.html($attribute.html().replace(outOfStockMessage, ''));
    }
  };
  return ProductDetailsBase;
}();

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/common/product-details.js":
/*!***************************************************!*\
  !*** ./assets/js/theme/common/product-details.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ProductDetails; });
/* harmony import */ var lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/isPlainObject */ "./node_modules/lodash/isPlainObject.js");
/* harmony import */ var lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isEmpty */ "./node_modules/lodash/isEmpty.js");
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isEmpty__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bigcommerce/stencil-utils */ "./node_modules/@bigcommerce/stencil-utils/src/main.js");
/* harmony import */ var _product_details_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./product-details-base */ "./assets/js/theme/common/product-details-base.js");
/* harmony import */ var foundation_sites_js_foundation_foundation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! foundation-sites/js/foundation/foundation */ "./node_modules/foundation-sites/js/foundation/foundation.js");
/* harmony import */ var foundation_sites_js_foundation_foundation__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(foundation_sites_js_foundation_foundation__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var foundation_sites_js_foundation_foundation_reveal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! foundation-sites/js/foundation/foundation.reveal */ "./node_modules/foundation-sites/js/foundation/foundation.reveal.js");
/* harmony import */ var foundation_sites_js_foundation_foundation_reveal__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(foundation_sites_js_foundation_foundation_reveal__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _product_image_gallery__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../product/image-gallery */ "./assets/js/theme/product/image-gallery.js");
/* harmony import */ var _global_modal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../global/modal */ "./assets/js/theme/global/modal.js");
/* harmony import */ var _utils_api__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/api */ "./assets/js/theme/common/utils/api.js");
/* harmony import */ var _utils_ie_helpers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/ie-helpers */ "./assets/js/theme/common/utils/ie-helpers.js");
/* harmony import */ var _utils_banner_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/banner-utils */ "./assets/js/theme/common/utils/banner-utils.js");
/* harmony import */ var _halothemes_haloCalculateFreeShipping__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../halothemes/haloCalculateFreeShipping */ "./assets/js/theme/halothemes/haloCalculateFreeShipping.js");
/* harmony import */ var _halothemes_haloGalleryPopup__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../halothemes/haloGalleryPopup */ "./assets/js/theme/halothemes/haloGalleryPopup.js");


function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }











var ProductDetails = /*#__PURE__*/function (_ProductDetailsBase) {
  _inheritsLoose(ProductDetails, _ProductDetailsBase);
  function ProductDetails($scope, context, productAttributesData) {
    var _this;
    if (productAttributesData === void 0) {
      productAttributesData = {};
    }
    _this = _ProductDetailsBase.call(this, $scope, context) || this;
    _this.$overlay = $('[data-cart-item-add] .loadingOverlay');
    _this.imageGallery = new _product_image_gallery__WEBPACK_IMPORTED_MODULE_6__["default"]($('[data-image-gallery]', _this.$scope));
    _this.imageGallery.init();
    _this.listenQuantityChange();
    _this.$swatchOptionMessage = $('.swatch-option-message');
    _this.swatchOptionMessageInitText = _this.$swatchOptionMessage.text();

    /* Halothemes */
    new _halothemes_haloGalleryPopup__WEBPACK_IMPORTED_MODULE_12__["default"](_this.context, _this.$scope);
    if ($('.sold-product').length) {
      _this.soldProduct(_this.context);
    }
    var $form = $('form[data-cart-item-add]', $scope);
    var $productOptionsElement = $('[data-product-option-change]', $form);
    var hasOptions = $productOptionsElement.html().trim().length;
    var hasDefaultOptions = $productOptionsElement.find('[data-default]').length;
    var $productSwatchGroup = $('[id*="attribute_swatch"]', $form);
    if (context.showSwatchNames) {
      _this.$swatchOptionMessage.removeClass('u-hidden');
      $productSwatchGroup.on('change', function (_ref) {
        var target = _ref.target;
        return _this.showSwatchNameOnOption($(target));
      });
      $.each($productSwatchGroup, function (_, element) {
        if ($(element).is(':checked')) _this.showSwatchNameOnOption($(element));
      });
    }
    $productOptionsElement.on('change', function (event) {
      _this.productOptionsChanged(event);
      _this.setProductVariant();
      _this.setProductVariant2();
    });
    $form.on('submit', function (event) {
      _this.addProductToCart(event, $form[0]);
    });

    // add to cart 2
    var $form2 = $('form[data-cart-item-add-2]', $scope);
    var $productOptionsElement2 = $('[data-product-option-change-4]', $form2);
    $productOptionsElement2.on('change', function (event) {
      _this.productOptionsChanged2(event);
      _this.setProductVariant();
      _this.setProductVariant2();
    });
    $(document).on('click', '#form-action-addToCart2.themevale', function (event) {
      $form2.submit();
    });
    $form2.on('submit', function (event) {
      _this.addProductToCart(event, $form2[0]);
    });

    // Update product attributes. Also update the initial view in case items are oos
    // or have default variant properties that change the view
    if ((lodash_isEmpty__WEBPACK_IMPORTED_MODULE_1___default()(productAttributesData) || hasDefaultOptions) && hasOptions) {
      var $productId = $('[name="product_id"]', $form).val();
      var optionChangeCallback = _product_details_base__WEBPACK_IMPORTED_MODULE_3__["optionChangeDecorator"].call(_assertThisInitialized(_this), hasDefaultOptions);
      _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__["default"].api.productAttributes.optionChange($productId, $form.serialize(), 'products/bulk-discount-rates', optionChangeCallback);
    } else {
      _this.updateProductAttributes(productAttributesData);
      _utils_banner_utils__WEBPACK_IMPORTED_MODULE_10__["default"].dispatchProductBannerEvent(productAttributesData);
    }
    $productOptionsElement.show();
    _this.previewModal = Object(_global_modal__WEBPACK_IMPORTED_MODULE_7__["default"])('#previewModal')[0];
    if (_this.context.themeSettings.halo_viewing_product) {
      _this.viewingProduct(_this.context);
    }
    return _this;
  }
  var _proto = ProductDetails.prototype;
  _proto.setProductVariant = function setProductVariant() {
    var unsatisfiedRequiredFields = [];
    var options = [];
    $.each($('.productView-options [data-product-attribute]'), function (index, value) {
      var optionLabel = value.children[0].innerText;
      var optionTitle = optionLabel.split(':')[0].trim();
      var required = optionLabel.toLowerCase().includes('required');
      var type = value.getAttribute('data-product-attribute');
      if ((type === 'input-file' || type === 'input-text' || type === 'input-number') && value.querySelector('input').value === '' && required) {
        unsatisfiedRequiredFields.push(value);
      }
      if (type === 'textarea' && value.querySelector('textarea').value === '' && required) {
        unsatisfiedRequiredFields.push(value);
      }
      if (type === 'date') {
        var isSatisfied = Array.from(value.querySelectorAll('select')).every(function (select) {
          return select.selectedIndex !== 0;
        });
        if (isSatisfied) {
          var dateString = Array.from(value.querySelectorAll('select')).map(function (x) {
            return x.value;
          }).join('-');
          options.push(optionTitle + ":" + dateString);
          return;
        }
        if (required) {
          unsatisfiedRequiredFields.push(value);
        }
      }
      if (type === 'set-select') {
        var select = value.querySelector('select');
        var selectedIndex = select.selectedIndex;
        if (selectedIndex !== 0) {
          options.push(optionTitle + ":" + select.options[selectedIndex].innerText);
          $(value.children[0]).find('[data-option-value]').text(select.options[selectedIndex].innerText);
          return;
        }
        if (required) {
          unsatisfiedRequiredFields.push(value);
        }
      }
      if (type === 'set-rectangle' || type === 'set-radio' || type === 'swatch' || type === 'input-checkbox' || type === 'product-list') {
        var checked = value.querySelector(':checked');
        if (checked) {
          var getSelectedOptionLabel = function getSelectedOptionLabel() {
            var productVariantslist = Object(_utils_ie_helpers__WEBPACK_IMPORTED_MODULE_9__["convertIntoArray"])(value.children);
            var matchLabelForCheckedInput = function matchLabelForCheckedInput(inpt) {
              return inpt.dataset.productAttributeValue === checked.value;
            };
            return productVariantslist.filter(matchLabelForCheckedInput)[0];
          };
          if (type === 'set-rectangle' || type === 'set-radio' || type === 'product-list') {
            var label = _utils_ie_helpers__WEBPACK_IMPORTED_MODULE_9__["isBrowserIE"] ? getSelectedOptionLabel().innerText.trim() : checked.labels[0].innerText;
            if (label) {
              options.push(optionTitle + ":" + label);
              $(value.children[0]).find('[data-option-value]').text(label);
            }
          }
          if (type === 'swatch') {
            var _label = _utils_ie_helpers__WEBPACK_IMPORTED_MODULE_9__["isBrowserIE"] ? getSelectedOptionLabel().children[0] : checked.labels[0].children[0];
            if (_label) {
              options.push(optionTitle + ":" + _label.title);
              $(value.children[0]).find('[data-option-value]').text(_label.title);
            }
          }
          if (type === 'input-checkbox') {
            options.push(optionTitle + ":Yes");
          }
          return;
        }
        if (type === 'input-checkbox') {
          options.push(optionTitle + ":No");
        }
        if (required) {
          unsatisfiedRequiredFields.push(value);
        }
      }
    });
    var productVariant = unsatisfiedRequiredFields.length === 0 ? options.sort().join(', ') : 'unsatisfied';
    var view = $('.productView');
    if (productVariant) {
      productVariant = productVariant === 'unsatisfied' ? '' : productVariant;
      if (view.attr('data-event-type')) {
        view.attr('data-product-variant', productVariant);
      } else {
        var productName = view.find('.productView-title')[0].innerText.replace(/"/g, '\\$&');
        var card = $("[data-name=\"" + productName + "\"]");
        card.attr('data-product-variant', productVariant);
      }
    }
  };
  _proto.setProductVariant2 = function setProductVariant2() {
    var unsatisfiedRequiredFields = [];
    var options = [];
    $.each($('[data-product-option-change-4] [data-product-attribute]'), function (index, value) {
      var optionLabel = value.children[0].innerText;
      var optionTitle = optionLabel.split(':')[0].trim();
      var required = optionLabel.toLowerCase().includes('required');
      var type = value.getAttribute('data-product-attribute');
      if ((type === 'input-file' || type === 'input-text' || type === 'input-number') && value.querySelector('input').value === '' && required) {
        unsatisfiedRequiredFields.push(value);
      }
      if (type === 'textarea' && value.querySelector('textarea').value === '' && required) {
        unsatisfiedRequiredFields.push(value);
      }
      if (type === 'date') {
        var isSatisfied = Array.from(value.querySelectorAll('select')).every(function (select) {
          return select.selectedIndex !== 0;
        });
        if (isSatisfied) {
          var dateString = Array.from(value.querySelectorAll('select')).map(function (x) {
            return x.value;
          }).join('-');
          options.push(optionTitle + ":" + dateString);
          return;
        }
        if (required) {
          unsatisfiedRequiredFields.push(value);
        }
      }
      if (type === 'set-select') {
        var select = value.querySelector('select');
        var selectedIndex = select.selectedIndex;
        if (selectedIndex !== 0) {
          options.push(optionTitle + ":" + select.options[selectedIndex].innerText);
          $(value.children[0]).find('[data-option-value]').text(select.options[selectedIndex].innerText);
          return;
        }
        if (required) {
          unsatisfiedRequiredFields.push(value);
        }
      }
      if (type === 'set-rectangle' || type === 'set-radio' || type === 'swatch' || type === 'input-checkbox' || type === 'product-list') {
        var checked = value.querySelector(':checked');
        if (checked) {
          if (type === 'set-rectangle') {
            var label = $(checked.labels[0].children[0]).text();
            if (label) {
              options.push(optionTitle + ":" + label);
              $(value.children[0]).find('[data-option-value]').text(label);
            }
          }
          if (type === 'set-radio' || type === 'product-list') {
            var _label2 = $(checked.labels[0]).text();
            if (_label2) {
              options.push(optionTitle + ":" + _label2);
              $(value.children[0]).find('[data-option-value]').text(_label2);
            }
          }
          if (type === 'swatch') {
            var _label3 = checked.labels[0].children[0];
            if (_label3) {
              options.push(optionTitle + ":" + _label3.title);
              $(value.children[0]).find('[data-option-value]').text(_label3.title);
            }
          }
          if (type === 'input-checkbox') {
            options.push(optionTitle + ":Yes");
          }
          return;
        }
        if (type === 'input-checkbox') {
          options.push(optionTitle + ":No");
        }
        if (required) {
          unsatisfiedRequiredFields.push(value);
        }
      }
    });
    var productVariant = unsatisfiedRequiredFields.length === 0 ? options.sort().join(', ') : 'unsatisfied';
    var view = $('.productView');
    if (productVariant) {
      productVariant = productVariant === 'unsatisfied' ? '' : productVariant;
      if (view.attr('data-event-type')) {
        view.attr('data-product-variant', productVariant);
      } else {
        var productName = view.find('.productView-title')[0].innerText;
        var card = $("[data-name=\"" + productName + "\"]");
        card.attr('data-product-variant', productVariant);
      }
    }
  }

  /**
   * Checks if the current window is being run inside an iframe
   * @returns {boolean}
   */;
  _proto.isRunningInIframe = function isRunningInIframe() {
    try {
      return window.self !== window.top;
    } catch (e) {
      return true;
    }
  }

  /**
   *
   * Handle product options changes
   *
   */;
  _proto.productOptionsChanged = function productOptionsChanged(event) {
    var _this2 = this;
    var $changedOption = $(event.target);
    var $form = $changedOption.parents('form');
    var productId = $('[name="product_id"]', $form).val();

    // Do not trigger an ajax request if it's a file or if the browser doesn't support FormData
    if ($changedOption.attr('type') === 'file' || window.FormData === undefined) {
      return;
    }
    _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__["default"].api.productAttributes.optionChange(productId, $form.serialize(), 'products/bulk-discount-rates', function (err, response) {
      var productAttributesData = response.data || {};
      var productAttributesContent = response.content || {};
      _this2.updateProductAttributes(productAttributesData);
      _this2.updateView(productAttributesData, productAttributesContent);
      _utils_banner_utils__WEBPACK_IMPORTED_MODULE_10__["default"].dispatchProductBannerEvent(productAttributesData);
    });
  };
  _proto.productOptionsChanged2 = function productOptionsChanged2(event) {
    var _this3 = this;
    var $changedOption = $(event.target);
    var $form = $changedOption.parents('form');
    var productId = $('[name="product_id"]', $form).val();

    // Do not trigger an ajax request if it's a file or if the browser doesn't support FormData
    if ($changedOption.attr('type') === 'file' || window.FormData === undefined) {
      return;
    }
    _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__["default"].api.productAttributes.optionChange(productId, $form.serialize(), 'products/bulk-discount-rates', function (err, response) {
      var productAttributesData = response.data || {};
      var productAttributesContent = response.content || {};
      _this3.updateProductAttributes(productAttributesData);
      _this3.updateView(productAttributesData, productAttributesContent);
      setTimeout(function () {
        var change_img = $('.productView-images [data-image-gallery-main-0] .zoomImg').attr('src');
        $('#sticky_addtocart .product-image img').attr('src', change_img);
      }, 100);
      $.each($('[data-product-option-change-4] [data-product-attribute]'), function (i) {
        var el = $(this).find('.form-radio:checked').attr('value');
        $.each($('.productView-options [data-product-option-change] [data-product-attribute] input'), function (i) {
          var op = $(this).attr('value');
          if ($(this).next().hasClass('form-option-swatch')) {
            var opTitle = $(this).next().children('.form-option-variant').attr('title');
          } else if ($(this).next().children('.form-option-variant').length) {
            var opTitle = $(this).next().children('.form-option-variant').text();
          } else {
            var opTitle = $(this).next('.form-label').text();
          }
          if (el == op) {
            $(this).prop('checked', true);
            $(this).parents('[data-product-attribute]').find('.form-label--alternate [data-option-value]').text(opTitle);
          }
        });
      });
      var checkedColor = $('[data-product-option-change-4] [data-product-attribute="swatch"]').find('.form-radio:checked').attr('value');
      var color = $('[data-product-option-change-4] [data-product-attribute="swatch"]').find('.form-radio:checked').next().find('> span').attr('title');
      $('#sticky_addtocart .productView-title .color-name').text(" - " + color);
    });
  }

  /**
   * if this setting is enabled in Page Builder
   * show name for swatch option
   */;
  _proto.showSwatchNameOnOption = function showSwatchNameOnOption($swatch) {
    var swatchName = $swatch.attr('aria-label');
    $('[data-product-attribute="swatch"] [data-option-value]').text(swatchName);
    this.$swatchOptionMessage.text(this.swatchOptionMessageInitText + " " + swatchName);
    this.setLiveRegionAttributes(this.$swatchOptionMessage, 'status', 'assertive');
  };
  _proto.setLiveRegionAttributes = function setLiveRegionAttributes($element, roleType, ariaLiveStatus) {
    $element.attr({
      role: roleType,
      'aria-live': ariaLiveStatus
    });
  };
  _proto.showProductImage = function showProductImage(image) {
    if (lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_0___default()(image)) {
      var zoomImageUrl = _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__["default"].tools.imageSrcset.getSrcset(image.data, {
        '1x': this.context.zoomSize
      }
      /*
          Should match zoom size used for data-zoom-image in
          components/products/product-view.html
           Note that this will only be used as a fallback image for browsers that do not support srcset
           Also note that getSrcset returns a simple src string when exactly one size is provided
      */);

      var mainImageUrl = _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__["default"].tools.imageSrcset.getSrcset(image.data, {
        '1x': this.context.productSize
      }
      /*
          Should match fallback image size used for the main product image in
          components/products/product-view.html
           Note that this will only be used as a fallback image for browsers that do not support srcset
           Also note that getSrcset returns a simple src string when exactly one size is provided
      */);

      var mainImageSrcset = _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__["default"].tools.imageSrcset.getSrcset(image.data);
      this.imageGallery.setAlternateImage({
        mainImageUrl: mainImageUrl,
        zoomImageUrl: zoomImageUrl,
        mainImageSrcset: mainImageSrcset
      });
    } else {
      this.imageGallery.restoreImage();
    }
  }

  /**
   *
   * Handle action when the shopper clicks on + / - for quantity
   *
   */;
  _proto.listenQuantityChange = function listenQuantityChange() {
    var _this4 = this;
    this.$scope.on('click', '[data-quantity-change] button', function (event) {
      event.preventDefault();
      var $target = $(event.currentTarget);
      var viewModel = _this4.getViewModel(_this4.$scope);
      var $input = viewModel.quantity.$input;
      var quantityMin = parseInt($input.data('quantityMin'), 10);
      var quantityMax = parseInt($input.data('quantityMax'), 10);
      var qty = parseInt($input.val(), 10);

      // If action is incrementing
      if ($target.data('action') === 'inc') {
        // If quantity max option is set
        if (quantityMax > 0) {
          // Check quantity does not exceed max
          if (qty + 1 <= quantityMax) {
            qty++;
          }
        } else {
          qty++;
        }
      } else if (qty > 1) {
        // If quantity min option is set
        if (quantityMin > 0) {
          // Check quantity does not fall below min
          if (qty - 1 >= quantityMin) {
            qty--;
          }
        } else {
          qty--;
        }
      }

      // update hidden input
      viewModel.quantity.$input.val(qty);
      // update text
      viewModel.quantity.$text.text(qty);
    });

    // Prevent triggering quantity change when pressing enter
    this.$scope.on('keypress', '.form-input--incrementTotal', function (event) {
      // If the browser supports event.which, then use event.which, otherwise use event.keyCode
      var x = event.which || event.keyCode;
      if (x === 13) {
        // Prevent default
        event.preventDefault();
      }
    });
  }

  /**
   *
   * Add a product to cart
   *
   */;
  _proto.addProductToCart = function addProductToCart(event, form) {
    var _this5 = this;
    var $addToCartBtn = $('#form-action-addToCart', $(event.target));
    var originalBtnVal = $addToCartBtn.val();
    var waitMessage = $addToCartBtn.data('waitMessage');

    // Do not do AJAX if browser doesn't support FormData
    if (window.FormData === undefined) {
      return;
    }

    // Prevent default
    event.preventDefault();
    $addToCartBtn.val(waitMessage).prop('disabled', true);
    this.$overlay.show();

    // Add item to cart
    _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__["default"].api.cart.itemAdd(Object(_utils_api__WEBPACK_IMPORTED_MODULE_8__["normalizeFormData"])(new FormData(form)), function (err, response) {
      var errorMessage = err || response.data.error;
      $addToCartBtn.val(originalBtnVal).prop('disabled', false);
      _this5.$overlay.hide();

      // Guard statement
      if (errorMessage) {
        // Strip the HTML from the error message
        var tmp = document.createElement('DIV');
        tmp.innerHTML = errorMessage;
        return Object(_global_modal__WEBPACK_IMPORTED_MODULE_7__["showAlertModal"])(tmp.textContent || tmp.innerText);
      }

      // Open preview modal and update content
      if (_this5.context.themeSettings.haloAddToCartAction === 'sidebar') {
        $('.modal-background').trigger('click');
        var options = {
          template: 'common/cart-preview'
        };
        var loadingClass = 'is-loading';
        var $body = $('body');
        var $cartDropdown = $('#cart-preview-dropdown');
        var $cartLoading = $('<div class="loadingOverlay"></div>');
        $body.toggleClass('halo-open-side-cart');
        $cartDropdown.addClass(loadingClass).html($cartLoading);
        $cartLoading.show();
        _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__["default"].api.cart.getContent(options, function (err, response) {
          $cartDropdown.removeClass(loadingClass).html(response);
          $cartLoading.hide();
          var quantity = $(response).find('[data-cart-quantity]').data('cartQuantity') || 0;
          $body.trigger('cart-quantity-update', quantity);
          Object(_halothemes_haloCalculateFreeShipping__WEBPACK_IMPORTED_MODULE_11__["default"])(_this5.context);
        });
      } else if (_this5.context.themeSettings.haloAddToCartAction === 'popup') {
        $('.modal-background').trigger('click');
        if (_this5.previewModal) {
          _this5.previewModal.open();
          _this5.updateCartContent(_this5.previewModal, response.data.cart_item.id, function () {
            return _this5.previewModal.setupFocusableElements(_global_modal__WEBPACK_IMPORTED_MODULE_7__["modalTypes"].PRODUCT_DETAILS);
          });
          Object(_halothemes_haloCalculateFreeShipping__WEBPACK_IMPORTED_MODULE_11__["default"])(_this5.context);
        } else {
          _this5.$overlay.show();
          // if no modal, redirect to the cart page
          _this5.redirectTo(response.data.cart_item.cart_url || _this5.context.urls.cart);
        }
      } else {
        _this5.$overlay.show();
        _this5.redirectTo(response.data.cart_item.cart_url || _this5.context.urls.cart);
      }
    });
    this.setLiveRegionAttributes($addToCartBtn.next(), 'status', 'polite');
  }

  /**
   * Get cart contents
   *
   * @param {String} cartItemId
   * @param {Function} onComplete
   */;
  _proto.getCartContent = function getCartContent(cartItemId, onComplete) {
    var options = {
      template: 'cart/preview',
      params: {
        suggest: cartItemId
      },
      config: {
        cart: {
          suggestions: {
            limit: 4
          }
        }
      }
    };
    _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__["default"].api.cart.getContent(options, onComplete);
  }

  /**
   * Redirect to url
   *
   * @param {String} url
   */;
  _proto.redirectTo = function redirectTo(url) {
    if (this.isRunningInIframe() && !window.iframeSdk) {
      window.top.location = url;
    } else {
      window.location = url;
    }
  }

  /**
   * Update cart content
   *
   * @param {Modal} modal
   * @param {String} cartItemId
   * @param {Function} onComplete
   */;
  _proto.updateCartContent = function updateCartContent(modal, cartItemId, onComplete) {
    this.getCartContent(cartItemId, function (err, response) {
      if (err) {
        return;
      }
      modal.updateContent(response);

      // Update cart counter
      var $body = $('body');
      var $cartQuantity = $('[data-cart-quantity]', modal.$content);
      var $cartCounter = $('.navUser-action .cart-count');
      var quantity = $cartQuantity.data('cartQuantity') || 0;
      var $promotionBanner = $('[data-promotion-banner]');
      var $backToShopppingBtn = $('.previewCartCheckout > [data-reveal-close]');
      var $modalCloseBtn = $('#previewModal > .modal-close');
      var bannerUpdateHandler = function bannerUpdateHandler() {
        var $productContainer = $('#main-content > .container');
        $productContainer.append('<div class="loadingOverlay pdp-update"></div>');
        $('.loadingOverlay.pdp-update', $productContainer).show();
        window.location.reload();
      };
      $cartCounter.addClass('cart-count--positive');
      $body.trigger('cart-quantity-update', quantity);
      if (onComplete) {
        onComplete(response);
      }
      if ($promotionBanner.length && $backToShopppingBtn.length) {
        $backToShopppingBtn.on('click', bannerUpdateHandler);
        $modalCloseBtn.on('click', bannerUpdateHandler);
      }
    });
  }

  /**
   * Hide or mark as unavailable out of stock attributes if enabled
   * @param  {Object} data Product attribute data
   */;
  _proto.updateProductAttributes = function updateProductAttributes(data) {
    _ProductDetailsBase.prototype.updateProductAttributes.call(this, data);
    this.showProductImage(data.image);
  }

  /* Halothemes*/;
  _proto.soldProduct = function soldProduct() {
    var numbersProductS = this.context.themeSettings.number_products;
    var numbersProductList = JSON.parse("[" + numbersProductS + "]");
    var numbersProductItem = Math.floor(Math.random() * numbersProductList.length);
    var numbersProduct = numbersProductList[numbersProductItem];
    var numbersHoursS = this.context.themeSettings.number_hours;
    var numbersHoursList = JSON.parse("[" + numbersHoursS + "]");
    var numbersHoursItem = Math.floor(Math.random() * numbersHoursList.length);
    var numbersHour = numbersHoursList[numbersProductItem];
    var itemPrdsText = this.context.themeSettings.number_products_text;
    var itemHoursText = this.context.themeSettings.number_hours_text;
    $('.sold-product').html('<svg class="icon" aria-hidden="true"><use xlink:href="#icon-fire-2"></use></svg> <span>' + numbersProduct + " " + itemPrdsText + " " + numbersHour + " " + itemHoursText + '</span>');
    $('.sold-product').show();
  };
  _proto.viewingProduct = function viewingProduct() {
    var ViewerText = this.context.themeSettings.halo_viewing_product_text;
    var numbersViewer_text = this.context.themeSettings.halo_viewing_product_viewer;
    var numbersViewerList = JSON.parse("[" + numbersViewer_text + "]");
    var timeViewer = parseInt(this.context.themeSettings.halo_viewing_product_change) * 1000;
    setInterval(function () {
      var numbersViewerItem = Math.floor(Math.random() * numbersViewerList.length);
      $('.viewing-product span').html(numbersViewerList[numbersViewerItem] + " " + ViewerText);
      $('.viewing-product').show();
    }, timeViewer);
  };
  return ProductDetails;
}(_product_details_base__WEBPACK_IMPORTED_MODULE_3__["default"]);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/common/select-option-plugin.js":
/*!********************************************************!*\
  !*** ./assets/js/theme/common/select-option-plugin.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {/**
 * Visually hides the option from user by moving option to an invisible
 * and disabled select placeholder element.
 *
 * This approach is required rather than simply hiding the option because
 * hidden option can still be included when serializeArray() is called and
 * cause wrong value to be submitted.
 * (eg. if you have option 1, 2, 3 and 2 is hidden, when you select 3,
 * serializeArray() will use the value of 2 instead of 3)
 */
function toggleOption(show) {
  var currentSelectElement = $(this).closest('select'); // the select containing this
  var disabledSelectElement; // the disabled select element
  var selectElement; // the real select element

  if (currentSelectElement.is(':disabled')) {
    disabledSelectElement = currentSelectElement;
    selectElement = disabledSelectElement.data('linkedSelectElement');
  } else {
    selectElement = currentSelectElement;
    disabledSelectElement = currentSelectElement.data('linkedSelectElement');
    if (!disabledSelectElement) {
      // create the disabled placeholder select element
      disabledSelectElement = $('<select>').prop('disabled', true).hide().attr('name', currentSelectElement.attr('name')).addClass(currentSelectElement.attr('class')).data('linkedSelectElement', selectElement).insertAfter(selectElement);
      selectElement.data('linkedSelectElement', disabledSelectElement);
    }
  }

  // save the selected option
  var selectedOption = selectElement.find('option:selected');

  // move the option to the correct select element if required
  if (currentSelectElement.is(':disabled') && show) {
    var previousIndex = this.data('index');
    var $elementNowAtPreviousIndex = selectElement.find('option').eq(previousIndex);
    if ($elementNowAtPreviousIndex.length) {
      this.insertBefore($elementNowAtPreviousIndex);
    } else {
      $(this).appendTo(selectElement);
    }
  } else if (!currentSelectElement.is(':disabled') && !show) {
    this.data('index', currentSelectElement.find('option').index(this));
    $(this).prependTo(disabledSelectElement);
  }

  // make sure the option is still selected
  selectedOption.prop('selected', true);
}
$.fn.toggleOption = toggleOption;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/common/state-country.js":
/*!*************************************************!*\
  !*** ./assets/js/theme/common/state-country.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var lodash_each__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/each */ "./node_modules/lodash/each.js");
/* harmony import */ var lodash_each__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_each__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isEmpty */ "./node_modules/lodash/isEmpty.js");
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isEmpty__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash_transform__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/transform */ "./node_modules/lodash/transform.js");
/* harmony import */ var lodash_transform__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_transform__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bigcommerce/stencil-utils */ "./node_modules/@bigcommerce/stencil-utils/src/main.js");
/* harmony import */ var _utils_form_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/form-utils */ "./assets/js/theme/common/utils/form-utils.js");
/* harmony import */ var _global_modal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../global/modal */ "./assets/js/theme/global/modal.js");







/**
 * If there are no options from bcapp, a text field will be sent. This will create a select element to hold options after the remote request.
 * @returns {jQuery|HTMLElement}
 */
function makeStateRequired(stateElement, context) {
  var attrs = lodash_transform__WEBPACK_IMPORTED_MODULE_2___default()(stateElement.prop('attributes'), function (result, item) {
    var ret = result;
    ret[item.name] = item.value;
    return ret;
  });
  var replacementAttributes = {
    id: attrs.id,
    'data-label': attrs['data-label'],
    "class": 'form-select',
    name: attrs.name,
    'data-field-type': attrs['data-field-type']
  };
  stateElement.replaceWith($('<select></select>', replacementAttributes));
  var $newElement = $('[data-field-type="State"]');
  var $hiddenInput = $('[name*="FormFieldIsText"]');
  if ($hiddenInput.length !== 0) {
    $hiddenInput.remove();
  }
  if ($newElement.prev().find('small').length === 0) {
    // String is injected from localizer
    $newElement.prev().append("<small>" + context.required + "</small>");
  } else {
    $newElement.prev().find('small').show();
  }
  return $newElement;
}

/**
 * If a country with states is the default, a select will be sent,
 * In this case we need to be able to switch to an input field and hide the required field
 */
function makeStateOptional(stateElement) {
  var attrs = lodash_transform__WEBPACK_IMPORTED_MODULE_2___default()(stateElement.prop('attributes'), function (result, item) {
    var ret = result;
    ret[item.name] = item.value;
    return ret;
  });
  var replacementAttributes = {
    type: 'text',
    id: attrs.id,
    'data-label': attrs['data-label'],
    "class": 'form-input',
    name: attrs.name,
    'data-field-type': attrs['data-field-type']
  };
  stateElement.replaceWith($('<input />', replacementAttributes));
  var $newElement = $('[data-field-type="State"]');
  if ($newElement.length !== 0) {
    Object(_utils_form_utils__WEBPACK_IMPORTED_MODULE_4__["insertStateHiddenField"])($newElement);
    $newElement.prev().find('small').hide();
  }
  return $newElement;
}

/**
 * Adds the array of options from the remote request to the newly created select box.
 * @param {Object} statesArray
 * @param {jQuery} $selectElement
 * @param {Object} options
 */
function addOptions(statesArray, $selectElement, options) {
  var container = [];
  container.push("<option value=\"\">" + statesArray.prefix + "</option>");
  if (!lodash_isEmpty__WEBPACK_IMPORTED_MODULE_1___default()($selectElement)) {
    lodash_each__WEBPACK_IMPORTED_MODULE_0___default()(statesArray.states, function (stateObj) {
      if (options.useIdForStates) {
        container.push("<option value=\"" + stateObj.id + "\">" + stateObj.name + "</option>");
      } else {
        container.push("<option value=\"" + stateObj.name + "\">" + stateObj.name + "</option>");
      }
    });
    $selectElement.html(container.join(' '));
  }
}

/**
 *
 * @param {jQuery} stateElement
 * @param {Object} context
 * @param {Object} options
 * @param {Function} callback
 */
/* harmony default export */ __webpack_exports__["default"] = (function (stateElement, context, options, callback) {
  if (context === void 0) {
    context = {};
  }
  /**
   * Backwards compatible for three parameters instead of four
   *
   * Available options:
   *
   * useIdForStates {Bool} - Generates states dropdown using id for values instead of strings
   */
  if (typeof options === 'function') {
    /* eslint-disable no-param-reassign */
    callback = options;
    options = {};
    /* eslint-enable no-param-reassign */
  }

  $('select[data-field-type="Country"]').on('change', function (event) {
    var countryName = $(event.currentTarget).val();
    if (countryName === '') {
      return;
    }
    _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_3__["default"].api.country.getByName(countryName, function (err, response) {
      if (err) {
        Object(_global_modal__WEBPACK_IMPORTED_MODULE_5__["showAlertModal"])(context.state_error);
        return callback(err);
      }
      var $currentInput = $('[data-field-type="State"]');
      if (!lodash_isEmpty__WEBPACK_IMPORTED_MODULE_1___default()(response.data.states)) {
        // The element may have been replaced with a select, reselect it
        var $selectElement = makeStateRequired($currentInput, context);
        addOptions(response.data, $selectElement, options);
        callback(null, $selectElement);
      } else {
        var newElement = makeStateOptional($currentInput, context);
        callback(null, newElement);
      }
    });
  });
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/common/utils/api.js":
/*!*********************************************!*\
  !*** ./assets/js/theme/common/utils/api.js ***!
  \*********************************************/
/*! exports provided: filterEmptyValuesFromForm, filterEmptyFilesFromForm, normalizeFormData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterEmptyValuesFromForm", function() { return filterEmptyValuesFromForm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterEmptyFilesFromForm", function() { return filterEmptyFilesFromForm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeFormData", function() { return normalizeFormData; });
function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
/**
 * This function removes any empty string values from the formData
 * @param formData: FormData object
 * @returns FormData object
*/
var filterEmptyValuesFromForm = function filterEmptyValuesFromForm(formData) {
  var res = new FormData();
  try {
    for (var _iterator = _createForOfIteratorHelperLoose(formData), _step; !(_step = _iterator()).done;) {
      var _step$value = _step.value,
        key = _step$value[0],
        val = _step$value[1];
      if (val !== '') {
        res.append(key, val);
      }
    }
  } catch (e) {
    console.log(e); // eslint-disable-line no-console
  }

  return res;
};

/**
 * https://stackoverflow.com/questions/49672992/ajax-request-fails-when-sending-formdata-including-empty-file-input-in-safari
 * Safari browser with jquery 3.3.1 has an issue uploading empty file parameters. This function removes any empty files from the form params
 * @param formData: FormData object
 * @returns FormData object
 */
var filterEmptyFilesFromForm = function filterEmptyFilesFromForm(formData) {
  var res = new FormData();
  try {
    for (var _iterator2 = _createForOfIteratorHelperLoose(formData), _step2; !(_step2 = _iterator2()).done;) {
      var _step2$value = _step2.value,
        key = _step2$value[0],
        val = _step2$value[1];
      if (!(val instanceof File) || val.name || val.size) {
        res.append(key, val);
      }
    }
  } catch (e) {
    console.error(e); // eslint-disable-line no-console
  }

  return res;
};

/**
 * This function removes empty string values and empty files from the formData
 * @param formData: FormData object
 * @returns FormData object
 */
var normalizeFormData = function normalizeFormData(formData) {
  return filterEmptyValuesFromForm(filterEmptyFilesFromForm(formData));
};

/***/ }),

/***/ "./assets/js/theme/common/utils/banner-utils.js":
/*!******************************************************!*\
  !*** ./assets/js/theme/common/utils/banner-utils.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ie_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ie-helpers */ "./assets/js/theme/common/utils/ie-helpers.js");

var bannerUtils = {
  dispatchProductBannerEvent: function dispatchProductBannerEvent(productAttributes) {
    if (!productAttributes.price || _ie_helpers__WEBPACK_IMPORTED_MODULE_0__["isBrowserIE"]) return;
    var price = 0;
    if (!productAttributes.price.price_range) {
      if (productAttributes.price.without_tax) {
        price = productAttributes.price.without_tax.value;
      }
      if (productAttributes.price.with_tax) {
        price = productAttributes.price.with_tax.value;
      }
    }
    var evt = new CustomEvent('bigcommerce.productpricechange', {
      detail: {
        amount: price
      }
    });
    window.dispatchEvent(evt);
  }
};
/* harmony default export */ __webpack_exports__["default"] = (bannerUtils);

/***/ }),

/***/ "./assets/js/theme/common/utils/form-utils.js":
/*!****************************************************!*\
  !*** ./assets/js/theme/common/utils/form-utils.js ***!
  \****************************************************/
/*! exports provided: createPasswordValidationErrorTextObject, classifyForm, Validators, insertStateHiddenField, announceInputErrorMessage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createPasswordValidationErrorTextObject", function() { return createPasswordValidationErrorTextObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "classifyForm", function() { return classifyForm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Validators", function() { return Validators; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "insertStateHiddenField", function() { return insertStateHiddenField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "announceInputErrorMessage", function() { return announceInputErrorMessage; });
/* harmony import */ var lodash_capitalize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/capitalize */ "./node_modules/lodash/capitalize.js");
/* harmony import */ var lodash_capitalize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_capitalize__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_camelCase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/camelCase */ "./node_modules/lodash/camelCase.js");
/* harmony import */ var lodash_camelCase__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_camelCase__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash_includes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/includes */ "./node_modules/lodash/includes.js");
/* harmony import */ var lodash_includes__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_includes__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _nod__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../nod */ "./assets/js/theme/common/nod.js");
/* harmony import */ var _models_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/forms */ "./assets/js/theme/common/models/forms.js");





var inputTagNames = ['input', 'select', 'textarea'];
/**
 * Set up Object with Error Messages on Password Validation. Please use messages in mentioned order
 * @param {string} empty defines error text for empty field
 * @param {string} confirm defines error text for empty confirmation field
 * @param {string} mismatch defines error text if confirm passford mismatches passford field
 * @param {string} invalid defines error text for invalid password charaters sequence
 * @return {object} messages or default texts if nothing is providing
 */
var createPasswordValidationErrorTextObject = function createPasswordValidationErrorTextObject(empty, confirm, mismatch, invalid) {
  return {
    onEmptyPasswordErrorText: empty,
    onConfirmPasswordErrorText: confirm,
    onMismatchPasswordErrorText: mismatch,
    onNotValidPasswordErrorText: invalid
  };
};

/**
 * Apply class name to an input element on its type
 * @param {object} input
 * @param {string} formFieldClass
 * @return {object} Element itself
 */
function classifyInput(input, formFieldClass) {
  var $input = $(input);
  var $formField = $input.parent("." + formFieldClass);
  var tagName = $input.prop('tagName').toLowerCase();
  var className = formFieldClass + "--" + tagName;
  var specificClassName;

  // Input can be text/checkbox/radio etc...
  if (tagName === 'input') {
    var inputType = $input.prop('type');
    if (lodash_includes__WEBPACK_IMPORTED_MODULE_2___default()(['radio', 'checkbox', 'submit'], inputType)) {
      // ie: .form-field--checkbox, .form-field--radio
      className = formFieldClass + "--" + lodash_camelCase__WEBPACK_IMPORTED_MODULE_1___default()(inputType);
    } else {
      // ie: .form-field--input .form-field--inputText
      specificClassName = "" + className + lodash_capitalize__WEBPACK_IMPORTED_MODULE_0___default()(inputType);
    }
  }

  // Apply class modifier
  return $formField.addClass(className).addClass(specificClassName);
}

/**
 * Apply class name to each input element in a form based on its type
 * @example
 * // Before
 * <form id="form">
 *     <div class="form-field">
 *         <input type="text">
 *     </div>
 *     <div class="form-field">
 *         <select>...</select>
 *     </div>
 * </form>
 *
 * classifyForm('#form', { formFieldClass: 'form-field' });
 *
 * // After
 * <div class="form-field form-field--input form-field--inputText">...</div>
 * <div class="form-field form-field--select">...</div>
 *
 * @param {string|object} formSelector - selector or element
 * @param {object} options
 * @return {jQuery} Element itself
 */
function classifyForm(formSelector, options) {
  if (options === void 0) {
    options = {};
  }
  var $form = $(formSelector);
  var $inputs = $form.find(inputTagNames.join(', '));

  // Obtain options
  var _options = options,
    _options$formFieldCla = _options.formFieldClass,
    formFieldClass = _options$formFieldCla === void 0 ? 'form-field' : _options$formFieldCla;

  // Classify each input in a form
  $inputs.each(function (__, input) {
    classifyInput(input, formFieldClass);
  });
  return $form;
}

/**
 * Get id from given field
 * @param {object} $field JQuery field object
 * @return {string}
 */
function getFieldId($field) {
  var fieldId = $field.prop('name').match(/(\[.*\])/);
  if (fieldId && fieldId.length !== 0) {
    return fieldId[0];
  }
  return '';
}

/**
 * Insert hidden field after State/Province field
 * @param {object} $stateField JQuery field object
 */
function insertStateHiddenField($stateField) {
  var fieldId = getFieldId($stateField);
  var stateFieldAttrs = {
    type: 'hidden',
    name: "FormFieldIsText" + fieldId,
    value: '1'
  };
  $stateField.after($('<input />', stateFieldAttrs));
}

/**
 * Announce form input error message by screen reader
 * @param {params.element} dom input element where checking is happened
 * @param {params.result} result of validation check
 */
function announceInputErrorMessage(_ref) {
  var element = _ref.element,
    result = _ref.result;
  if (result) {
    return;
  }
  var activeInputContainer = $(element).parent();
  // the reason for using span tag is nod-validate lib
  // which does not add error message class while initialising form
  var errorMessage = $(activeInputContainer).find('span');
  if (errorMessage.length) {
    var $errMessage = $(errorMessage[0]);
    if (!$errMessage.attr('role')) {
      $errMessage.attr('role', 'alert');
    }
  }
}
var Validators = {
  /**
   * Sets up a new validation when the form is dirty
   * @param validator
   * @param field
   * @param {string} errorText describes errorMassage on email validation
   */
  setEmailValidation: function setEmailValidation(validator, field, errorText) {
    if (field) {
      validator.add({
        selector: field,
        validate: function validate(cb, val) {
          var result = _models_forms__WEBPACK_IMPORTED_MODULE_4__["default"].email(val);
          cb(result);
        },
        errorMessage: errorText
      });
    }
  },
  /**
   * Validate password fields
   * @param validator
   * @param passwordSelector
   * @param password2Selector
   * @param requirements
   * @param {object} errorTextsObject
   * @param isOptional
   */
  setPasswordValidation: function setPasswordValidation(validator, passwordSelector, password2Selector, requirements, _ref2, isOptional) {
    var onEmptyPasswordErrorText = _ref2.onEmptyPasswordErrorText,
      onConfirmPasswordErrorText = _ref2.onConfirmPasswordErrorText,
      onMismatchPasswordErrorText = _ref2.onMismatchPasswordErrorText,
      onNotValidPasswordErrorText = _ref2.onNotValidPasswordErrorText;
    var $password = $(passwordSelector);
    var passwordValidations = [{
      selector: passwordSelector,
      validate: function validate(cb, val) {
        var result = val.length;
        if (isOptional) {
          return cb(true);
        }
        cb(result);
      },
      errorMessage: onEmptyPasswordErrorText
    }, {
      selector: passwordSelector,
      validate: function validate(cb, val) {
        var result = val.match(new RegExp(requirements.alpha)) && val.match(new RegExp(requirements.numeric)) && val.length >= requirements.minlength;

        // If optional and nothing entered, it is valid
        if (isOptional && val.length === 0) {
          return cb(true);
        }
        cb(result);
      },
      errorMessage: onNotValidPasswordErrorText
    }, {
      selector: password2Selector,
      validate: function validate(cb, val) {
        var result = val.length;
        if (isOptional) {
          return cb(true);
        }
        cb(result);
      },
      errorMessage: onConfirmPasswordErrorText
    }, {
      selector: password2Selector,
      validate: function validate(cb, val) {
        var result = val === $password.val();
        cb(result);
      },
      errorMessage: onMismatchPasswordErrorText
    }];
    validator.add(passwordValidations);
  },
  /**
   * Validate password fields
   * @param {Nod} validator
   * @param {Object} selectors
   * @param {string} selectors.errorSelector
   * @param {string} selectors.fieldsetSelector
   * @param {string} selectors.formSelector
   * @param {string} selectors.maxPriceSelector
   * @param {string} selectors.minPriceSelector
   */
  setMinMaxPriceValidation: function setMinMaxPriceValidation(validator, selectors, priceValidationErrorTexts) {
    if (priceValidationErrorTexts === void 0) {
      priceValidationErrorTexts = {};
    }
    var errorSelector = selectors.errorSelector,
      fieldsetSelector = selectors.fieldsetSelector,
      formSelector = selectors.formSelector,
      maxPriceSelector = selectors.maxPriceSelector,
      minPriceSelector = selectors.minPriceSelector;

    // eslint-disable-next-line object-curly-newline
    var _priceValidationError = priceValidationErrorTexts,
      onMinPriceError = _priceValidationError.onMinPriceError,
      onMaxPriceError = _priceValidationError.onMaxPriceError,
      minPriceNotEntered = _priceValidationError.minPriceNotEntered,
      maxPriceNotEntered = _priceValidationError.maxPriceNotEntered,
      onInvalidPrice = _priceValidationError.onInvalidPrice;
    validator.configure({
      form: formSelector,
      preventSubmit: true,
      successClass: '_' // KLUDGE: Don't apply success class
    });

    validator.add({
      errorMessage: onMinPriceError,
      selector: minPriceSelector,
      validate: "min-max:" + minPriceSelector + ":" + maxPriceSelector
    });
    validator.add({
      errorMessage: onMaxPriceError,
      selector: maxPriceSelector,
      validate: "min-max:" + minPriceSelector + ":" + maxPriceSelector
    });
    validator.add({
      errorMessage: maxPriceNotEntered,
      selector: maxPriceSelector,
      validate: 'presence'
    });
    validator.add({
      errorMessage: minPriceNotEntered,
      selector: minPriceSelector,
      validate: 'presence'
    });
    validator.add({
      errorMessage: onInvalidPrice,
      selector: [minPriceSelector, maxPriceSelector],
      validate: 'min-number:0'
    });
    validator.setMessageOptions({
      selector: [minPriceSelector, maxPriceSelector],
      parent: fieldsetSelector,
      errorSpan: errorSelector
    });
  },
  /**
   * Sets up a new validation when the form is dirty
   * @param validator
   * @param field
   */
  setStateCountryValidation: function setStateCountryValidation(validator, field, errorText) {
    if (field) {
      validator.add({
        selector: field,
        validate: 'presence',
        errorMessage: errorText
      });
    }
  },
  /**
   * Removes classes from dirty form if previously checked
   * @param field
   */
  cleanUpStateValidation: function cleanUpStateValidation(field) {
    var $fieldClassElement = $("[data-type=\"" + field.data('fieldType') + "\"]");
    Object.keys(_nod__WEBPACK_IMPORTED_MODULE_3__["default"].classes).forEach(function (value) {
      if ($fieldClassElement.hasClass(_nod__WEBPACK_IMPORTED_MODULE_3__["default"].classes[value])) {
        $fieldClassElement.removeClass(_nod__WEBPACK_IMPORTED_MODULE_3__["default"].classes[value]);
      }
    });
  }
};

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/common/utils/ie-helpers.js":
/*!****************************************************!*\
  !*** ./assets/js/theme/common/utils/ie-helpers.js ***!
  \****************************************************/
/*! exports provided: isBrowserIE, convertIntoArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBrowserIE", function() { return isBrowserIE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convertIntoArray", function() { return convertIntoArray; });
var isBrowserIE = navigator.userAgent.includes('Trident');
var convertIntoArray = function convertIntoArray(collection) {
  return Array.prototype.slice.call(collection);
};

/***/ }),

/***/ "./assets/js/theme/common/utils/pagination-utils.js":
/*!**********************************************************!*\
  !*** ./assets/js/theme/common/utils/pagination-utils.js ***!
  \**********************************************************/
/*! exports provided: wishlistPaginatorHelper */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wishlistPaginatorHelper", function() { return wishlistPaginatorHelper; });
var changeWishlistPaginationLinks = function changeWishlistPaginationLinks(wishlistUrl) {
  for (var _len = arguments.length, paginationItems = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    paginationItems[_key - 1] = arguments[_key];
  }
  return $.each(paginationItems, function (_, $item) {
    var paginationLink = $item.children('.pagination-link');
    if ($item.length && !paginationLink.attr('href').includes('page=')) {
      var pageNumber = paginationLink.attr('href');
      paginationLink.attr('href', wishlistUrl + "page=" + pageNumber);
    }
  });
};

/**
 * helps to withdraw differences in structures around the stencil resource pagination
 */
var wishlistPaginatorHelper = function wishlistPaginatorHelper() {
  var $paginationList = $('.pagination-list');
  if (!$paginationList.length) return;
  var $nextItem = $('.pagination-item--next', $paginationList);
  var $prevItem = $('.pagination-item--previous', $paginationList);
  var currentHref = $('[data-pagination-current-page-link]').attr('href');
  var partialPaginationUrl = currentHref.split('page=').shift();
  changeWishlistPaginationLinks(partialPaginationUrl, $prevItem, $nextItem);
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/common/utils/url-utils.js":
/*!***************************************************!*\
  !*** ./assets/js/theme/common/utils/url-utils.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! url */ "./node_modules/url/url.js");
/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(url__WEBPACK_IMPORTED_MODULE_0__);

var urlUtils = {
  getUrl: function getUrl() {
    return "" + window.location.pathname + window.location.search;
  },
  goToUrl: function goToUrl(url) {
    window.history.pushState({}, document.title, url);
    $(window).trigger('statechange');
  },
  replaceParams: function replaceParams(url, params) {
    var parsed = url__WEBPACK_IMPORTED_MODULE_0___default.a.parse(url, true);
    var param;

    // Let the formatter use the query object to build the new url
    parsed.search = null;
    for (param in params) {
      if (params.hasOwnProperty(param)) {
        parsed.query[param] = params[param];
      }
    }
    return url__WEBPACK_IMPORTED_MODULE_0___default.a.format(parsed);
  },
  buildQueryString: function buildQueryString(queryData) {
    var out = '';
    var key;
    for (key in queryData) {
      if (queryData.hasOwnProperty(key)) {
        if (Array.isArray(queryData[key])) {
          var ndx = void 0;
          for (ndx in queryData[key]) {
            if (queryData[key].hasOwnProperty(ndx)) {
              out += "&" + key + "=" + queryData[key][ndx];
            }
          }
        } else {
          out += "&" + key + "=" + queryData[key];
        }
      }
    }
    return out.substring(1);
  },
  parseQueryParams: function parseQueryParams(queryData) {
    var params = {};
    for (var i = 0; i < queryData.length; i++) {
      var temp = queryData[i].split('=');
      if (temp[0] in params) {
        if (Array.isArray(params[temp[0]])) {
          params[temp[0]].push(temp[1]);
        } else {
          params[temp[0]] = [params[temp[0]], temp[1]];
        }
      } else {
        params[temp[0]] = temp[1];
      }
    }
    return params;
  }
};
/* harmony default export */ __webpack_exports__["default"] = (urlUtils);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/global.js":
/*!***********************************!*\
  !*** ./assets/js/theme/global.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Global; });
/* harmony import */ var focus_within_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! focus-within-polyfill */ "./node_modules/focus-within-polyfill/dist/focus-within-polyfill.js");
/* harmony import */ var focus_within_polyfill__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(focus_within_polyfill__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _global_jquery_migrate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./global/jquery-migrate */ "./assets/js/theme/global/jquery-migrate.js");
/* harmony import */ var _common_select_option_plugin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common/select-option-plugin */ "./assets/js/theme/common/select-option-plugin.js");
/* harmony import */ var _common_select_option_plugin__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_common_select_option_plugin__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _page_manager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./page-manager */ "./assets/js/theme/page-manager.js");
/* harmony import */ var _global_quick_search__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./global/quick-search */ "./assets/js/theme/global/quick-search.js");
/* harmony import */ var _global_currency_selector__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./global/currency-selector */ "./assets/js/theme/global/currency-selector.js");
/* harmony import */ var _global_mobile_menu_toggle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./global/mobile-menu-toggle */ "./assets/js/theme/global/mobile-menu-toggle.js");
/* harmony import */ var _global_menu__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./global/menu */ "./assets/js/theme/global/menu.js");
/* harmony import */ var _global_foundation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./global/foundation */ "./assets/js/theme/global/foundation.js");
/* harmony import */ var _global_quick_view__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./global/quick-view */ "./assets/js/theme/global/quick-view.js");
/* harmony import */ var _global_cart_preview__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./global/cart-preview */ "./assets/js/theme/global/cart-preview.js");
/* harmony import */ var _global_cookieNotification__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./global/cookieNotification */ "./assets/js/theme/global/cookieNotification.js");
/* harmony import */ var _global_adminBar__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./global/adminBar */ "./assets/js/theme/global/adminBar.js");
/* harmony import */ var _common_carousel__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./common/carousel */ "./assets/js/theme/common/carousel/index.js");
/* harmony import */ var _global_loading_progress_bar__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./global/loading-progress-bar */ "./assets/js/theme/global/loading-progress-bar.js");
/* harmony import */ var _global_svg_injector__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./global/svg-injector */ "./assets/js/theme/global/svg-injector.js");
/* harmony import */ var _halothemes_haloGlobal__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./halothemes/haloGlobal */ "./assets/js/theme/halothemes/haloGlobal.js");
/* harmony import */ var _halothemes_haloRecentlyBoughtPopup__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./halothemes/haloRecentlyBoughtPopup */ "./assets/js/theme/halothemes/haloRecentlyBoughtPopup.js");
/* harmony import */ var _halothemes_haloAjaxAddToCart__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./halothemes/haloAjaxAddToCart */ "./assets/js/theme/halothemes/haloAjaxAddToCart.js");
/* harmony import */ var _halothemes_haloRecentlyViewedProducts__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./halothemes/haloRecentlyViewedProducts */ "./assets/js/theme/halothemes/haloRecentlyViewedProducts.js");
/* harmony import */ var _halothemes_haloBeforeYouLeave__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./halothemes/haloBeforeYouLeave */ "./assets/js/theme/halothemes/haloBeforeYouLeave.js");
/* harmony import */ var _halothemes_haloTopPromotion__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./halothemes/haloTopPromotion */ "./assets/js/theme/halothemes/haloTopPromotion.js");
/* harmony import */ var _halothemes_haloStickyHeader__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./halothemes/haloStickyHeader */ "./assets/js/theme/halothemes/haloStickyHeader.js");
/* harmony import */ var _halothemes_haloNewsletterPopup__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./halothemes/haloNewsletterPopup */ "./assets/js/theme/halothemes/haloNewsletterPopup.js");
/* harmony import */ var _halothemes_haloStickyNotificationBar__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./halothemes/haloStickyNotificationBar */ "./assets/js/theme/halothemes/haloStickyNotificationBar.js");
/* harmony import */ var _halothemes_haloMegaMenu__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./halothemes/haloMegaMenu */ "./assets/js/theme/halothemes/haloMegaMenu.js");
function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

















/* Halothemes */










/* */

window.haloMegaMenu = _halothemes_haloMegaMenu__WEBPACK_IMPORTED_MODULE_25__["default"];
var Global = /*#__PURE__*/function (_PageManager) {
  _inheritsLoose(Global, _PageManager);
  function Global() {
    return _PageManager.apply(this, arguments) || this;
  }
  var _proto = Global.prototype;
  _proto.onReady = function onReady() {
    var _this$context = this.context,
      channelId = _this$context.channelId,
      cartId = _this$context.cartId,
      productId = _this$context.productId,
      categoryId = _this$context.categoryId,
      secureBaseUrl = _this$context.secureBaseUrl,
      maintenanceModeSettings = _this$context.maintenanceModeSettings,
      adminBarLanguage = _this$context.adminBarLanguage,
      showAdminBar = _this$context.showAdminBar;
    Object(_global_cart_preview__WEBPACK_IMPORTED_MODULE_10__["default"])(secureBaseUrl, cartId, this.context);
    Object(_global_quick_search__WEBPACK_IMPORTED_MODULE_4__["default"])();
    Object(_global_currency_selector__WEBPACK_IMPORTED_MODULE_5__["default"])(cartId);
    Object(_global_foundation__WEBPACK_IMPORTED_MODULE_8__["default"])($(document));
    Object(_global_quick_view__WEBPACK_IMPORTED_MODULE_9__["default"])(this.context);
    Object(_common_carousel__WEBPACK_IMPORTED_MODULE_13__["default"])(this.context);
    Object(_global_menu__WEBPACK_IMPORTED_MODULE_7__["default"])();
    Object(_global_mobile_menu_toggle__WEBPACK_IMPORTED_MODULE_6__["default"])();
    Object(_global_cookieNotification__WEBPACK_IMPORTED_MODULE_11__["default"])();
    if (showAdminBar) {
      Object(_global_adminBar__WEBPACK_IMPORTED_MODULE_12__["default"])(secureBaseUrl, channelId, maintenanceModeSettings, JSON.parse(adminBarLanguage), productId, categoryId);
    }
    Object(_global_loading_progress_bar__WEBPACK_IMPORTED_MODULE_14__["default"])();
    Object(_global_svg_injector__WEBPACK_IMPORTED_MODULE_15__["default"])();

    /* Halothemes */
    window.themeSettings = this.context.themeSettings;
    Object(_halothemes_haloGlobal__WEBPACK_IMPORTED_MODULE_16__["default"])(this.context);
    var $context = this.context;
    var checkloadFunction = true;
    function loadFunction() {
      if (checkloadFunction) {
        checkloadFunction = false;
        Object(_halothemes_haloRecentlyBoughtPopup__WEBPACK_IMPORTED_MODULE_17__["default"])($context);
        Object(_halothemes_haloAjaxAddToCart__WEBPACK_IMPORTED_MODULE_18__["default"])($context);
        Object(_halothemes_haloRecentlyViewedProducts__WEBPACK_IMPORTED_MODULE_19__["default"])($context);
        Object(_halothemes_haloBeforeYouLeave__WEBPACK_IMPORTED_MODULE_20__["default"])($context);
        if ($context.themeSettings.halo_sticky_header) {
          Object(_halothemes_haloStickyHeader__WEBPACK_IMPORTED_MODULE_22__["default"])();
        }
        if ($('body.page-type-default').length) {
          if ($context.themeSettings.homepage_promotion) {
            Object(_halothemes_haloTopPromotion__WEBPACK_IMPORTED_MODULE_21__["default"])(1, true);
          } else {
            Object(_halothemes_haloTopPromotion__WEBPACK_IMPORTED_MODULE_21__["default"])(1, false);
          }
        }
        if ($context.themeSettings.halo_newsletter_popup) {
          Object(_halothemes_haloNewsletterPopup__WEBPACK_IMPORTED_MODULE_23__["default"])(1, true);
        } else {
          Object(_halothemes_haloNewsletterPopup__WEBPACK_IMPORTED_MODULE_23__["default"])(1, false);
        }
        if ($context.themeSettings.halo_sticky_notification_bar) {
          Object(_halothemes_haloStickyNotificationBar__WEBPACK_IMPORTED_MODULE_24__["default"])(1, true);
        } else {
          Object(_halothemes_haloStickyNotificationBar__WEBPACK_IMPORTED_MODULE_24__["default"])(1, false);
        }
      }
    }
    loadFunction();

    // $(document).on('keydown', (e) => {
    //     loadFunction();
    // });

    // $(document).on('mousemove', (e) => {
    //     loadFunction();
    // });

    // $(document).on('touchstart', (e) => {
    //     loadFunction();
    // });

    // $(window).on('scroll', (e) => {
    //     loadFunction();
    // });
  };
  return Global;
}(_page_manager__WEBPACK_IMPORTED_MODULE_3__["default"]);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/global/adminBar.js":
/*!********************************************!*\
  !*** ./assets/js/theme/global/adminBar.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/**
 * Persistent admin bar for store administrators viewing the storefront
 * @param maintenanceMode
 * @param secureBaseUrl
 * @param channelId
 * @param adminBarLanguage
 * @param productId
 * @param categoryId
 */
/* harmony default export */ __webpack_exports__["default"] = (function (secureBaseUrl, channelId, maintenanceMode, adminBarLanguage, productId, categoryId) {
  if (channelId === void 0) {
    channelId = 1;
  }
  if (maintenanceMode === void 0) {
    maintenanceMode = {};
  }
  var lang = adminBarLanguage.translations;
  var password = maintenanceMode.password || false;
  var isMaintenanceMode = maintenanceMode.header && !password || false;
  function isInIframe() {
    try {
      return window.location !== window.parent.location;
    } catch (e) {
      return true;
    }
  }

  // eslint-disable-next-line no-shadow
  function getContextualMatch(productId, categoryId) {
    if (productId && parseInt(productId, 10)) {
      return {
        type: 'product',
        url: "/manage/products/" + productId + "/edit"
      };
    } else if (categoryId && parseInt(categoryId, 10)) {
      return {
        type: 'category',
        url: "/manage/products/categories/" + categoryId + "/edit"
      };
    }
  }
  function doesNotHaveAdminCookie() {
    return document.cookie.indexOf('ADMIN_BAR=1') === -1;
  }

  // Set admin cookie if appropriate
  if (window.URLSearchParams && window.URL && new URL(document.location).searchParams.get('ctk')) {
    document.cookie = 'ADMIN_BAR=1; path=/';
  }

  // Return if isInIframe is true (inside page builder) or if there is no admin cookie
  if (doesNotHaveAdminCookie() || isInIframe()) {
    return;
  }
  var url = encodeURIComponent((new URL(window.location.href).pathname + window.location.search).replace(/^\/|\/$/g, ''));
  var contextualMatch = getContextualMatch(productId, categoryId);
  var $element = $('<div>', {
    "class": 'adminBar'
  });
  $element.html("<div class=\"adminBar-logo\">\n        <a href=\"" + secureBaseUrl + "/manage/dashboard\"><svg><use xlink:href=\"#icon-logo-small\"></use></svg></a></div>\n        <div class=\"adminBar-content\">\n        " + (password ? "<div class=\"adminBar-private\">\n                    <span class=\"preview\">" + lang['admin.prelaunch_header'] + " <strong>" + password + "</strong></span>\n                </div>" : '') + "\n        " + (isMaintenanceMode ? "<div class=\"adminBar-private\">\n                <span>" + lang['admin.maintenance_header'] + "</span>\n                <span class=\"svg-icon svg-baseline adminBar-large tooltip\">\n                    <svg><use xlink:href=\"#icon-admin-tooltip\"></use></svg>\n                    <span class=\"tooltiptext tooltip-bottom\">" + lang['admin.maintenance_tooltip'] + "</span>\n                </span>\n                <a href=\"?showStore=no\" class=\"adminBar-large\">" + lang['admin.maintenance_showstore_link'] + " <span class=\"svg-icon svg-baseline\">\n                    <svg style=\"height: 0.8em;\"><use xlink:href=\"#icon-admin-link\"></use></svg>\n                </span></a>\n         </div>" : '') + "\n         <div class=\"adminBar-links\">\n            " + (contextualMatch ? "<a href='" + secureBaseUrl + contextualMatch.url + "' target=\"_blank\">\n                <span class=\"svg-icon svg-baseline\">\n                    <svg><use xlink:href=\"#icon-admin-edit\"></use></svg>\n                </span><span class=\"adminBar-large\"> Edit " + contextualMatch.type + " information</span></a>" : '') + "\n            <a href=\"" + secureBaseUrl + "/manage/page-builder?channelId=" + channelId + "&redirectIframeUrl=" + url + "\" target=\"_blank\">\n                <span class=\"svg-icon svg-baseline\">\n                    <svg><use xlink:href=\"#icon-admin-brush\"></use></svg>\n                </span><span class=\"adminBar-large\"> " + lang['admin.page_builder_link'] + "</span>\n            </a>\n         </div>\n         <div class=\"adminBar-close\" id=\"close-admin-bar\">\n            <span class=\"svg-icon svg-baseline\">\n                <svg><use xlink:href=\"#icon-admin-close\"></use></svg>\n            </span>\n         </div>\n        </div>");
  $('body').addClass('hasAdminBar');
  $('body').append($element);
  $('#close-admin-bar').click(function () {
    $('body').removeClass('hasAdminBar');
    $('.adminBar').remove();
    document.cookie = 'ADMIN_BAR=0; path=/';
  });
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/global/cart-preview.js":
/*!************************************************!*\
  !*** ./assets/js/theme/global/cart-preview.js ***!
  \************************************************/
/*! exports provided: CartPreviewEvents, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CartPreviewEvents", function() { return CartPreviewEvents; });
/* harmony import */ var foundation_sites_js_foundation_foundation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! foundation-sites/js/foundation/foundation */ "./node_modules/foundation-sites/js/foundation/foundation.js");
/* harmony import */ var foundation_sites_js_foundation_foundation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(foundation_sites_js_foundation_foundation__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var foundation_sites_js_foundation_foundation_dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! foundation-sites/js/foundation/foundation.dropdown */ "./node_modules/foundation-sites/js/foundation/foundation.dropdown.js");
/* harmony import */ var foundation_sites_js_foundation_foundation_dropdown__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(foundation_sites_js_foundation_foundation_dropdown__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bigcommerce/stencil-utils */ "./node_modules/@bigcommerce/stencil-utils/src/main.js");
/* harmony import */ var _modal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modal */ "./assets/js/theme/global/modal.js");
/* harmony import */ var _sweet_alert__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sweet-alert */ "./assets/js/theme/global/sweet-alert.js");
/* harmony import */ var _cart__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../cart */ "./assets/js/theme/cart.js");
/* harmony import */ var _halothemes_haloQuickEditCart__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../halothemes/haloQuickEditCart */ "./assets/js/theme/halothemes/haloQuickEditCart.js");
/* harmony import */ var _halothemes_haloCalculateFreeShipping__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../halothemes/haloCalculateFreeShipping */ "./assets/js/theme/halothemes/haloCalculateFreeShipping.js");








var CartPreviewEvents = {
  close: 'closed.fndtn.dropdown',
  open: 'opened.fndtn.dropdown'
};
/* harmony default export */ __webpack_exports__["default"] = (function (secureBaseUrl, cartId, context) {
  var loadingClass = 'is-loading';
  var $cart = $('[data-cart-preview]');
  var $cart2 = $('[data-cart-preview2]');
  var $cart3 = $('[data-cart-preview3]');
  var $cartDropdown = $('#cart-preview-dropdown');
  var $cartLoading = $('<div class="loadingOverlay"></div>');
  var $body = $('body');
  $body.on('cart-quantity-update', function (event, quantity) {
    $cart.attr('aria-label', function (_, prevValue) {
      return prevValue.replace(/\d+/, quantity);
    });
    if (!quantity) {
      $cart.addClass('navUser-item--cart__hidden-s');
    } else {
      $cart.removeClass('navUser-item--cart__hidden-s');
    }
    $('.cart-quantity').text(quantity).toggleClass('countPill--positive', quantity > 0);
    if (_bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__["default"].tools.storage.localStorageAvailable()) {
      localStorage.setItem('cart-quantity', quantity);
    }
  });
  if (!$('body').hasClass('page-type-cart')) {
    Object(_halothemes_haloQuickEditCart__WEBPACK_IMPORTED_MODULE_6__["default"])(context);
    $cart.on('click', function (event) {
      var options = {
        template: 'common/cart-preview'
      };

      // Redirect to full cart page
      //
      // https://developer.mozilla.org/en-US/docs/Browser_detection_using_the_user_agent
      // In summary, we recommend looking for the string 'Mobi' anywhere in the User Agent to detect a mobile device.
      if (/Mobi/i.test(navigator.userAgent)) {
        return event.stopPropagation();
      }
      event.preventDefault();
      $body.toggleClass('halo-open-side-cart');
      $cartDropdown.addClass(loadingClass).html($cartLoading);
      $cartLoading.show();
      _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__["default"].api.cart.getContent(options, function (err, response) {
        $cartDropdown.removeClass(loadingClass).html(response);
        $cartLoading.hide();
        Object(_halothemes_haloCalculateFreeShipping__WEBPACK_IMPORTED_MODULE_7__["default"])(context);
      });
    });
    $cart2.on('click', function (event) {
      var options = {
        template: 'common/cart-preview'
      };
      // Redirect to full cart page
      //
      // https://developer.mozilla.org/en-US/docs/Browser_detection_using_the_user_agent
      // In summary, we recommend looking for the string 'Mobi' anywhere in the User Agent to detect a mobile device.
      // if (/Mobi/i.test(navigator.userAgent)) {
      //     return event.stopPropagation();
      // }

      event.preventDefault();
      $body.toggleClass('halo-open-side-cart');
      $cartDropdown.addClass(loadingClass).html($cartLoading);
      $cartLoading.show();
      _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__["default"].api.cart.getContent(options, function (err, response) {
        $cartDropdown.removeClass(loadingClass).html(response);
        $cartLoading.hide();
        Object(_halothemes_haloCalculateFreeShipping__WEBPACK_IMPORTED_MODULE_7__["default"])(context);
      });
      $(document).on('click', '.halo-overlay-background', function (ev) {
        refreshContent();
      });
      $(document).on('click', '#cart-mobile .halo-close', function (ev) {
        refreshContent();
      });
    });
    $cart3.on('click', function (event) {
      var options = {
        template: 'common/cart-preview'
      };
      // Redirect to full cart page
      //
      // https://developer.mozilla.org/en-US/docs/Browser_detection_using_the_user_agent
      // In summary, we recommend looking for the string 'Mobi' anywhere in the User Agent to detect a mobile device.
      // if (/Mobi/i.test(navigator.userAgent)) {
      //     return event.stopPropagation();
      // }

      event.preventDefault();
      $body.toggleClass('halo-open-side-cart');
      $cartDropdown.addClass(loadingClass).html($cartLoading);
      $cartLoading.show();
      _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__["default"].api.cart.getContent(options, function (err, response) {
        $cartDropdown.removeClass(loadingClass).html(response);
        $cartLoading.hide();
        Object(_halothemes_haloCalculateFreeShipping__WEBPACK_IMPORTED_MODULE_7__["default"])(context);
      });
      $(document).on('click', '.halo-overlay-background', function (ev) {
        refreshContent();
      });
      $(document).on('click', '#cart-mobile .halo-close', function (ev) {
        refreshContent();
      });
    });
  }

  /* BEGIN EDIT DROPDOWN CART */
  function refreshContent(remove) {
    var options = {
      template: 'common/cart-preview'
    };
    $cartDropdown.addClass(loadingClass).prepend($cartLoading);
    $cartLoading.show();
    _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__["default"].api.cart.getContent(options, function (err, response) {
      $cartDropdown.removeClass(loadingClass).html(response);
      $cartLoading.hide();
      var quantity = $('[data-cart-quantity]').data('cartQuantity') || 0;
      $('body').trigger('cart-quantity-update', quantity);
      if (location.pathname == "/cart.php") {
        cart_page.refreshContent(remove);
      }
      Object(_halothemes_haloCalculateFreeShipping__WEBPACK_IMPORTED_MODULE_7__["default"])(context);
    });
  }

  // Cart Remove
  $(document).on('click', '.previewCart .cart-remove', function (event) {
    var itemId = $(event.currentTarget).data('cartItemid');
    var string = $(event.currentTarget).data('confirmDelete');
    _sweet_alert__WEBPACK_IMPORTED_MODULE_4__["default"].fire({
      text: string,
      type: 'warning',
      showCancelButton: true
    }).then(function () {
      // remove item from cart
      cartRemoveItem(itemId);
    });
    event.preventDefault();
  });
  function cartRemoveItem(itemId) {
    _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__["default"].api.cart.itemRemove(itemId, function (err, response) {
      if (response.data.status === 'succeed') {
        refreshContent(true);
      } else {
        alert(response.data.errors.join('\n'));
      }
    });
  }

  // Cart update
  $(document).on('click', '[data-cart-update]', function (event) {
    var $target = $(event.currentTarget);
    event.preventDefault();

    // update cart quantity
    cartUpdate($target);
  });
  function cartUpdate($target) {
    var itemId = $target.data('cart-itemid');
    var $el = $("#qty-" + itemId);
    var oldQty = parseInt($el.val(), 10);
    var maxQty = parseInt($el.data('quantityMax'), 10);
    var minQty = parseInt($el.data('quantityMin'), 10);
    var minError = $el.data('quantityMinError');
    var maxError = $el.data('quantityMaxError');
    var newQty = $target.data('action') === 'inc' ? oldQty + 1 : oldQty - 1;
    var invalidEntry;

    // Does not quality for min/max quantity
    if (!newQty) {
      invalidEntry = newQty;
      $el.val(oldQty);
      return _sweet_alert__WEBPACK_IMPORTED_MODULE_4__["default"].fire({
        text: invalidEntry + " is not a valid entry",
        icon: 'error'
      });
    } else if (newQty < minQty) {
      return _sweet_alert__WEBPACK_IMPORTED_MODULE_4__["default"].fire({
        text: minError,
        icon: 'error'
      });
    } else if (maxQty > 0 && newQty > maxQty) {
      return _sweet_alert__WEBPACK_IMPORTED_MODULE_4__["default"].fire({
        text: maxError,
        icon: 'error'
      });
    } else {
      _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__["default"].api.cart.itemUpdate(itemId, newQty, function (err, response) {
        if (response.data.status === 'succeed') {
          // if the quantity is changed "1" from "0", we have to remove the row.
          var remove = newQty === 0;
          refreshContent(remove);
        } else {
          $el.val(oldQty);
          _sweet_alert__WEBPACK_IMPORTED_MODULE_4__["default"].fire({
            text: response.data.errors.join('\n'),
            icon: 'error'
          });
        }
      });
    }
  }

  // cart qty manually updates
  $(document).on('focus', '.previewCart .cart-item-qty-input', function (event) {
    var $target = $(event.currentTarget);
    $target.data('preVal', $target.val());
  });
  $(document).on('change', '.previewCart .cart-item-qty-input', function (event) {
    var $target = $(event.currentTarget);
    var preVal = $target.data('preVal');
    event.preventDefault();
    cartUpdateQtyTextChange($target, preVal);
  });
  function cartUpdateQtyTextChange($target, preVal) {
    if (preVal === void 0) {
      preVal = null;
    }
    var itemId = $target.data('cart-itemid');
    var $el = $("#qty-" + itemId);
    var maxQty = parseInt($el.data('quantityMax'), 10);
    var minQty = parseInt($el.data('quantityMin'), 10);
    var oldQty = preVal !== null ? preVal : minQty;
    var minError = $el.data('quantityMinError');
    var maxError = $el.data('quantityMaxError');
    var newQty = $target.val();
    var invalidEntry;

    // Does not quality for min/max quantity
    if (!newQty) {
      invalidEntry = $el.val();
      $el.val(oldQty);
      return _sweet_alert__WEBPACK_IMPORTED_MODULE_4__["default"].fire({
        text: invalidEntry + " is not a valid entry",
        icon: 'error'
      });
    } else if (newQty < minQty) {
      $el.val(oldQty);
      return _sweet_alert__WEBPACK_IMPORTED_MODULE_4__["default"].fire({
        text: minError,
        icon: 'error'
      });
    } else if (maxQty > 0 && newQty > maxQty) {
      $el.val(oldQty);
      return _sweet_alert__WEBPACK_IMPORTED_MODULE_4__["default"].fire({
        text: maxError,
        icon: 'error'
      });
    } else {
      _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__["default"].api.cart.itemUpdate(itemId, newQty, function (err, response) {
        if (response.data.status === 'succeed') {
          // if the quantity is changed "1" from "0", we have to remove the row.
          var remove = newQty === 0;
          refreshContent(remove);
        } else {
          $el.val(oldQty);
          _sweet_alert__WEBPACK_IMPORTED_MODULE_4__["default"].fire({
            text: response.data.errors.join('\n'),
            icon: 'error'
          });
        }
      });
    }
  }
  // // END EDIT DROPDOWN CART

  var quantity = 0;
  if (cartId) {
    // Get existing quantity from localStorage if found
    if (_bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__["default"].tools.storage.localStorageAvailable()) {
      if (localStorage.getItem('cart-quantity')) {
        quantity = Number(localStorage.getItem('cart-quantity'));
        $body.trigger('cart-quantity-update', quantity);
      }
    }

    // Get updated cart quantity from the Cart API
    var cartQtyPromise = new Promise(function (resolve, reject) {
      _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__["default"].api.cart.getCartQuantity({
        baseUrl: secureBaseUrl,
        cartId: cartId
      }, function (err, qty) {
        if (err) {
          // If this appears to be a 404 for the cart ID, set cart quantity to 0
          if (err === 'Not Found') {
            resolve(0);
          } else {
            reject(err);
          }
        }
        resolve(qty);
      });
    });

    // If the Cart API gives us a different quantity number, update it
    cartQtyPromise.then(function (qty) {
      quantity = qty;
      $body.trigger('cart-quantity-update', quantity);
    });
  } else {
    $body.trigger('cart-quantity-update', quantity);
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/global/cookieNotification.js":
/*!******************************************************!*\
  !*** ./assets/js/theme/global/cookieNotification.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bigcommerce/stencil-utils */ "./node_modules/@bigcommerce/stencil-utils/src/main.js");


/**
 * European websites must notify users of cookies to comply with European Union law.
 * This will alert shoppers that this website uses cookies.
 */
/* harmony default export */ __webpack_exports__["default"] = (function () {
  /*
  // Here you can override the default browser alert box by hooking to the 'cookie-privacy-notification' hook.
  utils.hooks.on('cookie-privacy-notification', (event, privacyMessage) => {
      // You can make your own custom modal or alert box appear in your theme using the privacyMessage provided
      myCustomAlert(privacyMessage);
       // Call event.preventDefault() to prevent the default browser alert from occurring in stencil-utils
      event.preventDefault();
  });
  */

  var $privacyDialog = $('.cookieMessage');
  if (document.cookie.indexOf('ACCEPT_COOKIE_USAGE') === -1) {
    $privacyDialog.show();
  }
  $('body').on('click', '[data-privacy-accept]', function () {
    var date = new Date();
    date.setDate(date.getDate() + 365);
    document.cookie = "ACCEPT_COOKIE_USAGE=1;expires=" + date.toGMTString() + "; path=/";
    _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_0__["default"].hooks.emit('cookie-privacy-accepted');
    $privacyDialog.hide();
  });
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/global/currency-selector.js":
/*!*****************************************************!*\
  !*** ./assets/js/theme/global/currency-selector.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var _sweet_alert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sweet-alert */ "./assets/js/theme/global/sweet-alert.js");
/* harmony import */ var _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bigcommerce/stencil-utils */ "./node_modules/@bigcommerce/stencil-utils/src/main.js");


/* harmony default export */ __webpack_exports__["default"] = (function (cartId) {
  function changeCurrency(url, currencyCode) {
    $.ajax({
      url: url,
      contentType: 'application/json',
      method: 'POST',
      data: JSON.stringify({
        currencyCode: currencyCode
      })
    }).done(function () {
      window.location.reload();
    }).fail(function (e) {
      _sweet_alert__WEBPACK_IMPORTED_MODULE_0__["default"].fire({
        text: JSON.parse(e.responseText).error,
        icon: 'warning',
        showCancelButton: true
      });
    });
  }
  $('[data-cart-currency-switch-url]').on('click', function (event) {
    var currencySessionSwitcher = event.target.href;
    if (!cartId) {
      return;
    }
    event.preventDefault();
    _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_1__["default"].api.cart.getCart({
      cartId: cartId
    }, function (err, response) {
      if (err || response === undefined) {
        window.location.href = currencySessionSwitcher;
        return;
      }
      var showWarning = response.discounts.some(function (discount) {
        return discount.discountedAmount > 0;
      }) || response.coupons.length > 0 || response.lineItems.giftCertificates.length > 0;
      if (showWarning) {
        _sweet_alert__WEBPACK_IMPORTED_MODULE_0__["default"].fire({
          text: $(event.target).data('warning'),
          icon: 'warning',
          showCancelButton: true
        }).then(function (result) {
          if (result.value && result.value === true) {
            changeCurrency($(event.target).data('cart-currency-switch-url'), $(event.target).data('currency-code'));
          }
        });
      } else {
        changeCurrency($(event.target).data('cart-currency-switch-url'), $(event.target).data('currency-code'));
      }
    });
  });
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/global/foundation.js":
/*!**********************************************!*\
  !*** ./assets/js/theme/global/foundation.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var foundation_sites_js_foundation_foundation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! foundation-sites/js/foundation/foundation */ "./node_modules/foundation-sites/js/foundation/foundation.js");
/* harmony import */ var foundation_sites_js_foundation_foundation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(foundation_sites_js_foundation_foundation__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var foundation_sites_js_foundation_foundation_dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! foundation-sites/js/foundation/foundation.dropdown */ "./node_modules/foundation-sites/js/foundation/foundation.dropdown.js");
/* harmony import */ var foundation_sites_js_foundation_foundation_dropdown__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(foundation_sites_js_foundation_foundation_dropdown__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var foundation_sites_js_foundation_foundation_reveal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! foundation-sites/js/foundation/foundation.reveal */ "./node_modules/foundation-sites/js/foundation/foundation.reveal.js");
/* harmony import */ var foundation_sites_js_foundation_foundation_reveal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(foundation_sites_js_foundation_foundation_reveal__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var foundation_sites_js_foundation_foundation_tab__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! foundation-sites/js/foundation/foundation.tab */ "./node_modules/foundation-sites/js/foundation/foundation.tab.js");
/* harmony import */ var foundation_sites_js_foundation_foundation_tab__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(foundation_sites_js_foundation_foundation_tab__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _modal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modal */ "./assets/js/theme/global/modal.js");
/* harmony import */ var _reveal_close__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./reveal-close */ "./assets/js/theme/global/reveal-close.js");






/* harmony default export */ __webpack_exports__["default"] = (function ($element) {
  $element.foundation({
    dropdown: {
      // specify the class used for active dropdowns
      active_class: 'is-open'
    },
    reveal: {
      bg_class: 'modal-background',
      dismiss_modal_class: 'modal-close',
      close_on_background_click: true
    },
    tab: {
      active_class: 'is-active'
    }
  });
  Object(_modal__WEBPACK_IMPORTED_MODULE_4__["default"])('[data-reveal]', {
    $context: $element
  });
  Object(_reveal_close__WEBPACK_IMPORTED_MODULE_5__["default"])('[data-reveal-close]', {
    $context: $element
  });
});

/***/ }),

/***/ "./assets/js/theme/global/halosearchCategories.js":
/*!********************************************************!*\
  !*** ./assets/js/theme/global/halosearchCategories.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Themevale_QuickSearch; });
/* harmony import */ var _bigcommerce_stencil_utils_src_hooks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bigcommerce/stencil-utils/src/hooks */ "./node_modules/@bigcommerce/stencil-utils/src/hooks/index.js");
/* harmony import */ var _bigcommerce_stencil_utils_src_api_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bigcommerce/stencil-utils/src/api/base */ "./node_modules/@bigcommerce/stencil-utils/src/api/base.js");
function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }


var Themevale_QuickSearch = /*#__PURE__*/function (_Base) {
  _inheritsLoose(Themevale_QuickSearch, _Base);
  /**
   * @Constructor
   */
  function Themevale_QuickSearch(version) {
    var _this;
    // call parent
    _this = _Base.call(this, version) || this;

    // set up class variables
    _this.endpoint = '/search.php?search_query=';
    return _this;
  }

  /**
   * Get search results
   * @param {String} query
   * @param {Object} params
   * @param {Function} callback
   */
  var _proto = Themevale_QuickSearch.prototype;
  _proto.search = function search(query, category, params, callback) {
    var url = this.endpoint + encodeURIComponent(query);
    if (category) {
      url = this.endpoint + encodeURIComponent(query) + '&category=' + encodeURIComponent(category);
    }
    var paramsArg = params;
    var callbackArg = callback;
    if (typeof paramsArg === 'function') {
      callbackArg = paramsArg;
      paramsArg = {};
    }
    _bigcommerce_stencil_utils_src_hooks__WEBPACK_IMPORTED_MODULE_0__["default"].emit('search-quick-remote', query);
    this.makeRequest(url, 'GET', paramsArg, false, callbackArg);
  };
  return Themevale_QuickSearch;
}(_bigcommerce_stencil_utils_src_api_base__WEBPACK_IMPORTED_MODULE_1__["default"]);


/***/ }),

/***/ "./assets/js/theme/global/jquery-migrate.js":
/*!**************************************************!*\
  !*** ./assets/js/theme/global/jquery-migrate.js ***!
  \**************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _jquery_migrate_init__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./jquery-migrate/init */ "./assets/js/theme/global/jquery-migrate/init.js");
/* harmony import */ var _jquery_migrate_traversing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./jquery-migrate/traversing */ "./assets/js/theme/global/jquery-migrate/traversing.js");
/* harmony import */ var _jquery_migrate_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./jquery-migrate/data */ "./assets/js/theme/global/jquery-migrate/data.js");
/* harmony import */ var _jquery_migrate_event__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./jquery-migrate/event */ "./assets/js/theme/global/jquery-migrate/event.js");
// Needed because we use Foundation 5.5, which expects jQuery 2.x. However,
// rather than bringing in all of jquery-migrate, we're cherry picking individual
// fixes needed for Foundation.




Object(_jquery_migrate_init__WEBPACK_IMPORTED_MODULE_0__["default"])();
Object(_jquery_migrate_traversing__WEBPACK_IMPORTED_MODULE_1__["default"])();
Object(_jquery_migrate_data__WEBPACK_IMPORTED_MODULE_2__["default"])();
Object(_jquery_migrate_event__WEBPACK_IMPORTED_MODULE_3__["default"])();

/***/ }),

/***/ "./assets/js/theme/global/jquery-migrate/data.js":
/*!*******************************************************!*\
  !*** ./assets/js/theme/global/jquery-migrate/data.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(jQuery) {// From https://github.com/jquery/jquery-migrate/blob/master/src/data.js
//
// https://jquery.com/upgrade-guide/3.0/#data

/* eslint-disable prefer-rest-params, func-names */
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var oldData = jQuery.data;
  jQuery.data = function (elem, name, value) {
    var curData;

    // Name can be an object, and each entry in the object is meant to be set as data
    if (name && typeof name === 'object' && arguments.length === 2) {
      curData = jQuery.hasData(elem) && oldData.call(this, elem);
      var sameKeys = {};
      for (var key in name) {
        if (key !== jQuery.camelCase(key)) {
          curData[key] = name[key];
        } else {
          sameKeys[key] = name[key];
        }
      }
      oldData.call(this, elem, sameKeys);
      return name;
    }

    // If the name is transformed, look for the un-transformed name in the data object
    if (name && typeof name === 'string' && name !== jQuery.camelCase(name)) {
      curData = jQuery.hasData(elem) && oldData.call(this, elem);
      if (curData && name in curData) {
        if (arguments.length > 2) {
          curData[name] = value;
        }
        return curData[name];
      }
    }
    return oldData.apply(this, arguments);
  };
});
/* eslint-enable prefer-rest-params */
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/global/jquery-migrate/event.js":
/*!********************************************************!*\
  !*** ./assets/js/theme/global/jquery-migrate/event.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(jQuery) {// From https://github.com/jquery/jquery-migrate/blob/master/src/event.js
//
// https://jquery.com/upgrade-guide/3.0/#breaking-change-load-unload-and-error-removed

/* eslint-disable prefer-rest-params */
/* harmony default export */ __webpack_exports__["default"] = (function () {
  jQuery.each(['load', 'unload', 'error'], function (_, name) {
    var oldLoad = jQuery.fn.load;
    jQuery.fn[name] = function handler() {
      var args = Array.prototype.slice.call(arguments, 0);

      // If this is an ajax load() the first arg should be the string URL;
      // technically this could also be the "Anything" arg of the event .load()
      // which just goes to show why this dumb signature has been deprecated!
      // jQuery custom builds that exclude the Ajax module justifiably die here.
      if (name === 'load' && typeof args[0] === 'string') {
        return oldLoad.apply(this, args);
      }
      args.splice(0, 0, name);
      if (arguments.length) {
        return this.on.apply(this, args);
      }

      // Use .triggerHandler here because:
      // - load and unload events don't need to bubble, only applied to window or image
      // - error event should not bubble to window, although it does pre-1.7
      // See http://bugs.jquery.com/ticket/11820
      this.triggerHandler.apply(this, args);
      return this;
    };
  });
});
/* eslint-enable prefer-rest-params */
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/global/jquery-migrate/init.js":
/*!*******************************************************!*\
  !*** ./assets/js/theme/global/jquery-migrate/init.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(jQuery) {// From https://github.com/jquery/jquery-migrate/blob/1.x-stable/src/core.js
//
// https://jquery.com/upgrade-guide/3.0/#breaking-change-deprecated-context-and-selector-properties-removed

/* eslint-disable prefer-rest-params, func-names */
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var oldInit = jQuery.fn.init;
  jQuery.fn.init = function (selector, context) {
    var ret = oldInit.apply(this, arguments);

    // Fill in selector and context properties so .live() works
    if (selector && selector.selector !== undefined) {
      // A jQuery object, copy its properties
      ret.selector = selector.selector;
      ret.context = selector.context;
    } else {
      ret.selector = typeof selector === 'string' ? selector : '';
      if (selector) {
        ret.context = selector.nodeType ? selector : context || document;
      }
    }
    return ret;
  };
  jQuery.fn.init.prototype = jQuery.fn;
});
/* eslint-enable prefer-rest-params */
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/global/jquery-migrate/traversing.js":
/*!*************************************************************!*\
  !*** ./assets/js/theme/global/jquery-migrate/traversing.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(jQuery) {// From https://github.com/jquery/jquery-migrate/blob/1.x-stable/src/traversing.js
//
// https://jquery.com/upgrade-guide/3.0/#breaking-change-deprecated-context-and-selector-properties-removed

/* eslint-disable prefer-rest-params, func-names */
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var oldFnFind = jQuery.fn.find;
  jQuery.fn.find = function (selector) {
    var ret = oldFnFind.apply(this, arguments);
    ret.context = this.context;
    ret.selector = this.selector ? this.selector + " " + selector : selector;
    return ret;
  };
});
/* eslint-enable prefer-rest-params */
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/global/loading-progress-bar.js":
/*!********************************************************!*\
  !*** ./assets/js/theme/global/loading-progress-bar.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var nanobar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nanobar */ "./node_modules/nanobar/nanobar.min.js");
/* harmony import */ var nanobar__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(nanobar__WEBPACK_IMPORTED_MODULE_0__);

/* harmony default export */ __webpack_exports__["default"] = (function () {
  // Create the nanobar instance
  var nanobar = new nanobar__WEBPACK_IMPORTED_MODULE_0___default.a();

  // Timer for moving progress bar during ajax calls
  var timer = null;
  var current = 0;
  function clearTimer() {
    if (timer) {
      clearInterval(timer);
      timer = null;
    }
  }
  function setTimer() {
    clearTimer();
    current = 0;
    timer = setInterval(function () {
      current += 3;
      if (current <= 100) {
        nanobar.go(current);
      } else {
        clearTimer();
      }
    }, 50);
  }

  // Attach global jquery handlers to listen for ajax start
  $(document).ajaxSend(function () {
    setTimer();
  });
  $(document).ajaxComplete(function () {
    nanobar.go(100);
    clearTimer();
  });
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/global/menu.js":
/*!****************************************!*\
  !*** ./assets/js/theme/global/menu.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return menuFactory; });
/* harmony import */ var _common_collapsible__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/collapsible */ "./assets/js/theme/common/collapsible.js");
/* harmony import */ var _common_collapsible_group__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/collapsible-group */ "./assets/js/theme/common/collapsible-group.js");


var PLUGIN_KEY = 'menu';

/*
 * Manage the behaviour of a menu
 * @param {jQuery} $menu
 */
var Menu = /*#__PURE__*/function () {
  function Menu($menu) {
    this.$menu = $menu;
    this.$body = $('body');
    this.hasMaxMenuDisplayDepth = this.$body.find('.navPages-list').hasClass('navPages-list-depth-max');

    // Init collapsible
    this.collapsibles = Object(_common_collapsible__WEBPACK_IMPORTED_MODULE_0__["default"])('[data-collapsible]', {
      $context: this.$menu
    });
    this.collapsibleGroups = Object(_common_collapsible_group__WEBPACK_IMPORTED_MODULE_1__["default"])($menu);

    // Auto-bind
    this.onMenuClick = this.onMenuClick.bind(this);
    this.onDocumentClick = this.onDocumentClick.bind(this);

    // Listen
    this.bindEvents();
  }
  var _proto = Menu.prototype;
  _proto.collapseAll = function collapseAll() {
    this.collapsibles.forEach(function (collapsible) {
      return collapsible.close();
    });
    this.collapsibleGroups.forEach(function (group) {
      return group.close();
    });
  };
  _proto.collapseNeighbors = function collapseNeighbors($neighbors) {
    var $collapsibles = Object(_common_collapsible__WEBPACK_IMPORTED_MODULE_0__["default"])('[data-collapsible]', {
      $context: $neighbors
    });
    $collapsibles.forEach(function ($collapsible) {
      return $collapsible.close();
    });
  };
  _proto.bindEvents = function bindEvents() {
    this.$menu.on('click', this.onMenuClick);
    this.$body.on('click', this.onDocumentClick);
  };
  _proto.unbindEvents = function unbindEvents() {
    this.$menu.off('click', this.onMenuClick);
    this.$body.off('click', this.onDocumentClick);
  };
  _proto.onMenuClick = function onMenuClick(event) {
    event.stopPropagation();
    if (this.hasMaxMenuDisplayDepth) {
      var $neighbors = $(event.target).parent().siblings();
      this.collapseNeighbors($neighbors);
    }
  };
  _proto.onDocumentClick = function onDocumentClick() {
    this.collapseAll();
  };
  return Menu;
}();
/*
 * Create a new Menu instance
 * @param {string} [selector]
 * @return {Menu}
 */
function menuFactory(selector) {
  if (selector === void 0) {
    selector = "[data-" + PLUGIN_KEY + "]";
  }
  var $menu = $(selector).eq(0);
  var instanceKey = PLUGIN_KEY + "Instance";
  var cachedMenu = $menu.data(instanceKey);
  if (cachedMenu instanceof Menu) {
    return cachedMenu;
  }
  var menu = new Menu($menu);
  $menu.data(instanceKey, menu);
  return menu;
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/global/mobile-menu-toggle.js":
/*!******************************************************!*\
  !*** ./assets/js/theme/global/mobile-menu-toggle.js ***!
  \******************************************************/
/*! exports provided: MobileMenuToggle, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MobileMenuToggle", function() { return MobileMenuToggle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return mobileMenuToggleFactory; });
/* harmony import */ var lodash_extend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/extend */ "./node_modules/lodash/extend.js");
/* harmony import */ var lodash_extend__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_extend__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_media_query_list__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/media-query-list */ "./assets/js/theme/common/media-query-list.js");
/* harmony import */ var _cart_preview__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cart-preview */ "./assets/js/theme/global/cart-preview.js");

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


var PLUGIN_KEY = {
  CAMEL: 'mobileMenuToggle',
  SNAKE: 'mobile-menu-toggle'
};
function optionsFromData($element) {
  var mobileMenuId = $element.data(PLUGIN_KEY.CAMEL);
  return {
    menuSelector: mobileMenuId && "#" + mobileMenuId
  };
}

/*
 * Manage the behaviour of a mobile menu
 * @param {jQuery} $toggle
 * @param {Object} [options]
 * @param {Object} [options.headerSelector]
 * @param {Object} [options.menuSelector]
 * @param {Object} [options.scrollViewSelector]
 */
var MobileMenuToggle = /*#__PURE__*/function () {
  function MobileMenuToggle($toggle, _temp) {
    var _ref = _temp === void 0 ? {} : _temp,
      _ref$headerSelector = _ref.headerSelector,
      headerSelector = _ref$headerSelector === void 0 ? '.header' : _ref$headerSelector,
      _ref$menuSelector = _ref.menuSelector,
      menuSelector = _ref$menuSelector === void 0 ? '#menu' : _ref$menuSelector,
      _ref$scrollViewSelect = _ref.scrollViewSelector,
      scrollViewSelector = _ref$scrollViewSelect === void 0 ? '.navPages' : _ref$scrollViewSelect;
    this.$body = $('body');
    this.$menu = $(menuSelector);
    this.$navList = $('.navPages-list.navPages-list-depth-max');
    this.$header = $(headerSelector);
    this.$scrollView = $(scrollViewSelector, this.$menu);
    this.$subMenus = this.$navList.find('.navPages-action');
    this.$subMenus_click = this.$navList.find('.navPages-action > .navPages-action-moreIcon');
    this.$toggle = $toggle;
    this.mediumMediaQueryList = Object(_common_media_query_list__WEBPACK_IMPORTED_MODULE_1__["default"])('medium');

    // Auto-bind
    this.onToggleClick = this.onToggleClick.bind(this);
    this.onCartPreviewOpen = this.onCartPreviewOpen.bind(this);
    this.onMediumMediaQueryMatch = this.onMediumMediaQueryMatch.bind(this);
    this.onSubMenuClick = this.onSubMenuClick.bind(this);

    // Listen
    this.bindEvents();

    // Assign DOM attributes
    this.$toggle.attr('aria-controls', this.$menu.attr('id'));

    // Hide by default
    this.hide();
  }
  var _proto = MobileMenuToggle.prototype;
  _proto.bindEvents = function bindEvents() {
    this.$toggle.on('click', this.onToggleClick);
    this.$header.on(_cart_preview__WEBPACK_IMPORTED_MODULE_2__["CartPreviewEvents"].open, this.onCartPreviewOpen);
    this.$subMenus_click.on('click', this.onSubMenuClick);
    if (this.mediumMediaQueryList && this.mediumMediaQueryList.addListener) {
      this.mediumMediaQueryList.addListener(this.onMediumMediaQueryMatch);
    }

    // close menu mobile
    $('#menu-mobile .halo-close-2').on('click', function () {
      $('.mobileMenu-toggle').trigger('click');
      $('body').removeClass('has-activeNavPages');
      $('.mobileMenu-toggle').removeClass('is-open').attr('aria-expanded', false);
    });
    $('.halo-overlay-background').on('click', function () {
      if ($('body').hasClass('has-activeNavPages')) {
        $('.mobileMenu-toggle').trigger('click');
        $('body').removeClass('has-activeNavPages');
        $('.mobileMenu-toggle').removeClass('is-open').attr('aria-expanded', false);
      }
    });

    // Click on Currencies
    $('.navPages-list--user .currencies > .navPages-action').on('click', function (ev) {
      var $currencies = $(this).parent();
      $(this).toggleClass('is-open');
      $currencies.toggleClass('is-open');
    });
    $('.navPages-list--user .currencies .navPage-subMenu-title .navPage-subMenu-action').on('click', function (ev) {
      $('.navPages-list--user .currencies > .navPages-action').toggleClass('is-open');
      $('.navPages-list--user .currencies').toggleClass('is-open');
    });
  };
  _proto.unbindEvents = function unbindEvents() {
    this.$toggle.off('click', this.onToggleClick);
    this.$header.off(_cart_preview__WEBPACK_IMPORTED_MODULE_2__["CartPreviewEvents"].open, this.onCartPreviewOpen);
    if (this.mediumMediaQueryList && this.mediumMediaQueryList.addListener) {
      this.mediumMediaQueryList.removeListener(this.onMediumMediaQueryMatch);
    }
  };
  _proto.toggle = function toggle() {
    if (this.isOpen) {
      this.hide();
    } else {
      this.show();
    }
  };
  _proto.show = function show() {
    this.$body.addClass('has-activeNavPages');
    this.$toggle.addClass('is-open');
    //.attr('aria-expanded', true);

    this.$menu.addClass('is-open');
    //.attr('aria-hidden', false);

    this.$header.addClass('is-open');
    this.$scrollView.scrollTop(0);
    this.resetSubMenus();
  };
  _proto.hide = function hide() {
    this.$body.removeClass('has-activeNavPages');
    this.$toggle.removeClass('is-open').attr('aria-expanded', false);
    this.$menu.removeClass('is-open');
    this.$header.removeClass('is-open');
    this.resetSubMenus();
  }

  // Private
  ;
  _proto.onToggleClick = function onToggleClick(event) {
    event.preventDefault();
    this.toggle();
  };
  _proto.onCartPreviewOpen = function onCartPreviewOpen() {
    if (this.isOpen) {
      this.hide();
    }
  };
  _proto.onMediumMediaQueryMatch = function onMediumMediaQueryMatch(media) {
    if (!media.matches) {
      return;
    }
    this.hide();
  };
  _proto.onSubMenuClick = function onSubMenuClick(event) {
    event.preventDefault();
    var $closestAction = $(event.target).closest('.navPages-action');
    var $closestItem = $closestAction.parent();
    var $parentSiblings = $closestItem.siblings();
    var $closestsubMeNuMain = $closestItem.closest('.navPage-subMenu');
    var $closestItemMain = $closestsubMeNuMain.parent();
    if ($closestItem.hasClass('navPage-subMenu-title')) {
      $closestItemMain.toggleClass('is-open');
      $closestItemMain.find('> .navPages-action').toggleClass('is-open');
      $closestItemMain.siblings().toggleClass('is-hidden');
      $closestItemMain.closest('.navPage-subMenu').find('.imageArea, .itemArea').show();
    } else {
      $parentSiblings.toggleClass('is-hidden');
      $closestsubMeNuMain.find('.imageArea, .itemArea').hide();
      $closestAction.toggleClass('is-open');
      $closestAction.parent().toggleClass('is-open');
    }
  };
  _proto.resetSubMenus = function resetSubMenus() {
    this.$navList.find('.is-hidden').removeClass('is-hidden');
    this.$navList.find('.is-open').removeClass('is-open');
    this.$navList.removeClass('subMenu-is-open');
    this.$navList.attr('data-level-list', 1);
    $('.navPages-list--user').attr('data-level-list', 1);
  };
  _createClass(MobileMenuToggle, [{
    key: "isOpen",
    get: function get() {
      return this.$menu.hasClass('is-open');
    }
  }]);
  return MobileMenuToggle;
}();

/*
 * Create a new MobileMenuToggle instance
 * @param {string} [selector]
 * @param {Object} [options]
 * @param {Object} [options.headerSelector]
 * @param {Object} [options.menuSelector]
 * @param {Object} [options.scrollViewSelector]
 * @return {MobileMenuToggle}
 */
function mobileMenuToggleFactory(selector, overrideOptions) {
  if (selector === void 0) {
    selector = "[data-" + PLUGIN_KEY.SNAKE + "]";
  }
  if (overrideOptions === void 0) {
    overrideOptions = {};
  }
  var $toggle = $(selector).eq(0);
  var instanceKey = PLUGIN_KEY.CAMEL + "Instance";
  var cachedMobileMenu = $toggle.data(instanceKey);
  if (cachedMobileMenu instanceof MobileMenuToggle) {
    return cachedMobileMenu;
  }
  var options = lodash_extend__WEBPACK_IMPORTED_MODULE_0___default()(optionsFromData($toggle), overrideOptions);
  var mobileMenu = new MobileMenuToggle($toggle, options);
  $toggle.data(instanceKey, mobileMenu);
  return mobileMenu;
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/global/modal.js":
/*!*****************************************!*\
  !*** ./assets/js/theme/global/modal.js ***!
  \*****************************************/
/*! exports provided: modalTypes, ModalEvents, Modal, default, defaultModal, alertModal, showAlertModal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modalTypes", function() { return modalTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModalEvents", function() { return ModalEvents; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Modal", function() { return Modal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return modalFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultModal", function() { return defaultModal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "alertModal", function() { return alertModal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "showAlertModal", function() { return showAlertModal; });
/* harmony import */ var jquery_tabbable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery.tabbable */ "./node_modules/jquery.tabbable/jquery.tabbable.js");
/* harmony import */ var jquery_tabbable__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery_tabbable__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _foundation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./foundation */ "./assets/js/theme/global/foundation.js");
var _focusableElements;
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


var bodyActiveClass = 'has-activeModal';
var loadingOverlayClass = 'loadingOverlay';
var modalBodyClass = 'modal-body';
var modalContentClass = 'modal-content';
var allTabbableElementsSelector = ':tabbable';
var tabKeyCode = 9;
var firstTabbableClass = 'first-tabbable';
var lastTabbableClass = 'last-tabbable';
var SizeClasses = {
  small: 'modal--small',
  large: 'modal--large',
  normal: ''
};
var modalTypes = {
  QUICK_VIEW: 'forQuickView',
  PRODUCT_DETAILS: 'forProductDetails',
  CART_CHANGE_PRODUCT: 'forCartChangeProduct',
  WRITE_REVIEW: 'forWriteReview',
  SHOW_MORE_OPTIONS: 'forShowMore'
};
var findRootModalTabbableElements = function findRootModalTabbableElements() {
  return $('#modal.open').find(allTabbableElementsSelector).not('#modal-review-form *').not('#previewModal *');
};
var focusableElements = (_focusableElements = {}, _focusableElements[modalTypes.QUICK_VIEW] = findRootModalTabbableElements, _focusableElements[modalTypes.PRODUCT_DETAILS] = function () {
  return $('#previewModal.open').find(allTabbableElementsSelector);
}, _focusableElements[modalTypes.CART_CHANGE_PRODUCT] = findRootModalTabbableElements, _focusableElements[modalTypes.WRITE_REVIEW] = function () {
  return $('#modal-review-form.open').find(allTabbableElementsSelector);
}, _focusableElements[modalTypes.SHOW_MORE_OPTIONS] = findRootModalTabbableElements, _focusableElements);
var ModalEvents = {
  close: 'close.fndtn.reveal',
  closed: 'closed.fndtn.reveal',
  open: 'open.fndtn.reveal',
  opened: 'opened.fndtn.reveal'
};
function getSizeFromModal($modal) {
  if ($modal.hasClass(SizeClasses.small)) {
    return 'small';
  }
  if ($modal.hasClass(SizeClasses.large)) {
    return 'large';
  }
  return 'normal';
}
function getViewportHeight(multipler) {
  if (multipler === void 0) {
    multipler = 1;
  }
  var viewportHeight = $(window).height();
  return viewportHeight * multipler;
}
function wrapModalBody(content) {
  var $modalBody = $('<div>');
  $modalBody.addClass(modalBodyClass).html(content);
  return $modalBody;
}
function restrainContentHeight($content) {
  if ($content.length === 0) return;
  var $body = $("." + modalBodyClass, $content);
  if ($body.length === 0) return;
  var bodyHeight = $body.outerHeight();
  var contentHeight = $content.outerHeight();
  var viewportHeight = getViewportHeight(0.9);
  var maxHeight = viewportHeight - (contentHeight - bodyHeight);
  $body.css('max-height', maxHeight);
}
function createModalContent($modal) {
  var $content = $("." + modalContentClass, $modal);
  if ($content.length === 0) {
    var existingContent = $modal.children();
    $content = $('<div>').addClass(modalContentClass).append(existingContent).appendTo($modal);
  }
  return $content;
}
function createLoadingOverlay($modal) {
  var $loadingOverlay = $("." + loadingOverlayClass, $modal);
  if ($loadingOverlay.length === 0) {
    $loadingOverlay = $('<div>').addClass(loadingOverlayClass).appendTo($modal);
  }
  return $loadingOverlay;
}

/**
 * Require foundation.reveal
 * Decorate foundation.reveal with additional methods
 * @param {jQuery} $modal
 * @param {Object} [options]
 * @param {string} [options.size]
 */
var Modal = /*#__PURE__*/function () {
  function Modal($modal, _temp) {
    var _ref = _temp === void 0 ? {} : _temp,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? null : _ref$size;
    this.$modal = $modal;
    this.$content = createModalContent(this.$modal);
    this.$overlay = createLoadingOverlay(this.$modal);
    this.defaultSize = size || getSizeFromModal($modal);
    this.size = this.defaultSize;
    this.pending = false;
    this.$preModalFocusedEl = null;
    this.onModalOpen = this.onModalOpen.bind(this);
    this.onModalOpened = this.onModalOpened.bind(this);
    this.onModalClose = this.onModalClose.bind(this);
    this.onModalClosed = this.onModalClosed.bind(this);
    this.bindEvents();

    /* STRF-2471 - Multiple Wish Lists - prevents double-firing
     * of foundation.dropdown click.fndtn.dropdown event */
    this.$modal.on('click', '.dropdown-menu-button', function (e) {
      e.stopPropagation();
    });
  }
  var _proto = Modal.prototype;
  _proto.bindEvents = function bindEvents() {
    this.$modal.on(ModalEvents.close, this.onModalClose);
    this.$modal.on(ModalEvents.closed, this.onModalClosed);
    this.$modal.on(ModalEvents.open, this.onModalOpen);
    this.$modal.on(ModalEvents.opened, this.onModalOpened);
  };
  _proto.open = function open(_temp2) {
    var _ref2 = _temp2 === void 0 ? {} : _temp2,
      size = _ref2.size,
      _ref2$pending = _ref2.pending,
      pending = _ref2$pending === void 0 ? true : _ref2$pending,
      _ref2$clearContent = _ref2.clearContent,
      clearContent = _ref2$clearContent === void 0 ? true : _ref2$clearContent;
    this.pending = pending;
    if (size) {
      this.size = size;
    }
    if (clearContent) {
      this.clearContent();
    }
    this.$modal.foundation('reveal', 'open');
  };
  _proto.close = function close() {
    this.$modal.foundation('reveal', 'close');
  };
  _proto.updateContent = function updateContent(content, _temp3) {
    var _ref3 = _temp3 === void 0 ? {} : _temp3,
      _ref3$wrap = _ref3.wrap,
      wrap = _ref3$wrap === void 0 ? false : _ref3$wrap;
    var $content = $(content);
    if (wrap) {
      $content = wrapModalBody(content);
    }
    this.pending = false;
    this.$content.html($content);
    restrainContentHeight(this.$content);
    Object(_foundation__WEBPACK_IMPORTED_MODULE_1__["default"])(this.$content);
  };
  _proto.clearContent = function clearContent() {
    this.$content.html('');
  };
  _proto.setupFocusableElements = function setupFocusableElements(modalType) {
    var _this = this;
    this.$preModalFocusedEl = $(document.activeElement);
    var $modalTabbableCollection = focusableElements[modalType]();
    var elementToFocus = $modalTabbableCollection.get(0);
    if (elementToFocus) elementToFocus.focus();
    this.$modal.on('keydown', function (event) {
      return _this.onTabbing(event, modalType);
    });
  };
  _proto.onTabbing = function onTabbing(event, modalType) {
    var isTab = event.which === tabKeyCode;
    if (!isTab) return;
    var $modalTabbableCollection = focusableElements[modalType]();
    var modalTabbableCollectionLength = $modalTabbableCollection.length;
    if (modalTabbableCollectionLength < 1) return;
    var lastCollectionIdx = modalTabbableCollectionLength - 1;
    var $firstTabbable = $modalTabbableCollection.get(0);
    var $lastTabbable = $modalTabbableCollection.get(lastCollectionIdx);
    $modalTabbableCollection.each(function (index, element) {
      var $element = $(element);
      if (modalTabbableCollectionLength === 1) {
        $element.addClass(firstTabbableClass + " " + lastTabbableClass);
        return false;
      }
      if ($element.is($firstTabbable)) {
        $element.addClass(firstTabbableClass).removeClass(lastTabbableClass);
      } else if ($element.is($lastTabbable)) {
        $element.addClass(lastTabbableClass).removeClass(firstTabbableClass);
      } else {
        $element.removeClass(firstTabbableClass).removeClass(lastTabbableClass);
      }
    });
    var direction = isTab && event.shiftKey ? 'backwards' : 'forwards';
    var $activeElement = $(document.activeElement);
    if (direction === 'forwards') {
      var isLastActive = $activeElement.hasClass(lastTabbableClass);
      if (isLastActive) {
        $firstTabbable.focus();
        event.preventDefault();
      }
    } else if (direction === 'backwards') {
      var isFirstActive = $activeElement.hasClass(firstTabbableClass);
      if (isFirstActive) {
        $lastTabbable.focus();
        event.preventDefault();
      }
    }
  };
  _proto.onModalClose = function onModalClose() {
    $('body').removeClass(bodyActiveClass);
  };
  _proto.onModalClosed = function onModalClosed() {
    this.size = this.defaultSize;
    if (this.$preModalFocusedEl) this.$preModalFocusedEl.focus();
    this.$preModalFocusedEl = null;
    this.$modal.off('keydown');
  };
  _proto.onModalOpen = function onModalOpen() {
    $('body').addClass(bodyActiveClass);
  };
  _proto.onModalOpened = function onModalOpened() {
    restrainContentHeight(this.$content);
  };
  _createClass(Modal, [{
    key: "pending",
    get: function get() {
      return this._pending;
    },
    set: function set(pending) {
      this._pending = pending;
      if (pending) {
        this.$overlay.show();
      } else {
        this.$overlay.hide();
      }
    }
  }, {
    key: "size",
    get: function get() {
      return this._size;
    },
    set: function set(size) {
      this._size = size;
      this.$modal.removeClass(SizeClasses.small).removeClass(SizeClasses.large).addClass(SizeClasses[size] || '');
    }
  }]);
  return Modal;
}();

/**
 * Return an array of modals
 * @param {string} selector
 * @param {Object} [options]
 * @param {string} [options.size]
 * @returns {array}
 */
function modalFactory(selector, options) {
  if (selector === void 0) {
    selector = '[data-reveal]';
  }
  if (options === void 0) {
    options = {};
  }
  var $modals = $(selector, options.$context);
  return $modals.map(function (index, element) {
    var $modal = $(element);
    var instanceKey = 'modalInstance';
    var cachedModal = $modal.data(instanceKey);
    if (cachedModal instanceof Modal) {
      return cachedModal;
    }
    var modal = new Modal($modal, options);
    $modal.data(instanceKey, modal);
    return modal;
  }).toArray();
}

/*
 * Return the default page modal
 */
function defaultModal() {
  return modalFactory('#modal')[0];
}

/*
 * Return the default alert modal
 */
function alertModal() {
  return modalFactory('#alert-modal')[0];
}

/*
 * Display the given message in the default alert modal
 */
function showAlertModal(message) {
  var modal = alertModal();
  modal.open();
  modal.updateContent("<span>" + message + "</span>");
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/global/quick-search.js":
/*!************************************************!*\
  !*** ./assets/js/theme/global/quick-search.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/debounce */ "./node_modules/lodash/debounce.js");
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bigcommerce/stencil-utils */ "./node_modules/@bigcommerce/stencil-utils/src/main.js");
/* harmony import */ var _stencil_dropdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stencil-dropdown */ "./assets/js/theme/global/stencil-dropdown.js");
/* harmony import */ var _common_utils_url_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/utils/url-utils */ "./assets/js/theme/common/utils/url-utils.js");
/* harmony import */ var _halosearchCategories__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./halosearchCategories */ "./assets/js/theme/global/halosearchCategories.js");





/* harmony default export */ __webpack_exports__["default"] = (function () {
  var TOP_STYLING = 'top: 49px;';
  var $quickSearchResults = $('.quickSearchResults');
  var $quickSearchForms = $('[data-quick-search-form]');
  var $quickSearchExpand = $('#quick-search-expand');
  var $searchQuery = $quickSearchForms.find('[data-search-quick]');
  var stencilDropDownExtendables = {
    hide: function hide() {
      $quickSearchExpand.attr('aria-expanded', false);
      $searchQuery.trigger('blur');
    },
    show: function show(event) {
      $quickSearchExpand.attr('aria-expanded', true);
      $searchQuery.trigger('focus');
      event.stopPropagation();
    }
  };
  var stencilDropDown = new _stencil_dropdown__WEBPACK_IMPORTED_MODULE_2__["default"](stencilDropDownExtendables);
  stencilDropDown.bind($('[data-search="quickSearch"]'), $('#quickSearch'), TOP_STYLING);
  stencilDropDownExtendables.onBodyClick = function (e, $container) {
    // If the target element has this data tag or one of it's parents, do not close the search results
    // We have to specify `.modal-background` because of limitations around Foundation Reveal not allowing
    // any modification to the background element.
    if ($(e.target).closest('[data-prevent-quick-search-close], .modal-background').length === 0) {
      stencilDropDown.hide($container);
      $('#quickSearch #nav-quick-search').val('');
      $('#quickSearch .quickSearchResults').empty();
      $('.quickSearchResults').removeClass('show-result');
    }
  };

  // stagger searching for 200ms after last input
  var doSearch = lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default()(function (searchQuery, category, target) {
    var quickSearch = new _halosearchCategories__WEBPACK_IMPORTED_MODULE_4__["default"]();
    var dropDownQuickSearch = target.parents('.dropdown--quickSearch');
    if (dropDownQuickSearch.hasClass('haloSeachCategories')) {
      quickSearch.search(searchQuery, category, {
        template: 'search/quick-results'
      }, function (err, response) {
        if (err) {
          return false;
        }
        target.parents('.dropdown--quickSearch').find('.quickSearchResults').addClass('hasResults');
        target.parents('.dropdown--quickSearch').find('.quickSearchResults').html(response);
        $('.quickSearchResults').addClass('show-result');
        $('.header .dropdown--quickSearch').addClass('is-open');
        var $quickSearchResultsCurrent = $quickSearchResults.filter(':visible');
        var $noResultsMessage = $quickSearchResultsCurrent.find('.quickSearchMessage');
        if ($noResultsMessage.length) {
          $noResultsMessage.attr({
            role: 'status',
            'aria-live': 'polite'
          });
          $('.quickSearchResults').addClass('noResults');
        } else {
          var $quickSearchAriaMessage = $quickSearchResultsCurrent.next();
          $quickSearchAriaMessage.addClass('u-hidden');
          var predefinedText = $quickSearchAriaMessage.data('search-aria-message-predefined-text');
          var itemsFoundCount = $quickSearchResultsCurrent.find('.product').length;
          $quickSearchAriaMessage.text(itemsFoundCount + " " + predefinedText + " " + searchQuery);
          $('.quickSearchResults').removeClass('noResults');
          setTimeout(function () {
            $quickSearchAriaMessage.removeClass('u-hidden');
          }, 100);
        }
        if ($('.quickSearch-re .productCarousel').length) {
          $('.quickSearch-re .productCarousel').slick('refresh');
        }
      });
    } else {
      _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_1__["default"].api.search.search(searchQuery, {
        template: 'search/quick-results'
      }, function (err, response) {
        if (err) {
          return false;
        }
        target.parents('.dropdown--quickSearch').find('.quickSearchResults').html(response);
        $('.quickSearchResults').addClass('show-result');
        $('.header .dropdown--quickSearch').addClass('is-open');
        var $quickSearchResultsCurrent = $quickSearchResults.filter(':visible');
        var $noResultsMessage = $quickSearchResultsCurrent.find('.quickSearchMessage');
        if ($noResultsMessage.length) {
          $noResultsMessage.attr({
            role: 'status',
            'aria-live': 'polite'
          });
          $('.quickSearchResults').addClass('noResults');
        } else {
          var $quickSearchAriaMessage = $quickSearchResultsCurrent.next();
          $quickSearchAriaMessage.addClass('u-hidden');
          var predefinedText = $quickSearchAriaMessage.data('search-aria-message-predefined-text');
          var itemsFoundCount = $quickSearchResultsCurrent.find('.product').length;
          $quickSearchAriaMessage.text(itemsFoundCount + " " + predefinedText + " " + searchQuery);
          $('.quickSearchResults').removeClass('noResults');
          setTimeout(function () {
            $quickSearchAriaMessage.removeClass('u-hidden');
          }, 100);
        }
        if ($('.quickSearch-re .productCarousel').length) {
          $('.quickSearch-re .productCarousel').slick('refresh');
        }
      });
    }
  }, 200);
  _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_1__["default"].hooks.on('search-quick', function (event, currentTarget) {
    var searchQuery = $(currentTarget).val();
    var category = $(currentTarget).parents('form').find('select[name="category"]').val();
    var target = $(currentTarget);

    // server will only perform search with at least 3 characters
    if (searchQuery.length < 3) {
      $(currentTarget).parent().find('.quickSearchResults').removeClass('show-result');
      $('.header .dropdown--quickSearch').removeClass('is-open');
      return;
    }
    if (target.parents('.dropdown--quickSearch').hasClass('haloSeachCategories')) {
      doSearch(searchQuery, category, target);
    } else {
      doSearch(searchQuery, target);
    }
  });
  _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_1__["default"].hooks.on('search-quick-2', function (event, currentTarget) {
    var searchQuery = $(currentTarget).val();
    var target = $(currentTarget);

    // server will only perform search with at least 3 characters
    if (searchQuery.length < 3) {
      $('.quickSearchResults').removeClass('show-result');
      $('.header .dropdown--quickSearch').removeClass('is-open');
      return;
    }
    doSearch(searchQuery, target);
  });

  // Catch the submission of the quick-search forms
  $quickSearchForms.on('submit', function (event) {
    event.preventDefault();
    var $target = $(event.currentTarget);
    var searchQuery = $target.find('input').val();
    var searchUrl = $target.data('url');
    var dropDownQuickSearch = $(event.currentTarget).parents('.dropdown--quickSearch');
    var category = $(event.currentTarget).find('select[name="category"]').val();
    console.log("category: " + category);
    if (searchQuery.length === 0) {
      return;
    }
    if (dropDownQuickSearch.hasClass('haloSeachCategories')) {
      _common_utils_url_utils__WEBPACK_IMPORTED_MODULE_3__["default"].goToUrl(searchUrl + "?search_query=" + searchQuery + "&category=" + category);
    } else {
      _common_utils_url_utils__WEBPACK_IMPORTED_MODULE_3__["default"].goToUrl(searchUrl + "?search_query=" + searchQuery);
    }
    window.location.reload();
  });
  var getUrlParameter = function getUrlParameter(sParam) {
    var sPageURL = decodeURIComponent(window.location.search.substring(1)),
      sURLVariables = sPageURL.split('&'),
      sParameterName,
      i,
      len;
    for (i = 0, len = sURLVariables.length; i < len; i++) {
      sParameterName = sURLVariables[i].split('=');
      if (sParameterName[0] === sParam) {
        return sParameterName[1] === undefined ? true : sParameterName[1];
      }
    }
  };
  function search_category() {
    var category = getUrlParameter('category');
    $('#search_category').val(category).trigger("change");
    $('select[name="category"]').val(category).trigger("change");
    $(document).on('change', '#search_category .select_category', function () {
      var text_option = $(this).find('option:selected').text();
      var $test_option = $('<span>').html(text_option);
      $test_option.appendTo('body');
      var width_option = $test_option.width() + 62;
      $test_option.remove();
      $(this).parent().css('min-width', width_option);
      console.log("text_option: " + text_option);
      console.log("$test_option: " + $test_option);
    });
    $('.haloSeachCategories form[action="/search.php"]').on('submit', function (event) {
      if ($(event.currentTarget).find('select[name="category"]').val() === '') {
        $(event.currentTarget).find('select').attr('name', '');
      }
    });
  }
  search_category();
  $(document).ready(function () {
    var category = getUrlParameter('category');
    $('#search_category').val(category).trigger("change");
    $('select[name="category"]').val(category).trigger("change");
    console.log("category: " + category);
  });
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/global/quick-view.js":
/*!**********************************************!*\
  !*** ./assets/js/theme/global/quick-view.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var foundation_sites_js_foundation_foundation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! foundation-sites/js/foundation/foundation */ "./node_modules/foundation-sites/js/foundation/foundation.js");
/* harmony import */ var foundation_sites_js_foundation_foundation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(foundation_sites_js_foundation_foundation__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var foundation_sites_js_foundation_foundation_dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! foundation-sites/js/foundation/foundation.dropdown */ "./node_modules/foundation-sites/js/foundation/foundation.dropdown.js");
/* harmony import */ var foundation_sites_js_foundation_foundation_dropdown__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(foundation_sites_js_foundation_foundation_dropdown__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bigcommerce/stencil-utils */ "./node_modules/@bigcommerce/stencil-utils/src/main.js");
/* harmony import */ var _common_product_details__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/product-details */ "./assets/js/theme/common/product-details.js");
/* harmony import */ var _modal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modal */ "./assets/js/theme/global/modal.js");
/* harmony import */ var slick_carousel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! slick-carousel */ "./node_modules/slick-carousel/slick/slick.min.js");
/* harmony import */ var slick_carousel__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(slick_carousel__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _common_carousel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/carousel */ "./assets/js/theme/common/carousel/index.js");







/* harmony default export */ __webpack_exports__["default"] = (function (context) {
  var modal = Object(_modal__WEBPACK_IMPORTED_MODULE_4__["defaultModal"])();
  $('body').on('click', '.quickview', function (event) {
    event.preventDefault();
    var productId = $(event.currentTarget).data('productId');
    modal.$modal.removeClass('modal--editOptions');
    modal.open({
      size: 'large'
    });
    _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__["default"].api.product.getById(productId, {
      template: 'products/quick-view'
    }, function (err, response) {
      modal.updateContent(response);
      modal.$content.find('.productView').addClass('productView--quickView');
      var $carousel = modal.$content.find('[data-slick]');
      if ($carousel.length) {
        $carousel.on('init afterChange', function (e, carousel) {
          return Object(_common_carousel__WEBPACK_IMPORTED_MODULE_6__["onSlickCarouselChange"])(e, carousel, context);
        });
        $carousel.on('click', '.slick-arrow, .slick-dots', $carousel, function (e) {
          return Object(_common_carousel__WEBPACK_IMPORTED_MODULE_6__["onUserCarouselChange"])(e, context);
        });
        $carousel.on('swipe', function (e, carouselObj) {
          return Object(_common_carousel__WEBPACK_IMPORTED_MODULE_6__["onUserCarouselChange"])(e, context, carouselObj.$slider);
        });
        $carousel.slick();
      }
      modal.setupFocusableElements(_modal__WEBPACK_IMPORTED_MODULE_4__["modalTypes"].QUICK_VIEW);
      return new _common_product_details__WEBPACK_IMPORTED_MODULE_3__["default"](modal.$content.find('.quickView'), context);
    });
  });
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/global/reveal-close.js":
/*!************************************************!*\
  !*** ./assets/js/theme/global/reveal-close.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return revealCloseFactory; });
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var revealCloseAttr = 'revealClose';
var revealCloseSelector = "[data-" + revealCloseAttr + "]";
var revealSelector = '[data-reveal]';
var RevealClose = /*#__PURE__*/function () {
  function RevealClose($button) {
    this.$button = $button;
    this.modalId = $button.data(revealCloseAttr);
    this.onClick = this.onClick.bind(this);
    this.bindEvents();
  }
  var _proto = RevealClose.prototype;
  _proto.bindEvents = function bindEvents() {
    this.$button.on('click', this.onClick);
  };
  _proto.unbindEvents = function unbindEvents() {
    this.$button.off('click', this.onClick);
  };
  _proto.onClick = function onClick(event) {
    var modal = this.modal;
    if (modal) {
      event.preventDefault();
      modal.close();
    }
  };
  _createClass(RevealClose, [{
    key: "modal",
    get: function get() {
      var $modal;
      if (this.modalId) {
        $modal = $("#" + this.modalId);
      } else {
        $modal = this.$button.parents(revealSelector).eq(0);
      }
      return $modal.data('modalInstance');
    }
  }]);
  return RevealClose;
}();
/*
 * Extend foundation.reveal with the ability to close a modal by clicking on any of its child element
 * with data-reveal-close attribute.
 *
 * @example
 *
 * <div data-reveal id="helloModal">
 *   <button data-reveal-close>Continue</button>
 * </div>
 *
 * <div data-reveal id="helloModal"></div>
 * <button data-reveal-close="helloModal">Continue</button>
 */
function revealCloseFactory(selector, options) {
  if (selector === void 0) {
    selector = revealCloseSelector;
  }
  if (options === void 0) {
    options = {};
  }
  var $buttons = $(selector, options.$context);
  return $buttons.map(function (index, element) {
    var $button = $(element);
    var instanceKey = revealCloseAttr + "Instance";
    var cachedButton = $button.data(instanceKey);
    if (cachedButton instanceof RevealClose) {
      return cachedButton;
    }
    var button = new RevealClose($button);
    $button.data(instanceKey, button);
    return button;
  }).toArray();
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/global/stencil-dropdown.js":
/*!****************************************************!*\
  !*** ./assets/js/theme/global/stencil-dropdown.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return StencilDropdown; });
var StencilDropdown = /*#__PURE__*/function () {
  function StencilDropdown(extendables) {
    this.extendables = extendables;
  }

  /**
   * @param $dropDown
   * @param style
   */
  var _proto = StencilDropdown.prototype;
  _proto.hide = function hide($dropDown, style) {
    if (style) {
      $dropDown.attr('style', style);
    }

    // callback "hide"
    if (this.extendables && this.extendables.hide) {
      this.extendables.hide();
    }
    $dropDown.removeClass('is-open f-open-dropdown').attr('aria-hidden', 'true');
  };
  _proto.show = function show($dropDown, event, style) {
    if (style) {
      $dropDown.attr('style', style).attr('aria-hidden', 'false');
    }
    $dropDown.addClass('is-open f-open-dropdown').attr('aria-hidden', 'false');

    // callback "show"
    if (this.extendables && this.extendables.show) {
      this.extendables.show(event);
    }
  };
  _proto.bind = function bind($dropDownTrigger, $container, style) {
    var _this = this;
    var modalOpened = false;
    $dropDownTrigger.on('click', function (event) {
      var $cart = $('.is-open[data-cart-preview]');
      if ($cart) {
        $cart.trigger('click');
      }
      if ($container.hasClass('is-open')) {
        _this.hide($container, event);
      } else {
        _this.show($container, event, style);
      }
    });
    $('body').on('click', function (e) {
      // Call onClick handler
      if (_this.extendables && _this.extendables.onBodyClick) {
        _this.extendables.onBodyClick(e, $container);
      }
    }).on('keyup', function (e) {
      // If they hit escape and the modal isn't open, close the search
      if (e.which === 27 && !modalOpened) {
        _this.hide($container);
      }
    }).on('open.fndtn.reveal', '[data-reveal]', function () {
      modalOpened = true;
    }).on('close.fndtn.reveal', '[data-reveal]', function () {
      modalOpened = false;
    }).on('click', '[data-drop-down-close]', function () {
      modalOpened = false;
      _this.hide($container);
    });
  };
  return StencilDropdown;
}();

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/global/svg-injector.js":
/*!************************************************!*\
  !*** ./assets/js/theme/global/svg-injector.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svg_injector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svg-injector */ "./node_modules/svg-injector/dist/svg-injector.min.js");
/* harmony import */ var svg_injector__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(svg_injector__WEBPACK_IMPORTED_MODULE_0__);

/* harmony default export */ __webpack_exports__["default"] = (function () {
  svg_injector__WEBPACK_IMPORTED_MODULE_0___default()(document.querySelectorAll('svg[data-src]'));
});

/***/ }),

/***/ "./assets/js/theme/global/sweet-alert.js":
/*!***********************************************!*\
  !*** ./assets/js/theme/global/sweet-alert.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.min.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_0__);


// WeakMap will defined in the global scope if native WeakMap is not supported.
var weakMap = new WeakMap(); // eslint-disable-line no-unused-vars

// Set defaults for sweetalert2 popup boxes
var Swal = sweetalert2__WEBPACK_IMPORTED_MODULE_0___default.a.mixin({
  buttonsStyling: false,
  customClass: {
    confirmButton: 'button',
    cancelButton: 'button'
  }
});

// Re-export
/* harmony default export */ __webpack_exports__["default"] = (Swal);

/***/ }),

/***/ "./assets/js/theme/halothemes/haloAddOptionForProduct.js":
/*!***************************************************************!*\
  !*** ./assets/js/theme/halothemes/haloAddOptionForProduct.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bigcommerce/stencil-utils */ "./node_modules/@bigcommerce/stencil-utils/src/main.js");

/* harmony default export */ __webpack_exports__["default"] = (function (context) {
  if (context.themeSettings.haloAddOptionForProduct) {
    var callProductOption = function callProductOption() {
      if (list.length > 0) {
        getProductOption(list).then(function (data) {
          renderOption(data);
          for (var i = 0; i < $card.length; i++) {
            var $t_card = $card.eq(i);
            var productId = $card.eq(i).data('product-id');
            var $t_cardOption = $card.eq(i).find('.card-figure .card-option-' + productId + '');
            var $t_formOption = $card.eq(i).find('.card-figure .card-option-' + productId + ' .form-option');
            var $t_cardOptionMB = $card.eq(i).find('.card-optionMobile.card-option-' + productId + '');
            var $t_formOptionMB = $card.eq(i).find('.card-optionMobile.card-option-' + productId + ' .form-option');
            var arr = {},
              arr2 = {};
            $t_formOption.each(function (index, element) {
              var txt = $(element).data('product-swatch-value');
              if (arr[txt]) {
                $(element).remove();
              } else {
                arr[txt] = true;
              }
            });
            $t_formOptionMB.each(function (index, element) {
              var txtMB = $(element).data('product-swatch-value');
              if (arr2[txtMB]) {
                $(element).remove();
              } else {
                arr2[txtMB] = true;
              }
            });
            var optionLength = $card.eq(i).find('.card-figure .card-option-' + productId + ' .form-option').length;
            if (optionLength > 4) {
              var countMoreOption = optionLength - 4,
                productLink = $card.eq(i).find('.card-title a').attr('href');
              $t_cardOption.find('.form-option-swatch:nth-child(n+5)').remove();
              $t_cardOptionMB.find('.form-option-swatch:nth-child(n+5)').remove();
              if ($t_cardOption.find('.form-field .showmore').length == 0) {
                $t_cardOption.find('.form-field').append('<a href="' + productLink + '" class="showmore">+' + countMoreOption + '</a>');
                $t_cardOptionMB.find('.form-field').append('<a href="' + productLink + '" class="showmore">+' + countMoreOption + '</a>');
              }
            }
          }
        });
      }
    };
    var getProductOption = function getProductOption(list) {
      return fetch('/graphql', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': 'Bearer ' + token
        },
        body: JSON.stringify({
          query: "\n                        query SeveralProductsByID {\n                            site {\n                                products(entityIds: [" + list + "], first: 50) {\n                                    edges {\n                                        node {\n                                            entityId\n                                            name\n                                            defaultImage{\n                                                urlOriginal\n                                            }\n                                            variants(first: 50){\n                                                edges{\n                                                    node{\n                                                        entityId\n                                                        defaultImage{\n                                                            urlOriginal\n                                                        }\n                                                        productOptions(first: 50) {\n                                                            edges {\n                                                                node {\n                                                                    entityId\n                                                                    displayName\n                                                                    isRequired\n                                                                    ... on MultipleChoiceOption {\n                                                                        displayStyle\n                                                                        values {\n                                                                            edges {\n                                                                                node {\n                                                                                    entityId\n                                                                                    label\n                                                                                    isDefault\n                                                                                    ... on SwatchOptionValue {\n                                                                                        hexColors\n                                                                                        imageUrl(width: 150)\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    "
        })
      }).then(function (res) {
        return res.json();
      }).then(function (res) {
        return res.data;
      });
    };
    var renderOption = function renderOption(data) {
      var aFilter = data.site.products.edges;
      $.each(aFilter, function (index, element) {
        var productId = aFilter[index].node.entityId,
          productImage = aFilter[index].node.defaultImage.urlOriginal,
          productFieldColor = $card.find('.card-option-' + productId + ' .form-field'),
          aFilter2 = aFilter[index].node.variants.edges;
        $.each(aFilter2, function (idx, el) {
          var variantImage,
            aFilter3 = aFilter2[idx].node.productOptions.edges;
          if (aFilter2[idx].node.defaultImage) {
            variantImage = aFilter2[idx].node.defaultImage.urlOriginal;
          }
          if (variantImage === undefined || variantImage === null) {
            variantImage = productImage;
          }
          var aFilter4 = aFilter3.filter(function (item) {
            return item.node.displayStyle === 'Swatch';
          });
          if (aFilter4.length > 0) {
            var aFilter5 = aFilter4[0].node.values.edges;
            $.each(aFilter5, function (idx, element) {
              var titleVar = aFilter5[idx].node.label,
                idVar = aFilter5[idx].node.entityId,
                lengthColorVar = aFilter5[idx].node.hexColors.length,
                color1 = aFilter5[idx].node.hexColors[0],
                color2 = aFilter5[idx].node.hexColors[1],
                color3 = aFilter5[idx].node.hexColors[2],
                img = aFilter5[idx].node.imageUrl;
              if (lengthColorVar == 2) {
                productFieldColor.append('<label class="form-option form-option-swatch two-colors" data-image ="' + variantImage + '" data-product-swatch-value="' + idVar + '" data-title="' + titleVar + '"><span class="form-option-tooltip">' + titleVar + '</span><span class="form-option-variant form-option-variant--color form-option-variant--color2" title="' + titleVar + '"><span class="form-option-variant form-option-variant--color two-colors" style="background-color:' + color1 + '; position: relative;left: -2px;top: -2px;"></span><span class="form-option-variant form-option-variant--color two-colors" style="background-color:' + color2 + '"></span></span></label>');
              } else if (lengthColorVar === 3) {
                productFieldColor.append('<label class="form-option form-option-swatch three-colors two-colors" data-image ="' + variantImage + '" data-product-swatch-value="' + idVar + '" data-title="' + titleVar + '"><span class="form-option-tooltip">' + titleVar + '</span><span class="form-option-variant form-option-variant--color form-option-variant--color2" title="' + titleVar + '" style="position: relative;top: -2px;left: -2px;right: -2px; background: transparent;border-color: transparent;"><span class="form-option-variant form-option-variant--color three-colors" style="background-color:' + color1 + '"></span><span class="form-option-variant form-option-variant--color three-colors" style="background-color:' + color2 + '"></span><span style="background-color:' + color3 + '"></span></span></label>');
              } else if (Boolean(color1)) {
                productFieldColor.append('<label class="form-option form-option-swatch" data-image ="' + variantImage + '"  data-product-swatch-value="' + idVar + '" data-title="' + titleVar + '"><span class="form-option-tooltip">' + titleVar + '</span><span class="form-option-variant form-option-variant--color" title="' + titleVar + '" style="background-color: ' + color1 + '"></span></label>');
              } else if (Boolean(img)) {
                productFieldColor.append('<label class="form-option form-option-swatch " data-image ="' + variantImage + '" data-product-swatch-value="' + idVar + '" data-title="' + titleVar + '"><span class="form-option-tooltip">' + titleVar + '</span><span class="form-option-variant form-option-variant--pattern" title="' + titleVar + '" style="background-image: url(' + img + ')"></span></label>');
              }
            });
          } else {
            productFieldColor.remove();
          }
        });
      });
    };
    var list = [];
    var $card = $('.card');
    var token = context.token;
    if ($card.length) {
      for (var i = 0; i < $card.length; i++) {
        var $prodWrapId = $card.eq(i).data('product-id');
        var $cartOption = $card.eq(i).find('.card-option').length;
        var $cartOptionItem = $card.eq(i).find('.card-option .form-field label').length;
        if ($prodWrapId != undefined && $cartOption && !$cartOptionItem) {
          list.push($prodWrapId.toString());
        }
      }
      ;
    }
    callProductOption();
    var btn_cardOption = '.card .card-figure .card-option .form-option',
      btn_cardOptionMB = '.card .card-optionMobile.card-option .form-option';
    $(document).on('click', btn_cardOption, function (e) {
      e.preventDefault();
      var self = $(this),
        newImageVariant = self.data('image'),
        productItemElm = self.closest('.card');
      self.parents('.card-option').find('.form-option').removeClass('is-active');
      self.addClass('is-active');
      if (newImageVariant != "undefined") {
        productItemElm.find('.card-img-container .product-additional > img').attr({
          "srcset": newImageVariant,
          "src": newImageVariant
        });
        return false;
      }
    });
    $(document).on('click', btn_cardOptionMB, function (e) {
      e.preventDefault();
      var self = $(this),
        newImageVariant = self.data('image'),
        productItemElm = self.closest('.card');
      self.parents('.card-option').find('.form-option').removeClass('is-active');
      self.addClass('is-active');
      if (newImageVariant != "undefined") {
        productItemElm.find('.card-img-container > img').attr({
          "srcset": newImageVariant,
          "src": newImageVariant
        });
        return false;
      }
    });
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/halothemes/haloAjaxAddToCart.js":
/*!*********************************************************!*\
  !*** ./assets/js/theme/halothemes/haloAjaxAddToCart.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bigcommerce/stencil-utils */ "./node_modules/@bigcommerce/stencil-utils/src/main.js");
/* harmony import */ var _global_modal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../global/modal */ "./assets/js/theme/global/modal.js");
/* harmony import */ var _haloCalculateFreeShipping__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./haloCalculateFreeShipping */ "./assets/js/theme/halothemes/haloCalculateFreeShipping.js");



/* harmony default export */ __webpack_exports__["default"] = (function (context) {
  var modal = Object(_global_modal__WEBPACK_IMPORTED_MODULE_1__["default"])('#modal')[0];
  if (context.themeSettings.haloAjaxAddToCart) {
    if (context.themeSettings.haloAddToCartAction !== 'cart') {
      $(document).on('click', '.halo-add-to-cart', function (event) {
        if (window.FormData === undefined) {
          return;
        }
        var $addToCartBtn = $(event.currentTarget),
          waitMessage = $addToCartBtn.data('waitMessage'),
          originalBtnVal = $addToCartBtn.find('span').text(),
          productId = $addToCartBtn.data('product-id');
        event.preventDefault();
        $addToCartBtn.find('span').text(waitMessage);
        $addToCartBtn.prop('disabled', true);
        if (productId === 0) {
          return;
        }
        var formData = new FormData();
        formData.append('product_id', productId);
        _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_0__["default"].api.cart.itemAdd(formData, function (err, response) {
          var errorMessage = err || response.data.error;
          $addToCartBtn.find('span').text(originalBtnVal);
          $addToCartBtn.prop('disabled', false);
          if (errorMessage) {
            var tmp = document.createElement('DIV');
            tmp.innerHTML = errorMessage;
            alert(tmp.textContent || tmp.innerText);
            return;
          }
          if (context.themeSettings.haloAddToCartAction === 'sidebar') {
            var options = {
              template: 'common/cart-preview'
            };
            var loadingClass = 'is-loading';
            var $body = $('body');
            var $cartDropdown = $('#cart-preview-dropdown');
            var $cartLoading = $('<div class="loadingOverlay"></div>');
            $body.toggleClass('halo-open-side-cart');
            $cartDropdown.addClass(loadingClass).html($cartLoading);
            $cartLoading.show();
            _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_0__["default"].api.cart.getContent(options, function (err, response) {
              $cartDropdown.removeClass(loadingClass).html(response);
              $cartLoading.hide();
              var quantity = $(response).find('[data-cart-quantity]').data('cartQuantity') || 0;
              $body.trigger('cart-quantity-update', quantity);
              Object(_haloCalculateFreeShipping__WEBPACK_IMPORTED_MODULE_2__["default"])(context);
            });
          } else if (context.themeSettings.haloAddToCartAction === 'popup') {
            modal.$modal.removeClass().addClass('modal modal--preview');
            modal.open({
              size: 'large'
            });
            updateCartContent(modal, response.data.cart_item.hash);
            Object(_haloCalculateFreeShipping__WEBPACK_IMPORTED_MODULE_2__["default"])(context);
          }
        });
      });
    }
  }
  function updateCartContent(modal, cartItemHash) {
    getCartContent(cartItemHash, function (err, response) {
      if (err) {
        return;
      }
      modal.updateContent(response);
      var $body = $('body');
      var quantity = $(response).find('[data-cart-quantity]').data('cartQuantity') || 0;
      $body.trigger('cart-quantity-update', quantity);
    });
  }
  function getCartContent(cartItemHash, onComplete) {
    var options = {
      template: 'cart/preview',
      params: {
        suggest: cartItemHash
      },
      config: {
        cart: {
          suggestions: {
            limit: 4
          }
        }
      }
    };
    _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_0__["default"].api.cart.getContent(options, onComplete);
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/halothemes/haloBeforeYouLeave.js":
/*!**********************************************************!*\
  !*** ./assets/js/theme/halothemes/haloBeforeYouLeave.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($, jQuery) {/* harmony import */ var _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bigcommerce/stencil-utils */ "./node_modules/@bigcommerce/stencil-utils/src/main.js");
/* harmony import */ var slick_carousel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! slick-carousel */ "./node_modules/slick-carousel/slick/slick.min.js");
/* harmony import */ var slick_carousel__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(slick_carousel__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _global_sweet_alert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../global/sweet-alert */ "./assets/js/theme/global/sweet-alert.js");
/* harmony import */ var _cart__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../cart */ "./assets/js/theme/cart.js");




/* harmony default export */ __webpack_exports__["default"] = (function (context) {
  function setCookie(cname, cvalue, exdays) {
    var d = new Date();
    d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);
    var expires = 'expires=' + d.toUTCString();
    document.cookie = cname + '=' + cvalue + ';' + expires + ';path=/';
  }
  function getCookie(cname) {
    var name = cname + '=';
    var ca = document.cookie.split(';');
    for (var i = 0; i < ca.length; i++) {
      var c = ca[i];
      while (c.charAt(0) === ' ') {
        c = c.substring(1);
      }
      if (c.indexOf(name) === 0) {
        return c.substring(name.length, c.length);
      }
    }
    return '';
  }
  var deleteCookie = function deleteCookie(name) {
    document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';
  };
  var BC_Products = function () {
    var e = {
      howManyToShow: 3,
      howManyToStoreInMemory: 10,
      wrapperId: "history-products",
      onComplete: null
    };
    var t = [];
    var n = null;
    var r = null;
    var i = 0;
    var s = {
      configuration: {
        expires: context.themeSettings.before_you_leave_history_expires_date,
        path: "/",
        domain: window.location.hostname
      },
      name: "bigcommerce_history",
      write: function write(e) {
        setCookie(this.name, e.join(" "), this.configuration.expires);
      },
      read: function read() {
        var e = [];
        var t = getCookie(this.name);
        if (t !== null && t != undefined) {
          e = t.split(" ");
        }
        return e;
      },
      destroy: function destroy() {
        setCookie(this.name, null, this.configuration.expires);
      },
      remove: function remove(e) {
        var t = this.read();
        var n = $.inArray(e, t);
        if (n !== -1) {
          t.splice(n, 1);
          this.write(t);
        }
      }
    };
    var o = function o() {
      for (var j = 0; j < e.howManyToShow; j++) {
        var productId = t[j];
        jQuery('#history-products-list-tmp').find('.productCarousel-slide[data-id="product-' + productId + '"]').appendTo(n);
      }
      jQuery('#history-products-list-tmp').remove();
      n.show();
      if (e.onComplete) {
        try {
          e.onComplete();
        } catch (t) {}
      }
    };
    var u = function u() {
      var tmp = jQuery('#history-products-list-tmp');
      var unique = function (t) {
        var m = {},
          unique = [];
        for (var i = 0; i < t.length; i++) {
          var v = t[i];
          if (!m[v]) {
            unique.push(v);
            m[v] = true;
          }
        }
        return unique;
      }(t);
      for (var j = 0; j < e.howManyToShow; j++) {
        var productId = t[j];
        _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_0__["default"].api.product.getById(productId, {
          template: 'halothemes/halo-before-you-leave-tmp'
        }, function (err, response) {
          if (err) {
            return false;
          }
          $(response).appendTo(tmp);
          i++;
          if (i >= e.howManyToShow) {
            o();
          }
        });
      }
    };
    return {
      resizeImage: function resizeImage(e, t) {
        if (t == null) {
          return e;
        }
        if (t == "master") {
          return e.replace(/http(s)?:/, "");
        }
        var n = e.match(/\.(jpg|jpeg|gif|png|bmp|bitmap|tiff|tif)(\?v=\d+)?/i);
        if (n != null && n != undefined) {
          var r = e.split(n[0]);
          var i = n[0];
          return (r[0] + "_" + t + i).replace(/http(s)?:/, "");
        } else {
          return null;
        }
      },
      showHistory: function showHistory(i) {
        var i = i || {};
        jQuery.extend(e, i);
        t = s.read();
        n = jQuery("#" + e.wrapperId);
        e.howManyToShow = Math.min(t.length, e.howManyToShow);
        if (e.howManyToShow && n.length) {
          u();
        }
      },
      getConfig: function getConfig() {
        return e;
      },
      clearList: function clearList() {
        s.destroy();
      },
      recordHistory: function recordHistory(t) {
        var t = t || {};
        var product_id = $('.productView').find('form[data-cart-item-add] [name="product_id"]').val();
        jQuery.extend(e, t);
        var n = s.read();
        if (product_id) {
          var r = product_id;
          var i = jQuery.inArray(r, n);
          if (i === -1) {
            n.unshift(r);
            n = n.splice(0, e.howManyToStoreInMemory);
          } else {
            n.splice(i, 1);
            n.unshift(r);
          }
          s.write(n);
        }
      }
    };
  }();

  // Before You Leave 
  function ProductsCarousel(tab) {
    if (!tab.hasClass('slick-slider')) {
      tab.slick({
        dots: true,
        arrows: true,
        slidesToShow: 1,
        slidesToScroll: 1,
        slidesPerRow: 1,
        rows: 1,
        mobileFirst: true,
        infinite: false,
        responsive: [{
          breakpoint: 1024,
          settings: {
            slidesPerRow: 1,
            rows: 3
          }
        }, {
          breakpoint: 767,
          settings: {
            slidesPerRow: 1,
            rows: 2
          }
        }]
      });
    }
  }
  function beforeYouLeave() {
    var beforeYouLeave_time = parseInt($('#before-you-leave').data("time")) * 60 * 1000;
    var beforeYouLeave = $("#before-you-leave");
    var productLoadTime = beforeYouLeave_time / 2;
    if (beforeYouLeave_time < 2) {
      beforeYouLeave_time = beforeYouLeave_time + 100;
    }
    if (!$(beforeYouLeave).length) {
      return;
    } else {
      var idleTime = 0;
      $(document).ready(function () {
        setTimeout(function () {
          recommendedProducts();
          historyProducts();
        }, productLoadTime);
        var slickInterval = setInterval(function () {
          timerIncrement();
        }, beforeYouLeave_time + 1000);
      });
      $(document).on('mousemove', function () {
        resetTimer();
      });
      $(document).on('keydown', function () {
        resetTimer();
      });
      $(document).on('scroll', function () {
        resetTimer();
      });
    }
    function timerIncrement() {
      idleTime = idleTime + 1;
      if (idleTime >= 1 && !$('body.halo-open-before-you-leave').length) {
        if (!$('body.halo-open-before-you-leave').length) {
          var tab = $('#tab-recommended .productGrid');
          $('body').addClass('halo-open-before-you-leave');
          ProductsCarousel(tab);
        }
      }
    }
    function resetTimer() {
      idleTime = -1;
    }
    function recommendedProducts() {
      var productIDS = context.themeSettings.before_you_leave_recommended_id;
      var listIDs = JSON.parse("[" + productIDS + "]");
      var count = listIDs.length;
      var tab = $('#tab-recommended .productGrid');
      for (var i = 0; i < listIDs.length; i++) {
        var productId = listIDs[i];
        if ($('#before-you-leave #tab-recommended').length) {
          if ($('#before-you-leave #tab-recommended .productGrid .productCarousel-slide').length <= i) {
            _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_0__["default"].api.product.getById(productId, {
              template: 'halothemes/halo-before-you-leave-tmp'
            }, function (err, response) {
              var hasProd = $(response).find('.card').data('product-id');
              if (hasProd != undefined && hasProd != '' && hasProd != null && !$(response).find('.page-content--err').length) {
                $('#before-you-leave #tab-recommended .productGrid').append($(response));
                $('#before-you-leave .before-you-leave-tab .recommended .count').html(count);
              }
            });
          } else {
            return;
          }
        }
      }
    }
    $(document).on('click', '#before-you-leave .halo-close', function () {
      resetSearchForm();
    });
    $('.before-you-leave-continue').on('click', function (e) {
      resetSearchForm();
    });
    $('.halo-overlay-background').on('click', function (e) {
      resetSearchForm();
    });
    $("#before-you-leave .before-you-leave-tab .tab").on("click", function () {
      var tabId = $(this).data('id');
      var tab = $(".before-you-leave-tab .tabs-contents #tab-" + tabId + " .productGrid");
      setTimeout(function () {
        ProductsCarousel(tab);
      }, 10);
    });
  }
  function resetSearchForm() {
    if ($('body').hasClass('halo-open-before-you-leave')) {
      $('body').removeClass('halo-open-before-you-leave');
      $('#quickSearch2 #search_query2').val('');
      $('#quickSearch2 .quickSearchResults').empty();
    }
    $('.before-you-leave-tab .search .search-icon').removeClass('is-open');
    $('.before-you-leave-tab').removeClass('has-search-dropdown');
    $('#quickSearch2').removeClass('is-open');
  }
  function historyProducts() {
    BC_Products.recordHistory();
    var cookieValue = getCookie("bigcommerce_history");
    if (!(cookieValue !== null && cookieValue !== undefined && cookieValue !== "")) {
      $('#tab-history').find(".no-products").show();
      $('#history-products-list').css("padding", "0");
      $('#before-you-leave .before-you-leave-tab .history .count').html(0);
    } else {
      BC_Products.showHistory({
        howManyToShow: context.themeSettings.before_you_leave_history_count,
        howManyToStoreInMemory: context.themeSettings.before_you_leave_history_count,
        wrapperId: 'history-products-list',
        onComplete: function onComplete() {
          //start
          var historyBlock = $('#tab-history');
          var historyGrid = historyBlock.find('.productGrid');
          var historyGridInner = historyBlock.find('.productGrid .productGridInner');
          var historyGridInner = historyGridInner.children();
          historyGrid.find(".no-products").remove();
          var count = historyBlock.find('.productGrid .productCarousel-slide').length;
          $('#before-you-leave .before-you-leave-tab .history .count').html(count);
          var tab = $('#tab-history .productGrid');
        }
      });
    }
  }
  beforeYouLeave();
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js"), __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/halothemes/haloCalculateFreeShipping.js":
/*!*****************************************************************!*\
  !*** ./assets/js/theme/halothemes/haloCalculateFreeShipping.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bigcommerce/stencil-utils */ "./node_modules/@bigcommerce/stencil-utils/src/main.js");

/* harmony default export */ __webpack_exports__["default"] = (function (context) {
  if (context.themeSettings.halo_CalculateFreeShipping == true) {
    var loadFreeShippingMessage = function loadFreeShippingMessage() {
      var options = {
        template: 'halothemes/cart/halo-calculate-free-shipping-tmp'
      };
      _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_0__["default"].api.cart.getContent(options, function (err, response) {
        showFreeShippingMessage(response);
      });
    };
    var showFreeShippingMessage = function showFreeShippingMessage(message) {
      if ($(message).length > 0) {
        $(message).find('.haloCalulateFreeShipping-text').each(function (index, element) {
          if ($('.condition_remaining', element).text() != "" || $('.congratulation', element).text()) {
            if (context.themeSettings.halo_CalculateFreeShipping_type == 'all') {
              showProgress(message, element);
            } else if (context.themeSettings.halo_CalculateFreeShipping_type == 'custom') {
              var countryCode, country, countryList;
              $.getScript('https://ssl.geoplugin.net/javascript.gp?k=9247556ec91c71e9', function (event) {
                countryCode = geoplugin_countryCode();
                country = $('.country', element).text();
                countryList = country.split(",");
                if ($.inArray(countryCode, countryList) != -1) {
                  showProgress(message, element);
                }
              });
            }
          }
        });
        if ($(message).find('.haloCalulateFreeShipping-text').length == 0) {
          $('.halo-free-shipping-message').removeClass('animated-loading');
        }
      }
    };
    var showProgress = function showProgress(message, scope) {
      var max_percent = 0,
        classProgress;
      var condition_required = $('.condition_required', scope).text(),
        condition_matched = $('.condition_matched', scope).text(),
        condition_remaining = $('.condition_remaining', scope).text(),
        num_required = condition_required != "" ? Number(condition_required.replace(/[^0-9.-]+/g, "")) : 0,
        num_matched = condition_matched != "" ? Number(condition_matched.replace(/[^0-9.-]+/g, "")) : 0,
        num_remaining = condition_remaining != "" ? Number(condition_remaining.replace(/[^0-9.-]+/g, "")) : 0;
      var percent = parseInt(num_matched / num_required * 100);
      percent = percent > 100 ? 100 : percent;
      if (num_required == num_remaining) {
        percent = 100;
      }
      if ($('.congratulation', scope).text() != "") {
        percent = 100;
      }
      if (percent > max_percent) {
        max_percent = percent;
      } else {
        return;
      }
      if (percent < 50) {
        classProgress = "progress-shipping-49";
        message = upsellMessage[1].replace('{remaining}', condition_remaining);
      } else if (percent < 75) {
        classProgress = "progress-shipping-74";
        message = upsellMessage[1].replace('{remaining}', condition_remaining);
      } else if (percent < 100) {
        classProgress = "progress-shipping-99";
        message = upsellMessage[1].replace('{remaining}', condition_remaining);
      } else if (percent == 100) {
        classProgress = "progress-shipping-full";
        message = upsellMessage[2];
      }
      var progress = '<div class="progress-shipping ' + classProgress + '" role="progressbar">\
                            <div class="progress-meter" style="width: ' + percent + '%;">' + percent + '%</div>\
                        </div>';
      if (window.location.pathname == context.urls.cart) {
        var pageCart = $('[data-cart]');
        progress += '<div class="shipping-message">' + message + '</div>';
        if (pageCart.find('.halo-free-shipping-message').length > 0) {
          pageCart.find('.halo-free-shipping-message').removeClass('animated-loading');
          pageCart.find('.halo-free-shipping-message').html(progress);
        } else {
          pageCart.find('[data-cart-status]').before('<div class="halo-free-shipping-message">' + progress + '</div>');
        }
      } else if ($('body').hasClass('halo-open-side-cart')) {
        var previewCart = $('#cart-preview-dropdown');
        progress += '<div class="shipping-message">' + message + '</div>';
        if (previewCart.find('.halo-free-shipping-message').length > 0) {
          previewCart.find('.halo-free-shipping-message').removeClass('animated-loading');
          previewCart.find('.halo-free-shipping-message').html(progress);
        } else {
          previewCart.find('.side-dropdown-title').after('<div class="halo-free-shipping-message">' + progress + '</div>');
        }
      } else if ($('body').hasClass('has-activeModal')) {
        var previewCart = $('#previewModal');
        progress += '<div class="shipping-message">' + message + '</div>';
        if (previewCart.find('.halo-free-shipping-message').length > 0) {
          previewCart.find('.halo-free-shipping-message').html(progress);
        } else {
          previewCart.find('.modal-body').prepend('<div class="halo-free-shipping-message">' + progress + '</div>');
        }
      }
    };
    var upsellMessage = ['<span>' + context.themeSettings.halo_CalculateFreeShipping_required + '</span>', '<span>' + context.themeSettings.halo_CalculateFreeShipping_remaining + '</span>', '<span>' + context.themeSettings.halo_CalculateFreeShipping_matched + '</span>'];
    loadFreeShippingMessage();
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/halothemes/haloGalleryPopup.js":
/*!********************************************************!*\
  !*** ./assets/js/theme/halothemes/haloGalleryPopup.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(jQuery, $) {/* harmony default export */ __webpack_exports__["default"] = (function (context, $gallery) {
  var container_div = $gallery.attr('class');
  container_div = container_div.replace('modal-body', '').replace(' ', '');
  jQuery.fn.vGallery = function (options) {
    var element = jQuery(this);
    var galleryID = "#" + element.attr("id");
    var brand = $('.productView-details .productView-brand a').text(),
      title = $('.productView-details .productView-product .productView-title').text();
    if ($('#video-gallery-pc-popup').length) {
      $('#video-gallery-pc-popup .modal-header-title').html('<strong>' + brand + '</strong>' + title);
    }
    if (!options) var options = {};
    var b = new haloGallery();
    b.init(element, options);
    $('[data-image-gallery-item]', $gallery).each(function () {
      b.add({
        'thumbnail': $(this).find('img').attr('src'),
        'url': $(this).attr('data-image-gallery-zoom-image-url')
      });
    });
    $('[data-video-item]', $gallery).each(function () {
      b.add({
        'thumbnail': '//i.ytimg.com/vi/' + $(this).attr('data-video-id') + '/default.jpg',
        'content': "<iframe class='youtube-iframe' width='100%'  src='https://www.youtube.com/embed/" + $(this).attr('data-video-id') + "?enablejsapi=1' frameborder='0' allowfullscreen></iframe>"
      });
    });
    b.addPopview();
  };
  function haloGallery() {
    var g_objGallery;
    var g_options = {};
    this.init = function (gallery, customOptions) {
      g_objGallery = jQuery(gallery);
      g_options = jQuery.extend(g_options, customOptions);
      this.data = [];
    };
    this.data = [];
    this.round = [];
    this.add = function (ops) {
      if (ops.url || ops.content) {
        var dfs = {
          'thumbnail': '',
          'url': '',
          'type': '',
          'content': '',
          'w': 0,
          'height': 0,
          'loaded': false
        };
        ops = $.extend({}, dfs, ops);
        if (ops.content) ops.u_content = ops.content;else {
          if (!ops.type) ops.type = 'image';
          if (ops.type = 'image') {
            ops.u_content = "<img src='" + ops.url + "'>";
          }
        }
        if (!ops.thumbnail) ops.thumbnail = ops.url;
        if (ops.thumbnail) ops.u_thumbnail = "<img src='" + ops.thumbnail + "'>";else ops.u_thumbnail = ops.u_content;
        if (!ops.u_thumbnail) ops.u_thumbnail = "<div class='thumbnail'></div>";
        this.data.push(ops);
      }
    };
    this.reround = function () {
      this.round = [];
      var pp;
      var c = this.data.length;
      for (var i = 0; i < c; i++) {
        pp = {
          'next': i + 1,
          'prev': i - 1,
          'current': i
        };
        this.round[i] = pp;
        this.data[i].stt = i;
      }
      this.round[0].prev = c - 1;
      this.round[c - 1].next = 0;
    };
    this.addPopview = function (ops) {
      this.reround();
      var dfs = {
        'width': '100%',
        'height': '100%',
        'view_slide': true,
        cur: 0,
        'time': 400,
        'center': true
      };
      ops = $.extend({}, dfs, ops);
      ops.map = {
        'di': {},
        've': {},
        'round': {}
      };
      ops.stt = 0;
      var cthis = this;
      set();
      bindEvent();
      function set() {
        if ($('.' + container_div + '.vgallery_popup').length > 0) $('.' + container_div + '.vgallery_popup').remove();
        var s = "<div class='" + container_div + " vgallery_popup'><div class='acontent'><div class='bcontent'></div></div></div>";
        if (g_objGallery.hasClass(container_div)) {
          g_objGallery.html(s);
        } else {
          g_objGallery.append(s);
        }
        g_objGallery.find('.vgallery_popup').hide();
        g_objGallery.find('.' + container_div).show();
        ops.ob = $('.' + container_div + '.vgallery_popup');
        ops.ob_ccontent = $('>.acontent', ops.ob);
        ops.ob_content = $('>.acontent>.bcontent', ops.ob);
        $(ops.ob_ccontent).css({
          'width': ops.width,
          'height': ops.height
        });
        if (ops.view_slide) draw_slide();
      }
      function aview(pp) {
        return "<li><span class='thumbbsd' data='" + pp.stt + "'>" + pp.u_thumbnail + "</span></li>";
      }
      function draw_slide() {
        var s1 = '',
          s2 = '';
        for (var i = 0; i < cthis.data.length; i++) {
          if (cthis.data[i].type) s1 += aview(cthis.data[i]);else s2 += aview(cthis.data[i]);
        }
        if (s1) s1 = "<div class='gallery-thumbnail gallery-thumbnail-1'><h2></h2><ul>" + s1 + "</ul></div>";
        if (s2) s2 = "<div class='gallery-thumbnail gallery-thumbnail-2'><h2></h2><ul>" + s2 + "</ul></div>";
        var s = "<div class='content_slide'><div class='box1'><div class='btn-arrow btn-prev'></div><div class='galleryView'></div><div class='btn-arrow btn-next'></div></div><div class='box2'>" + s1 + s2 + "</div></div>";
        $(ops.ob_content).append(s);
        ops.ob_sct = $('.box1 > .galleryView');
        ops.ob_e = $('.thumbbsd', ops.ob);
        var i = -1;
        $.each(ops.ob_e, function () {
          i++;
          var v = $(this).attr('data');
          ops.map.di[i] = v;
          ops.map.ve[v] = i;
        });
        ar(ops.cur);
      }
      function ar(num) {
        if (num == -1) {
          $(ops.ob_sct).html('');
        } else {
          ops.cur = num;
          ops.current = ops.map.ve[ops.cur];
          $(ops.ob_e).removeClass('thumb-video');
          $(ops.ob_e).eq(ops.map.ve[ops.cur]).addClass('thumb-video');
          $(ops.ob_sct).animate({
            'opacity': 0
          }, ops.time / 2, function () {
            $(ops.ob_sct).html(cthis.data[num].u_content);
            $(ops.ob_sct).animate({
              'opacity': 1
            }, ops.time / 2);
            // $(ops.ob_sct).trigger('zoom.destroy').zoom({ touch: false, onZoomIn: true, onZoomOut: true });
          });
        }
      }

      function bindEvent() {
        $('[data-image-gallery-main]', $gallery).bind('click', function (e) {
          ar(ops.cur);
          e.preventDefault();
        });
        $('[data-image-gallery-item]', $gallery).bind('hover', function (e) {
          var num = $('[data-image-gallery-item]', $gallery).index(this);
          if (num != -1) {
            ops.cur = num;
          }
        });
        $('[data-image-gallery-item]', $gallery).bind('click', function (e) {
          var container_div = $gallery.attr('class');
          container_div = container_div.replace('modal-body', '').replace(' ', '');
          $('.vgallery_popup').hide();
          $('.' + container_div + '.vgallery_popup').show();
          ar($('[data-image-gallery-item]', $gallery).index(this));
          e.preventDefault();
        });
        $('[data-video-icon]', $gallery).bind('click', function (e) {
          var container_div = $gallery.attr('class');
          container_div = container_div.replace('modal-body', '').replace(' ', '');
          $('.vgallery_popup').hide();
          $('.' + container_div + '.vgallery_popup').show();
          ar($('[data-image-gallery-item]', $gallery).length);
          e.preventDefault();
        });
        $('.btn-next', ops.ob).bind('click', function (e) {
          if (ops.current > ops.ob.length) ops.current = ops.cur;
          var s = cthis.round[ops.current].next;
          ar(ops.map.di[s]);
          e.preventDefault();
        });
        $('.btn-prev', ops.ob).bind('click', function (e) {
          if (ops.current > ops.ob.length) ops.current = ops.cur;
          var s = cthis.round[ops.current].prev;
          ar(ops.map.di[s]);
          e.preventDefault();
        });
        $(ops.ob_e).bind('click', function () {
          var inx = $(this).attr('data');
          ar(inx);
        });
      }
    };
  }
  $(document).ready(function () {
    $("#gallery").vGallery({
      gridpanel_vertical_scroll: false
    });
  });
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js"), __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/halothemes/haloGlobal.js":
/*!**************************************************!*\
  !*** ./assets/js/theme/halothemes/haloGlobal.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(jQuery) {/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bigcommerce/stencil-utils */ "./node_modules/@bigcommerce/stencil-utils/src/main.js");
/* harmony import */ var _common_collapsible__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/collapsible */ "./assets/js/theme/common/collapsible.js");
/* harmony import */ var _common_media_query_list__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/media-query-list */ "./assets/js/theme/common/media-query-list.js");
/* harmony import */ var _haloAddOptionForProduct__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./haloAddOptionForProduct */ "./assets/js/theme/halothemes/haloAddOptionForProduct.js");




var mediumMedia = Object(_common_media_query_list__WEBPACK_IMPORTED_MODULE_3__["default"])('medium');

/* harmony default export */ __webpack_exports__["default"] = (function (context) {
  var $context = context;
  Object(_haloAddOptionForProduct__WEBPACK_IMPORTED_MODULE_4__["default"])($context);
  function quickSearchRe() {
    var $inputQuickSearch = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".form-input--quickSearch");
    $inputQuickSearch.focus(function () {
      var $quickSearchWrap = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).closest(".dropdown--quickSearch").find(".quickSearch-wrap");
      $quickSearchWrap.addClass("is-open");
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').addClass('has-bgQuickSearch');
      $quickSearchWrap.find('.productCarousel').slick('refresh');
    });
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', function (e) {
      var $target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(e.target);
      var $quickSearchWrap = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".quickSearch-wrap");
      if ($target.closest('.dropdown--quickSearch').length === 0) {
        $quickSearchWrap.removeClass("is-open");
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').removeClass('has-bgQuickSearch');
      }
    });
  }
  quickSearchRe();

  // Hover Navigation
  function hoverNavigation() {
    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() > 1024) {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.header-pc #navPages-list-main > .navPages-item').mouseenter(function () {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').addClass('has-background-menu');
      }).mouseleave(function () {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').removeClass('has-background-menu');
      });
    }
  }
  hoverNavigation();

  // Menu ...
  function navPagesDropdown() {
    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() >= 1200) {
      var $navigation = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#navPages-list-main');
      var $navPagesItem = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#navPages-list-main .navPages-item-show');
      var $navigationItemCustom = $navigation.children('.navPages-item-custom');
      var $navigationDropdown = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.navPages >.navPages-list:not(.navPages-list--user) >.navPages-item-custom >.navPage-subMenu >.navPage-subMenu-list');
      var $navPagesContainer = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.navPages-container');

      // Caculate width of menu
      var $lastItem = $navigation.children('.navPages-item').not(':last-child').last();
      var mainWidth = Math.round($navigation.width());
      var widthTotal = 58;
      $navPagesItem.each(function () {
        var width = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).width() + 40;
        widthTotal += width;
      });

      // Caculate width of menu when resize
      var resize = function resize() {
        if (!$navigationItemCustom.is('.u-hiddenVisually')) {
          var widthTotal2 = $navigationItemCustom.width();
          $navPagesItem.each(function () {
            var width = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).width() + 40;
            widthTotal2 += width;
          });
          if (widthTotal2 < mainWidth) {
            $navigationItemCustom.before($navigationDropdown.find('.navPages-item:first-child'));
            if ($navPagesItem.hasClass('has-dropdown')) {
              if (!$navPagesItem.hasClass('background-hover')) {
                $navPagesItem.addClass('background-hover');
              }
            }
          }
          if ($navigationDropdown.children().length == 0) {
            $navigationItemCustom.addClass('u-hiddenVisually');
          }
        }
        if (!mediumMedia.matches) {
          return;
        }
        do {
          // eslint-disable-line
          var _$lastItem = $navigation.children('.navPages-item').not(':last-child').last();
          var _mainWidth = Math.round($navigation.width());
          if ($navigationDropdown.children().length > 0) {
            var widthTotal1 = $navigationItemCustom.width();
            $navPagesItem.each(function () {
              var width = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).width() + 40;
              widthTotal1 += width;
            });
            if (widthTotal1 > _mainWidth) {
              $navigationDropdown.prepend(_$lastItem);
              if ($navigationDropdown.find('.navPages-item').hasClass('background-hover')) {
                $navigationDropdown.find('.navPages-item').removeClass('background-hover ');
              }
            } else {
              break;
            }
          } else if (widthTotal > _mainWidth) {
            var lastItemWidth = _$lastItem.width();
            $navigationDropdown.prepend(_$lastItem);
            $navigationItemCustom.removeClass('u-hiddenVisually');
            widthTotal = widthTotal - lastItemWidth;
            if (widthTotal < _mainWidth) {
              break;
            }
          } else {
            break;
          }
        } while (true);
      };

      // $(window).on('resize', _.debounce(resize, 200));

      resize();
    }
  }
  navPagesDropdown();
  function activeMenu_Mobile() {
    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() < 1200) {
      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('.header-layout-2').length) {
        if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('#menu .vertical-menu-dropdown .navPages-list').length) {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()('#menu .vertical-menu-dropdown .navPages-list').appendTo('#menuMobile .navPages');
        }
        if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('#menu .navPages .navPages-list').length) {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()('#menu .navPages .navPages-list .navPages-item').appendTo('#menuMobile .navPages .navPages-list');
        }
        if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('#menu .navPages-list--user').length) {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()('#menu .navPages-list--user').appendTo('#menuMobile .navPages');
        }
      } else {
        if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('#menu .navPages').length) {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()('#menu .navPages').appendTo('#menuMobile');
        }
      }
    } else {
      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('.header-layout-2').length) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('#menuMobile .navPages-list .navPages-webpages-item').appendTo('#menu > .navPages .navPages-list-webpages');
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('#menuMobile .navPages-list:not(.navPages-list--user)').appendTo('#menu .vertical-menu-dropdown');
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('#menuMobile .navPages-list--user').appendTo('#menu');
      } else {
        if (!jquery__WEBPACK_IMPORTED_MODULE_0___default()('#menu .navPages').length) {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()('#menuMobile .navPages').appendTo('#menu');
        }
      }
    }
  }
  activeMenu_Mobile();
  function accountToggle() {
    jQuery(document).on('click', '.navUser-action--account', function (e) {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').toggleClass('halo-open-account');
    });
  }
  accountToggle();
  function searchStickyToggle() {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()('.header-fixed-right .navUser-item--search .navUser-action').on('click', function (e) {
      e.preventDefault();
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').addClass('halo-open-search');
    });
  }
  searchStickyToggle();
  function clickOverlayBackground() {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '.halo-overlay-background', function (e) {
      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').hasClass('halo-open-account')) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').removeClass('halo-open-account');
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('.navUser-action--account').removeClass('is-open');
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('#accountDropdown').removeClass('is-open');
      }
      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').hasClass('halo-open-side-cart')) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').removeClass('halo-open-side-cart');
      }
      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').hasClass('halo-open-sidebar')) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').removeClass('halo-open-sidebar');
      }
      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').hasClass('halo-open-search')) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').removeClass('halo-open-search');
      }
    });
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '.halo-close', function (e) {
      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').hasClass('halo-open-side-cart')) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').removeClass('halo-open-side-cart');
      }
      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').hasClass('halo-open-account')) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').removeClass('halo-open-account');
      }
    });
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '.modal-background', function (e) {
      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').hasClass('halo-cart--editOptions')) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').removeClass('halo-cart--editOptions');
      }
    });
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '.modal-close', function (e) {
      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').hasClass('halo-cart--editOptions')) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').removeClass('halo-cart--editOptions');
      }
    });
  }
  clickOverlayBackground();
  function searchBeforeYouLeave() {
    // search on Before You Leave
    jquery__WEBPACK_IMPORTED_MODULE_0___default()('.before-you-leave-tab .search .search-icon .icon-search').on('click', function (e) {
      e.preventDefault();
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).parent().addClass('is-open');
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.before-you-leave-tab').addClass('has-search-dropdown');
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).closest('.before-you-leave-tab .search').find('.dropdown--quickSearch').addClass('is-open');
    });
    jquery__WEBPACK_IMPORTED_MODULE_0___default()('.before-you-leave-tab .search .search-icon .icon-close').on('click', function (e) {
      e.preventDefault();
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).parent().removeClass('is-open');
      var container = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".before-you-leave-tab .search");
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.before-you-leave-tab').removeClass('has-search-dropdown');
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('#quickSearch2 #search_query2').val('');
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('#quickSearch2 .quickSearchResults').empty();
    });
  }
  searchBeforeYouLeave();

  // Back to top
  function back_to_top() {
    var offset = jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).height() / 2;
    var backToTop = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#back-to-top');
    var backToTopa = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#back-to-top a');
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).scroll(function () {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).scrollTop() > offset ? backToTop.addClass('is-visible') : backToTop.removeClass('is-visible ');
    });
    backToTopa.on('click', function (event) {
      event.preventDefault();
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('body,html').animate({
        scrollTop: 0
      }, 1000);
    });
  }
  if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('#back-to-top').length) {
    back_to_top();
  }
  function footerMobileToggle() {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()('.footer-info-col--mobile .footer-info-heading').on('click', function (event) {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.footer-info-col--mobile .footer-info-heading').not(jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget)).removeClass('is-clicked');
      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget).hasClass('is-clicked')) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget).removeClass('is-clicked');
      } else {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget).addClass('is-clicked');
      }
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.footer-info-col--mobile').each(function (index, element) {
        if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('.footer-info-heading', element).hasClass('is-clicked')) {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(element).find('.footer-info-list').slideDown("slow");
        } else {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(element).find('.footer-info-list').slideUp("slow");
        }
      });
    });
  }
  footerMobileToggle();

  //Slick Featured Brands
  function featuredBrandsCarousel() {
    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('.halo_featured_brands .brands-list').length) {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.halo_featured_brands .brands-list').slick({
        dots: true,
        arrows: false,
        slidesToShow: 2,
        slidesToScroll: 2,
        mobileFirst: true,
        infinite: false,
        responsive: [{
          breakpoint: 1024,
          settings: {
            slidesToShow: 6,
            slidesToScroll: 6,
            arrows: true
          }
        }, {
          breakpoint: 991,
          settings: {
            slidesToShow: 5,
            slidesToScroll: 5,
            arrows: false
          }
        }, {
          breakpoint: 550,
          settings: {
            slidesToShow: 4,
            slidesToScroll: 4,
            arrows: false
          }
        }]
      });
    }
  }
  featuredBrandsCarousel();

  // Slick Shop By Categories Layout 2

  function shopByCategoriesCarousel() {
    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').hasClass('homepage-layout-2')) {
      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('.halo_custom_block_shop_by_categories .categories-list').length) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('.halo_custom_block_shop_by_categories .categories-list').slick({
          dots: true,
          arrows: false,
          slidesToShow: 2,
          slidesToScroll: 2,
          mobileFirst: true,
          infinite: false,
          responsive: [{
            breakpoint: 1024,
            settings: {
              slidesToShow: 6,
              slidesToScroll: 1,
              arrows: true,
              dots: false
            }
          }, {
            breakpoint: 991,
            settings: {
              slidesToShow: 5,
              slidesToScroll: 1,
              arrows: false
            }
          }, {
            breakpoint: 550,
            settings: {
              slidesToShow: 4,
              slidesToScroll: 1,
              arrows: false
            }
          }, {
            breakpoint: 380,
            settings: {
              slidesToShow: 3,
              slidesToScroll: 1,
              arrows: false
            }
          }]
        });
      }
    }
  }
  shopByCategoriesCarousel();

  /* Ajax load products by CateID */
  function homeProductsCategoryID() {
    var $catUrlData = 'halothemesProductsByCategory';
    var $catUrlData2 = 'halothemesProductsByCategory-2';
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).ready(function () {
      var tScroll = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).scrollTop();
      homeProductsCategoryLoad(tScroll);
    });
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).on('scroll', function (e) {
      var $target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(e.currentTarget);
      var tScroll = $target.scrollTop();
      homeProductsCategoryLoad(tScroll);
    });
    function homeProductsCategoryLoad(tScroll) {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-halothemes-products-by-category]').each(function (i, productBlock) {
        var thisOffetTop = jquery__WEBPACK_IMPORTED_MODULE_0___default()(productBlock).offset().top - screen.height * 1.5;
        if (tScroll > thisOffetTop && !jquery__WEBPACK_IMPORTED_MODULE_0___default()(productBlock).hasClass('is-loaded')) {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(productBlock).addClass('is-loaded');
          var blockId = jquery__WEBPACK_IMPORTED_MODULE_0___default()(productBlock).attr('id');
          var block_layout = jquery__WEBPACK_IMPORTED_MODULE_0___default()(productBlock).parent().data('block-layout');
          var block_limit = jquery__WEBPACK_IMPORTED_MODULE_0___default()(productBlock).parent().data('limit');
          if (block_layout == 'grid') {
            var $options = {
              config: {
                category: {
                  products: {
                    limit: block_limit
                  }
                }
              },
              template: 'halothemes/ajax-products-by-category-id-result-grid-2'
            };
          } else {
            var $options = {
              config: {
                category: {
                  products: {
                    limit: block_limit
                  }
                }
              },
              template: 'halothemes/ajax-products-by-category-id-result'
            };
          }
          loadProduct(jquery__WEBPACK_IMPORTED_MODULE_0___default()(productBlock), $options, $catUrlData, blockId);
        }
      });
    }
    function loadProduct($productBlock, $options, $catUrlData, blockId) {
      var $catUrl = $productBlock.data($catUrlData);
      var countDown = context.themeSettings.products_flash_deals_countdown;
      var countDownAll = context.themeSettings.products_flash_deals_countdown_all;
      if ($catUrl != undefined) {
        $catUrl = $catUrl.replace(/https?:\/\/[^/]+/, '');
        _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_1__["default"].api.getPage($catUrl, $options, function (err, response) {
          if (!jquery__WEBPACK_IMPORTED_MODULE_0___default()(response).find('.page-content--err').length) {
            $productBlock.html(response);
            var newText = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.newTextLabel').text();
            var $content = '';
            $productBlock.find('.card').each(function () {
              var id = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data('product-id');
              var a = arrNew.indexOf(jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data('product-id'));
              if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).find('.card_optionImage').length) {
                $content = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).find('.card_optionImage');
              }
              if (a != -1) {
                if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).find('.card-figure .new-badge').length <= 0) {
                  jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).find('.card-figcaption').after('<div class="product-badge new-badge"><span class="text">' + newText + '</span></div>');
                }
              }
              if ($productBlock.parents('#homeProductFlashSale').length) {
                if (countDown != '') {
                  if (countDownAll) {
                    if (!jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).find('.countDowntimer').length) {
                      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).find('.card-price').after('<div class="countDowntimer" data-count-down="' + countDown + '"></div>');
                      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).find('.card-price').addClass('hasCountDown');
                    }
                    initCountdown();
                  } else {
                    if (!$productBlock.parents('#homeProductFlashSale').find('.page-header .countDowntimer').length) {
                      $productBlock.parents('#homeProductFlashSale').find('.page-header .page-heading').after('<div class="countDowntimer" data-count-down="' + countDown + '"></div>');
                    }
                    initCountdown2();
                  }
                }
              }
            });

            // Slick
            var homeProColumn = $productBlock.parents('.product-block').data('columns');
            var $wrap = $productBlock.find('.productCarousel');
            var $wrap2 = $productBlock.find('.productGrid');
            var dots = $productBlock.parents('.product-block').data('dots');
            if ($wrap.length) {
              slickCarousel($wrap, homeProColumn, dots);
              Object(_haloAddOptionForProduct__WEBPACK_IMPORTED_MODULE_4__["default"])($context);
            } else {
              gridLayout($wrap2, homeProColumn);
              Object(_haloAddOptionForProduct__WEBPACK_IMPORTED_MODULE_4__["default"])($context);
            }
          }
        });
      }
    }
    function slickCarousel($wrap, homeProColumn, dots) {
      if (homeProColumn == 6) {
        $wrap.slick({
          infinite: false,
          slidesToShow: 2,
          slidesToScroll: 2,
          dots: true,
          arrows: false,
          mobileFirst: true,
          responsive: [{
            breakpoint: 1600,
            settings: {
              slidesToShow: homeProColumn,
              slidesToScroll: homeProColumn,
              arrows: true,
              dots: dots
            }
          }, {
            breakpoint: 1280,
            settings: {
              slidesToShow: homeProColumn - 1,
              slidesToScroll: homeProColumn - 1,
              arrows: true,
              dots: dots
            }
          }, {
            breakpoint: 1024,
            settings: {
              slidesToShow: homeProColumn - 2,
              slidesToScroll: homeProColumn - 2,
              arrows: true,
              dots: dots
            }
          }, {
            breakpoint: 991,
            settings: {
              slidesToShow: homeProColumn - 2,
              slidesToScroll: homeProColumn - 2
            }
          }, {
            breakpoint: 767,
            settings: {
              slidesToShow: homeProColumn - 3,
              slidesToScroll: homeProColumn - 3
            }
          }]
        });
      } else if (homeProColumn == 5) {
        $wrap.slick({
          infinite: false,
          slidesToShow: 2,
          slidesToScroll: 2,
          dots: true,
          arrows: false,
          mobileFirst: true,
          responsive: [{
            breakpoint: 1280,
            settings: {
              slidesToShow: homeProColumn,
              slidesToScroll: homeProColumn,
              arrows: true,
              dots: dots
            }
          }, {
            breakpoint: 1024,
            settings: {
              slidesToShow: homeProColumn - 1,
              slidesToScroll: homeProColumn - 1,
              arrows: true,
              dots: dots
            }
          }, {
            breakpoint: 991,
            settings: {
              slidesToShow: homeProColumn - 1,
              slidesToScroll: homeProColumn - 1
            }
          }, {
            breakpoint: 767,
            settings: {
              slidesToShow: homeProColumn - 2,
              slidesToScroll: homeProColumn - 2
            }
          }]
        });
      } else if (homeProColumn == 4) {
        $wrap.slick({
          infinite: false,
          slidesToShow: 2,
          slidesToScroll: 2,
          dots: true,
          arrows: false,
          mobileFirst: true,
          responsive: [{
            breakpoint: 1024,
            settings: {
              slidesToShow: homeProColumn,
              slidesToScroll: homeProColumn,
              arrows: true,
              dots: dots
            }
          }, {
            breakpoint: 991,
            settings: {
              slidesToShow: homeProColumn,
              slidesToScroll: homeProColumn
            }
          }, {
            breakpoint: 767,
            settings: {
              slidesToShow: homeProColumn - 1,
              slidesToScroll: homeProColumn - 1
            }
          }]
        });
      } else if (homeProColumn == 3) {
        $wrap.slick({
          infinite: false,
          slidesToShow: 2,
          slidesToScroll: 2,
          dots: true,
          arrows: false,
          mobileFirst: true,
          responsive: [{
            breakpoint: 1024,
            settings: {
              slidesToShow: homeProColumn,
              slidesToScroll: homeProColumn,
              arrows: true,
              dots: dots
            }
          }, {
            breakpoint: 991,
            settings: {
              slidesToShow: homeProColumn,
              slidesToScroll: homeProColumn
            }
          }, {
            breakpoint: 767,
            settings: {
              slidesToShow: homeProColumn - 1,
              slidesToScroll: homeProColumn - 1
            }
          }]
        });
      } else if (homeProColumn == 2) {
        $wrap.slick({
          infinite: false,
          slidesToShow: 2,
          slidesToScroll: 2,
          dots: true,
          arrows: false,
          mobileFirst: true,
          responsive: [{
            breakpoint: 1024,
            settings: {
              slidesToShow: homeProColumn,
              slidesToScroll: homeProColumn,
              arrows: true,
              dots: dots
            }
          }]
        });
      } else if (homeProColumn == 1) {
        $wrap.slick({
          infinite: false,
          slidesToShow: 1,
          slidesToScroll: 1,
          dots: true,
          arrows: false,
          mobileFirst: true,
          adaptiveHeight: true
        });
      }
    }
    function gridLayout($wrap, homeProColumn) {
      if ($wrap.length > 0) {
        var limitProduct = homeProColumn * 2;
        if (homeProColumn == 6) {
          if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() > 1920) {
            limitProduct = homeProColumn * 2;
          }
          if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() <= 1920) {
            limitProduct = (homeProColumn - 1) * 2;
          }
          if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() <= 1440) {
            limitProduct = (homeProColumn - 2) * 2;
          }
          if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() <= 991) {
            limitProduct = (homeProColumn - 3) * 2;
          }
          if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() <= 550) {
            limitProduct = (homeProColumn - 4) * 2;
          }
        }
        if (homeProColumn == 5) {
          if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() > 1440) {
            limitProduct = homeProColumn * 2;
          }
          if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() <= 1440) {
            limitProduct = (homeProColumn - 1) * 2;
          }
          if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() <= 991) {
            limitProduct = (homeProColumn - 2) * 2;
          }
          if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() <= 550) {
            limitProduct = (homeProColumn - 3) * 2;
          }
        }
        if (homeProColumn == 4) {
          if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() > 991) {
            limitProduct = homeProColumn * 2;
          }
          if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() <= 991) {
            limitProduct = (homeProColumn - 1) * 2;
          }
          if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() <= 550) {
            limitProduct = (homeProColumn - 2) * 2;
          }
        }
        if (homeProColumn == 3) {
          if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() > 550) {
            limitProduct = homeProColumn * 2;
          }
          if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() <= 550) {
            limitProduct = (homeProColumn - 1) * 2;
          }
        }
        if (homeProColumn == 2) {
          limitProduct = homeProColumn * 2;
        }
        $wrap.find('.product:visible').css('display', 'none');
        $wrap.find('.product:hidden').slice(0, limitProduct).css('display', 'inline-block');
        if ($wrap.find('.product').length > limitProduct) {
          if ($wrap.parent().find('.productGrid-showMore').length <= 0) {
            $wrap.after('<div class="productGrid-showMore"><a class="button" href="#">See More</a></div>');
          }
        }
        $wrap.siblings('.productGrid-showMore').find('.button').on('click', function (event) {
          event.preventDefault();
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget).blur();
          $wrap.find('.product:hidden').slice(0, limitProduct).css('display', 'inline-block');
          if ($wrap.find('.product:hidden').length == 0) {
            jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget).addClass('disabled').text('No more items');
          }
        });
      }
    }
  }
  homeProductsCategoryID();

  /* Ajax load products by ListID */
  function homeProductsListID() {
    var $options;
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).ready(function () {
      var tScroll = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).scrollTop();
      homeListId(tScroll);
    });
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).on('scroll', function (e) {
      var $target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(e.currentTarget);
      var tScroll = $target.scrollTop();
      homeListId(tScroll);
    });
    function homeListId(tScroll) {
      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('.productsByListId[data-list-id]').length > 0) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('.productsByListId[data-list-id]').each(function (index, element) {
          var thisOffetTop = jquery__WEBPACK_IMPORTED_MODULE_0___default()(element).offset().top - screen.height * 1.5;
          if (tScroll > thisOffetTop && !jquery__WEBPACK_IMPORTED_MODULE_0___default()(element).hasClass('is-loaded')) {
            jquery__WEBPACK_IMPORTED_MODULE_0___default()(element).addClass('is-loaded');
            var $prodWrapId = jquery__WEBPACK_IMPORTED_MODULE_0___default()(element).attr('id'),
              $wrap,
              $listId = jquery__WEBPACK_IMPORTED_MODULE_0___default()(element).data('list-id');
            var homeProColumn = jquery__WEBPACK_IMPORTED_MODULE_0___default()(element).parents('.product-block').data('columns');
            var dots = jquery__WEBPACK_IMPORTED_MODULE_0___default()(element).parents('.product-block').data('dots');
            if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(element).find('.productCarousel').length > 0) {
              $wrap = jquery__WEBPACK_IMPORTED_MODULE_0___default()(element).find('.productCarousel');
              $options = {
                template: 'halothemes/ajax-products-by-list-id-temp-carousel'
              };
            } else {
              $wrap = jquery__WEBPACK_IMPORTED_MODULE_0___default()(element).find('.productGrid');
              $options = {
                template: 'halothemes/ajax-products-by-list-id-temp-grid'
              };
            }
            if (!jquery__WEBPACK_IMPORTED_MODULE_0___default()('#product-by-list-' + $prodWrapId + ' .productCarousel .productCarousel-slide').length) {
              if ($listId.length > 1) {
                loadListID($listId, $options, $wrap, homeProColumn, dots);
              } else {
                loadListID(jquery__WEBPACK_IMPORTED_MODULE_0___default()($listId), $options, $wrap, homeProColumn, dots);
              }
            }
          }
        });
      }
    }
    function loadListID(id, options, wrap, homeProColumn, dots) {
      if (id.length <= 1) {
        var arr = id;
      } else {
        var arr = id.split(',');
      }
      if (id.length > homeProColumn) {
        var list = arr.slice(0, parseInt(context.themeSettings.homepage_products_count));
      } else {
        var list = arr;
      }
      var num = 0;
      var countDown = context.themeSettings.products_flash_deals_countdown;
      var countDownAll = context.themeSettings.products_flash_deals_countdown_all;
      for (var i = 0; i <= list.length; i++) {
        var $prodId = list[i];
        if ($prodId != undefined) {
          _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_1__["default"].api.product.getById($prodId, options, function (err, response) {
            var hasProd = jquery__WEBPACK_IMPORTED_MODULE_0___default()(response).find('.card').data('product-id');
            if (hasProd != undefined && hasProd != '' && hasProd != null && !jquery__WEBPACK_IMPORTED_MODULE_0___default()(response).find('.page-content--err').length) {
              if (wrap.hasClass('slick-slider')) {
                wrap.slick('unslick');
                wrap.append(response);
              } else {
                wrap.append(response);
              }
              if (wrap.hasClass('productCarousel')) {
                // slickCarousel(wrap, homeProColumn, dots);
              } else {
                gridLayoutListId(wrap, id, homeProColumn);
              }
              var newText = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.newTextLabel').text();
              wrap.find('.card').each(function () {
                var id_pro = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data('product-id');
                var a = arrNew.indexOf(id_pro);
                if (a != -1) {
                  if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).find('.card-figure .new-badge').length <= 0) {
                    jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).find('.card-figcaption').after('<div class="product-badge new-badge"><span class="text">' + newText + '</span></div>');
                  }
                }
                if (wrap.parents('#homeProductFlashSale').length) {
                  if (countDown != '') {
                    if (countDownAll) {
                      if (!jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).find('.countDowntimer').length) {
                        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).find('.card-price').after('<div class="countDowntimer" data-count-down="' + countDown + '"></div>');
                        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).find('.card-price').addClass('hasCountDown');
                      }
                      initCountdown();
                    } else {
                      if (!wrap.parents('#homeProductFlashSale').find('.page-header .countDowntimer').length) {
                        wrap.parents('#homeProductFlashSale').find('.page-header .page-heading').after('<div class="countDowntimer" data-count-down="' + countDown + '"></div>');
                      }
                      initCountdown2();
                    }
                  }
                }
              });
            }
            num++;
            if (num == list.length) {
              wrap.parents('.productsByListId[data-list-id]').find('.halo_productLoading').remove();
              wrap.parents('.productsByListId[data-list-id]').addClass('show');
              if (wrap.hasClass('productCarousel')) {
                slickCarouselListId(wrap, homeProColumn, dots);
              }
              Object(_haloAddOptionForProduct__WEBPACK_IMPORTED_MODULE_4__["default"])($context);
              return;
            }
          });
        }
      }
    }
    function slickCarouselListId($wrap, homeProColumn, dots) {
      if (homeProColumn == 6) {
        $wrap.slick({
          infinite: false,
          slidesToShow: 2,
          slidesToScroll: 2,
          dots: true,
          arrows: false,
          mobileFirst: true,
          responsive: [{
            breakpoint: 1600,
            settings: {
              slidesToShow: homeProColumn,
              slidesToScroll: homeProColumn,
              arrows: true,
              dots: dots
            }
          }, {
            breakpoint: 1280,
            settings: {
              slidesToShow: homeProColumn - 1,
              slidesToScroll: homeProColumn - 1,
              arrows: true,
              dots: dots
            }
          }, {
            breakpoint: 1024,
            settings: {
              slidesToShow: homeProColumn - 2,
              slidesToScroll: homeProColumn - 2,
              arrows: true,
              dots: dots
            }
          }, {
            breakpoint: 991,
            settings: {
              slidesToShow: homeProColumn - 2,
              slidesToScroll: homeProColumn - 2
            }
          }, {
            breakpoint: 767,
            settings: {
              slidesToShow: homeProColumn - 3,
              slidesToScroll: homeProColumn - 3
            }
          }]
        });
      } else if (homeProColumn == 5) {
        $wrap.slick({
          infinite: false,
          slidesToShow: 2,
          slidesToScroll: 2,
          dots: true,
          arrows: false,
          mobileFirst: true,
          responsive: [{
            breakpoint: 1280,
            settings: {
              slidesToShow: homeProColumn,
              slidesToScroll: homeProColumn,
              arrows: true,
              dots: dots
            }
          }, {
            breakpoint: 1024,
            settings: {
              slidesToShow: homeProColumn - 1,
              slidesToScroll: homeProColumn - 1,
              arrows: true,
              dots: dots
            }
          }, {
            breakpoint: 991,
            settings: {
              slidesToShow: homeProColumn - 1,
              slidesToScroll: homeProColumn - 1
            }
          }, {
            breakpoint: 767,
            settings: {
              slidesToShow: homeProColumn - 2,
              slidesToScroll: homeProColumn - 2
            }
          }]
        });
      } else if (homeProColumn == 4) {
        $wrap.slick({
          infinite: false,
          slidesToShow: 2,
          slidesToScroll: 2,
          dots: true,
          arrows: false,
          mobileFirst: true,
          responsive: [{
            breakpoint: 1024,
            settings: {
              slidesToShow: homeProColumn,
              slidesToScroll: homeProColumn,
              arrows: true,
              dots: dots
            }
          }, {
            breakpoint: 991,
            settings: {
              slidesToShow: homeProColumn,
              slidesToScroll: homeProColumn
            }
          }, {
            breakpoint: 767,
            settings: {
              slidesToShow: homeProColumn - 1,
              slidesToScroll: homeProColumn - 1
            }
          }]
        });
      } else if (homeProColumn == 3) {
        $wrap.slick({
          infinite: false,
          slidesToShow: 2,
          slidesToScroll: 2,
          dots: true,
          arrows: false,
          mobileFirst: true,
          responsive: [{
            breakpoint: 1024,
            settings: {
              slidesToShow: homeProColumn,
              slidesToScroll: homeProColumn,
              arrows: true,
              dots: dots
            }
          }, {
            breakpoint: 991,
            settings: {
              slidesToShow: homeProColumn,
              slidesToScroll: homeProColumn
            }
          }, {
            breakpoint: 767,
            settings: {
              slidesToShow: homeProColumn - 1,
              slidesToScroll: homeProColumn - 1
            }
          }]
        });
      } else if (homeProColumn == 2) {
        $wrap.slick({
          infinite: false,
          slidesToShow: 2,
          slidesToScroll: 2,
          dots: true,
          arrows: false,
          mobileFirst: true,
          responsive: [{
            breakpoint: 1024,
            settings: {
              slidesToShow: homeProColumn,
              slidesToScroll: homeProColumn,
              arrows: true,
              dots: dots
            }
          }]
        });
      }
    }
    function gridLayoutListId($wrap, id, homeProColumn) {
      if ($wrap.length > 0) {
        var col = context.themeSettings.homepage_products_count,
          limitProduct = homeProColumn;
        if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() <= 1024) {
          limitProduct = homeProColumn - 1;
        }
        $wrap.find('.product').css('display', 'none');
        $wrap.find('.product:hidden').slice(0, limitProduct).css('display', 'inline-block');
        if ($wrap.find('.product').length > limitProduct) {
          if ($wrap.parent().find('.productGrid-showMore').length <= 0) {
            $wrap.after('<div class="productGrid-showMore"><a class="button button--primary" href="#" data-href="' + id + '">Show More</a></div>');
          }
        }
        $wrap.siblings('.productGrid-showMore').find('.button').on('click', function (event) {
          event.preventDefault();
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget).blur();
          $wrap.find('.product:hidden').slice(0, limitProduct).css('display', 'inline-block');
          if ($wrap.find('.product:hidden').length == 0) {
            jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget).addClass('disabled').text('No more items');
          }
        });
      }
    }
  }
  homeProductsListID();
  function gridLayoutProduct() {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()('.product-block.layout_grid').each(function (index, element) {
      var homeProColumn = context.themeSettings.homepage_products2_column_count;
      var $wrap = jquery__WEBPACK_IMPORTED_MODULE_0___default()(element).find('.productGrid');
      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(element).parents('#homeProductRightImage').length) {
        homeProColumn = context.themeSettings.homepage_products1_column_count;
      }
      if ($wrap.length) {
        var col = context.themeSettings.homepage_products_count,
          limitProduct = homeProColumn;
        if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() <= 1024) {
          limitProduct = homeProColumn - 1;
        }
        $wrap.find('.product').css('display', 'none');
        $wrap.find('.product:hidden').slice(0, limitProduct).css('display', 'inline-block');
        if ($wrap.find('.product').length > limitProduct) {
          if ($wrap.parent().find('.productGrid-showMore').length <= 0) {
            $wrap.after('<div class="productGrid-showMore"><a class="button button--primary" href="#">Show More</a></div>');
          }
        }
        $wrap.siblings('.productGrid-showMore').find('.button').on('click', function (event) {
          event.preventDefault();
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget).blur();
          $wrap.find('.product:hidden').slice(0, limitProduct).css('display', 'inline-block');
          if ($wrap.find('.product:hidden').length == 0) {
            jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget).addClass('disabled').text('No more items');
          }
        });
      }
    });
  }
  gridLayoutProduct();

  /* Count Down */
  function initCountdown() {
    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('.countDowntimer').length) {
      var countDownDate = new Date(jquery__WEBPACK_IMPORTED_MODULE_0___default()('.countDowntimer').attr('data-count-down')).getTime();
      var countdownfunction = setInterval(function () {
        var now = new Date().getTime();
        var distance = countDownDate - now;
        if (distance < 0) {
          clearInterval(countdownfunction);
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(".countDowntimer").html('');
        } else {
          var days = Math.floor(distance / (1000 * 60 * 60 * 24));
          var hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));
          var minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));
          var seconds = Math.floor(distance % (1000 * 60) / 1000);
          var strCountDown = "<div class='clock-item'><span class='num'>" + days + "</span><span class='text'>days</span></div><div class='clock-item'><span class='num'>" + hours + " :</span></div><div class='clock-item'><span class='num'>" + minutes + " :</span></div><div class='clock-item'><span class='num'>" + seconds + "</span></div>";
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(".countDowntimer").html(strCountDown);
        }
      }, 1000);
    }
  }
  function initCountdown2() {
    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('.countDowntimer').length) {
      var countDownDate = new Date(jquery__WEBPACK_IMPORTED_MODULE_0___default()('.countDowntimer').attr('data-count-down')).getTime();
      var countdownfunction = setInterval(function () {
        var now = new Date().getTime();
        var distance = countDownDate - now;
        if (distance < 0) {
          clearInterval(countdownfunction);
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(".countDowntimer").html('');
        } else {
          var days = Math.floor(distance / (1000 * 60 * 60 * 24));
          var hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));
          var minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));
          var seconds = Math.floor(distance % (1000 * 60) / 1000);
          var strCountDown = "<div class='clock-item'><span class='num'>" + days + "</span> <span class='colon'>:</span></div><div class='clock-item'><span class='num'>" + hours + "</span> <span class='colon'>:</span></div><div class='clock-item'><span class='num'>" + minutes + "</span> <span class='colon'>:</span></div><div class='clock-item'><span class='num'>" + seconds + "</span></div>";
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(".countDowntimer").html(strCountDown);
        }
      }, 1000);
    }
  }
  function productCountDown() {
    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('.productCountDown').length) {
      initCountdown();
    }
  }
  productCountDown();
  function showmoreHtmlText() {
    var maxHeight = 176,
      maxLine = '8',
      moretext = "Show more",
      lesstext = "Show less",
      content = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.halo_custom_cms_block .custom-html'),
      contentHeight = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.halo_custom_cms_block .custom-html').height(),
      button = '<div class="button-group text-center"><a id="button-showmore-html" class="button button--transparent" href="#"> <span class="text">' + moretext + '</span> </a></div>';
    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('.page-type-category').length) {
      maxHeight = 72;
      maxLine = '3';
    }
    if (contentHeight > maxHeight) {
      content.addClass('hasShowMore');
      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('.halo_custom_cms_block #button-showmore-html').length <= 0) {
        content.after(button);
      }
      content.css({
        'max-height': maxHeight,
        '-webkit-box-orient': 'vertical',
        '-moz-box-orient': 'vertical',
        '-webkit-line-clamp': maxLine
      });
    } else {
      content.addClass('noShowMore');
    }
    jquery__WEBPACK_IMPORTED_MODULE_0___default()('#button-showmore-html').on('click', function (e) {
      e.preventDefault();
      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).hasClass("less")) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).removeClass("less");
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).find('.text').html(moretext);
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).parent().prev().removeClass('showmore');
        content.css({
          'max-height': maxHeight,
          '-webkit-line-clamp': maxLine
        });
      } else {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).addClass("less");
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).find('.text').html(lesstext);
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).parent().prev().addClass('showmore');
        content.css({
          'max-height': 'none',
          '-webkit-line-clamp': 'unset'
        });
      }
    });
  }
  if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('.halo_custom_cms_block').length) {
    showmoreHtmlText();
  }
  function initSidebar() {
    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('.sidebar-label').is(":visible") == true) {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.sidebar-label').on('click', function (ev) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').addClass('halo-open-sidebar');
      });
    }
    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('.close-sidebar .icon-close').length) {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.close-sidebar .icon-close').on('click', function (ev) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').removeClass('halo-open-sidebar');
      });
    }
  }
  initSidebar();
  function askAnExpert(context) {
    var message;
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '#halo-ask-an-expert-button', function (event) {
      var ask_proceed = true,
        subjectMail = context.themeSettings.halo_ask_an_expert_subject,
        mailTo = context.themeSettings.halo_ask_an_expert_mailto,
        customerName = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#halo-ask-an-expert-form input[name=customer_name]').val(),
        customerMail = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#halo-ask-an-expert-form input[name=customer_email]').val(),
        customerPhone = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#halo-ask-an-expert-form input[name=customer_phone]').val(),
        typeContact = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#halo-ask-an-expert-form input[name=type_contact]:checked').val(),
        typePackage = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#halo-ask-an-expert-form input[name=type_package]:checked').val(),
        customerMessage = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#halo-ask-an-expert-form textarea[name=message]').val();
      var img = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#halo-ask-an-expert [data-product-image]').attr('data-product-image'),
        title = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#halo-ask-an-expert [data-product-title]').attr('data-product-title'),
        sku = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#halo-ask-an-expert [data-product-sku]').attr('data-product-sku'),
        url = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#halo-ask-an-expert [data-product-url]').attr('data-product-url');
      message = "<div style='border: 1px solid #e6e6e6;padding: 30px;max-width: 500px;margin: 0 auto;'>\
                        <h2 style='margin-top:0;margin-bottom:30px;color: #000000;'>" + subjectMail + "</h2>\
                        <p style='border-bottom: 1px solid #e6e6e6;padding-bottom: 20px;margin-bottom:20px;color: #000000;'>You received a new message from your online store's ask an expert form.</p>\
                        <table style='width:100%;'>\
                        <tr>\
                            <td style='border-bottom: 1px solid #e6e6e6;padding-bottom: 20px;margin-bottom:20px;width:50%;'><img style='width: 100px' src='" + img + "' alt='" + title + "' title='" + title + "'></td><td style='border-bottom: 1px solid #e6e6e6;padding-bottom: 20px;margin-bottom:20px;'>" + sku + " <br><a href='" + url + "'>" + title + "</a></td>\
                        </tr>\
                        <tr><td style='padding-right: 10px;padding-top: 18px;vertical-align: top;width:50%;'><strong>Customer Name: </strong></td><td style='padding-top: 18px;'>" + customerName + "</td></tr>\
                        <tr><td style='padding-right: 10px;vertical-align: top;width:50%;'><strong>Email Address: </strong></td><td>" + customerMail + "</td></tr>\
                        <tr><td style='padding-right: 10px;vertical-align: top;width:50%;'><strong>Phone Number: </strong></td><td>" + customerPhone + "</td></tr>\
                        <tr><td style='padding-right: 10px;vertical-align: top;width:50%;'><strong>How would you like me to contact you? </strong></td><td>" + typeContact + "</td></tr>\
                        <tr><td style='padding-right: 10px;vertical-align: top;width:50%;'><strong>Do you need: </strong></td><td>" + typePackage + "</td></tr>\
                        <tr><td style='padding-right: 10px;vertical-align: top;width:50%;'><strong>What can i help you with today? </strong></td><td>" + customerMessage + "</td></tr>\
                    </table></div>";
      jquery__WEBPACK_IMPORTED_MODULE_0___default()("#halo-ask-an-expert-form input[required=true], #halo-ask-an-expert-form textarea[required=true]").each(function () {
        if (!jquery__WEBPACK_IMPORTED_MODULE_0___default.a.trim(jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).val())) {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).parent('.form-field').removeClass('form-field--success').addClass('form-field--error');
          ask_proceed = false;
        } else {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).parent('.form-field').removeClass('form-field--error').addClass('form-field--success');
        }
        var email_reg = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;
        if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).attr("name") == "customer_email" && !email_reg.test(jquery__WEBPACK_IMPORTED_MODULE_0___default.a.trim(jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).val()))) {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).parent('.form-field').removeClass('form-field--success').addClass('form-field--error');
          ask_proceed = false;
        }
      });
      if (ask_proceed) {
        var ask_post_data = {
          "api": "i_send_mail",
          "subject": subjectMail,
          "from_name": customerName,
          "email": mailTo,
          "email_from": customerMail,
          "message": message
        };
        jquery__WEBPACK_IMPORTED_MODULE_0___default.a.post('https://themevale.net/tools/sendmail/quotecart/sendmail.php', ask_post_data, function (response) {
          var output = "";
          if (response.type == 'error') {
            output = '<div class="error">' + response.text + '</div>';
          } else {
            output = '<div class="alertBox alertBox--success">Thank you. We\'ve received your feedback and will respond shortly.</div>';
            jquery__WEBPACK_IMPORTED_MODULE_0___default()("#halo-ask-an-expert-form  input[required=true], #halo-ask-an-expert-form textarea[required=true]").val('');
            jquery__WEBPACK_IMPORTED_MODULE_0___default()("#halo-ask-an-expert-form").hide();
          }
          jquery__WEBPACK_IMPORTED_MODULE_0___default()("#halo-ask-an-expert-results").hide().html(output).show();
        }, 'json');
      }
    });
    jquery__WEBPACK_IMPORTED_MODULE_0___default()("#halo-ask-an-expert-form input[required=true], #halo-ask-an-expert-form textarea[required=true]").keyup(function () {
      var ask_proceed = true;
      if (!jquery__WEBPACK_IMPORTED_MODULE_0___default.a.trim(jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).val())) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).parent('.form-field').removeClass('form-field--success').addClass('form-field--error');
        ask_proceed = false;
      } else {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).parent('.form-field').removeClass('form-field--error').addClass('form-field--success');
      }
      var email_reg = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;
      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).attr("name") == "customer_email" && !email_reg.test(jquery__WEBPACK_IMPORTED_MODULE_0___default.a.trim(jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).val()))) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).parent('.form-field').removeClass('form-field--success').addClass('form-field--error');
        ask_proceed = false;
      }
      jquery__WEBPACK_IMPORTED_MODULE_0___default()("#halo-ask-an-expert-results").hide();
    });
  }
  askAnExpert(context);
  function slickCarouselBlogPost() {
    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('.blog-post-body .des-col').length) {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.des-item .desItem-img').slick({
        infinite: false,
        slidesToShow: 1,
        slidesToScroll: 1,
        dots: true,
        arrows: false,
        mobileFirst: true
      });
    }
  }
  slickCarouselBlogPost();
  function blogTags() {
    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('body.page-type-blog').length) {
      var arr = {};
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('#blog-tags .recentPosts_tags [data-tag]').each(function (i) {
        var text = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data('tag');
        if (arr[text]) {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).remove();
        } else {
          arr[text] = true;
        }
      });
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('#blog-tags .recentPosts_tags').show();
    } else if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('body.page-type-blog_post').length) {
      var url_blogTags = '/blog';
      jquery__WEBPACK_IMPORTED_MODULE_0___default.a.get(url_blogTags, function (data) {
        var arr = {};
        var response = jquery__WEBPACK_IMPORTED_MODULE_0___default()(data).find('#blog-tags .recentPosts_tags').html();
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('#blog-tags .recentPosts_tags').html(response);
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('#blog-tags .recentPosts_tags [data-tag]').each(function (i) {
          var text = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data('tag');
          if (arr[text]) {
            jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).remove();
          } else {
            arr[text] = true;
          }
        });
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('#blog-tags .recentPosts_tags').show();
      });
    }
  }
  blogTags();
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).resize(function () {
    hoverNavigation();
    activeMenu_Mobile();
  });
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/halothemes/haloMegaMenu.js":
/*!****************************************************!*\
  !*** ./assets/js/theme/halothemes/haloMegaMenu.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return haloMegaMenu; });
/* harmony import */ var _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bigcommerce/stencil-utils */ "./node_modules/@bigcommerce/stencil-utils/src/main.js");

var haloMegaMenu = /*#__PURE__*/function () {
  function haloMegaMenu() {}
  var _proto = haloMegaMenu.prototype;
  _proto.menuItem = function menuItem(num) {
    return {
      setMegaMenu: function setMegaMenu(param) {
        // Defaut params
        param = $.extend({
          style: '',
          dropAlign: 'fullWidth',
          dropWidth: '493px',
          cateColumns: 1,
          disabled: false,
          bottomCates: '',
          products: '',
          productId: '',
          label: '',
          options: true
        }, param);
        if ($('.navPages-list-megamenu-2').length) {
          $('.navPages-list-megamenu-2 > li:nth-child(' + num + ')').each(function (idx, el) {
            if (param.disabled === false) {
              var subMegaMenu = $(el).find('> .navPage-subMenu');
              if (param.style === 'style 1') {
                if (!$(el).hasClass('has-megamenu')) {
                  if ($(el).hasClass('has-dropdown')) {
                    $(el).removeClass('has-dropdown');
                  }
                  $(el).addClass('has-megamenu style-1 fullWidth');
                  if (!subMegaMenu.find('.cateArea').length) {
                    subMegaMenu.find('.navPage-subMenu-list-level1').wrap('<div class="cateArea columns-' + param.cateColumns + '"><div class="container"></div></div>');
                  }
                  if (!subMegaMenu.find('.imageArea').length) {
                    subMegaMenu.append('<div class="imageArea"><div class="container"><div class="imageAreaInner"><div class="megamenu-right-item">' + param.images + '</div></div></div></div>');
                    if (param.products.length && param.products !== '') {
                      subMegaMenu.find('.imageArea > .container > .imageAreaInner').prepend('<div class="megamenu-product-list">' + param.products + '</div>');
                    }
                  }
                  subMegaMenu.find('.imageArea').css({
                    'width': '100%',
                    'max-width': param.imageAreaWidth
                  });
                  subMegaMenu.find('.cateArea').css({
                    'width': '100%',
                    'max-width': param.cateAreaWidth
                  });
                  if (param.productId.length && param.productId !== '') {
                    var productSlider = function productSlider(element) {
                      element.each(function (idx, el) {
                        if ($('.megamenu-slider', el).length) {
                          $('.megamenu-slider', el).slick({
                            dots: true,
                            arrows: false,
                            mobileFirst: true,
                            slidesToShow: 1,
                            slidesToScroll: 1,
                            responsive: [{
                              breakpoint: 1440,
                              settings: {
                                slidesToShow: 3,
                                slidesToScroll: 1
                              }
                            }, {
                              breakpoint: 1200,
                              settings: {
                                slidesToShow: 2,
                                slidesToScroll: 1
                              }
                            }]
                          });
                        }
                      });
                    };
                    var productIDS = param.productId,
                      featuredProductCarousel = subMegaMenu.find('.megamenu-product-list');
                    var $options = {
                      template: 'halothemes/halo-megamenu-tmp'
                    };
                    if (productIDS !== '') {
                      var listIDs = JSON.parse("[" + productIDS + "]");
                      if (featuredProductCarousel.length) {
                        featuredProductCarousel.find('.megamenu-slider').html('<div class="loadingOverlay" style="display:block;"></div>');
                        var n = 0;
                        for (var i = 0; i < listIDs.length; i++) {
                          var productId = listIDs[i];
                          _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_0__["default"].api.product.getById(productId, $options, function (err, response) {
                            var hasProd = $(response).find('.card').data('product-id');
                            if (hasProd != undefined && hasProd != '' && hasProd != null && !$(response).find('.page-content--err').length) {
                              featuredProductCarousel.find('.megamenu-slider').append(response);
                              n++;
                            } else {
                              n++;
                            }
                            if (n == listIDs.length) {
                              featuredProductCarousel.find('.megamenu-slider .loadingOverlay').remove();
                              productSlider(featuredProductCarousel);
                            }
                          });
                        }
                      }
                    }
                    if ($(window).width() > 1199) {
                      $(".navPages-list-megamenu li").mouseover(function () {
                        if ($(this).find('.megamenu-slider.slick-initialized').length) {
                          $(this).find('.megamenu-slider').get(0).slick.setPosition();
                        }
                      });
                    }
                    $('.navPages-list-megamenu > .navPages-item > .navPages-action').on('click', function (event) {
                      if ($(this).parent().find('.megamenu-slider.slick-initialized').length) {
                        $(this).parent().find('.megamenu-slider').get(0).slick.setPosition();
                      }
                    });
                  }
                }
              }
              if (param.style === 'style 2') {
                if (!$(el).hasClass('has-megamenu')) {
                  if ($(el).hasClass('has-dropdown')) {
                    $(el).removeClass('has-dropdown');
                  }
                  $(el).addClass('has-megamenu style-2 fullWidth');
                  if (!subMegaMenu.find('.cateArea').length) {
                    subMegaMenu.find('.navPage-subMenu-list-level1').wrap('<div class="cateArea columns-' + param.cateColumns + '"><div class="container"></div></div>');
                  }
                  if (!subMegaMenu.find('.imageArea').length) {
                    subMegaMenu.append('<div class="imageArea"><div class="container"><div class="imageAreaInner"><div class="megamenu-left-item">' + param.images + '</div></div></div></div>');
                    if (param.products.length && param.products !== '') {
                      subMegaMenu.find('.imageArea > .container > .imageAreaInner').append(param.products);
                    }
                  }
                  subMegaMenu.find('.imageArea').css({
                    'width': '100%',
                    'max-width': param.imageAreaWidth
                  });
                  subMegaMenu.find('.cateArea').css({
                    'width': '100%',
                    'max-width': param.cateAreaWidth
                  });
                  if (param.products.length && param.products !== '') {
                    var brand = subMegaMenu.find('.imageArea .megamenu-brands-inner');
                    if (brand.length) {
                      var $megamenuBrands = $('.megamenu-brands');
                      var $menubrandItem = $('.haloMegamenuBrand__list li');
                      $menubrandItem.each(function (index, element) {
                        var txt = $(element).data('brand-letter');
                        if (!$megamenuBrands.find('[data-brand-letter="' + txt + '"]').hasClass('has-letter')) {
                          $megamenuBrands.find('[data-brand-letter="' + txt + '"]').addClass('has-letter');
                        }
                      });
                    }
                  }
                }
              }
              if (param.style === 'style 3') {
                if (!$(el).hasClass('has-megamenu')) {
                  if ($(el).hasClass('has-dropdown')) {
                    $(el).removeClass('has-dropdown');
                  }
                  $(el).addClass('has-megamenu style-3 fullWidth');
                }
                if (!subMegaMenu.find('.cateArea').length) {
                  subMegaMenu.find('.navPage-subMenu-list-level1').wrap('<div class="container"><div class="cateArea columns-' + param.cateColumns + '"></div></div>');
                }
                if (!subMegaMenu.find('.imageArea').length) {
                  subMegaMenu.find('> .container').append('<div class="imageArea"><div class="megamenu-right-item">' + param.images + '</div></div>');
                  if (param.products.length && param.products !== '') {
                    subMegaMenu.find('.imageArea').prepend('<div class="megamenu-product-list">' + param.products + '</div>');
                  }
                }
                subMegaMenu.find('.imageArea').css({
                  'width': '100%',
                  'max-width': param.imageAreaWidth
                });
                subMegaMenu.find('.cateArea').css({
                  'width': '100%',
                  'max-width': param.cateAreaWidth
                });
                if (param.productId.length && param.productId !== '') {
                  var _productSlider = function _productSlider(element) {
                    element.each(function (idx, el) {
                      if ($('.megamenu-slider2', el).length) {
                        $('.megamenu-slider2', el).slick({
                          infinite: false,
                          dots: false,
                          arrows: true,
                          slidesToShow: 1,
                          slidesToScroll: 1
                        });
                      }
                    });
                  };
                  var productIDS = param.productId,
                    featuredProductCarousel = subMegaMenu.find('.megamenu-product-list');
                  var _$options = {
                    template: 'halothemes/halo-megamenu-tmp'
                  };
                  if (productIDS !== '') {
                    var listIDs = JSON.parse("[" + productIDS + "]");
                    if (featuredProductCarousel.length) {
                      featuredProductCarousel.find('.megamenu-slider2').html('<div class="loadingOverlay" style="display:block;"></div>');
                      var n = 0;
                      for (var i = 0; i < listIDs.length; i++) {
                        var productId = listIDs[i];
                        _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_0__["default"].api.product.getById(productId, _$options, function (err, response) {
                          var hasProd = $(response).find('.card').data('product-id');
                          if (hasProd != undefined && hasProd != '' && hasProd != null && !$(response).find('.page-content--err').length) {
                            featuredProductCarousel.find('.megamenu-slider2').append(response);
                            n++;
                          } else {
                            n++;
                          }
                          if (n == listIDs.length) {
                            featuredProductCarousel.find('.megamenu-slider2 .loadingOverlay').remove();
                            _productSlider(featuredProductCarousel);
                          }
                        });
                      }
                    }
                  }
                  if ($(window).width() > 1024) {
                    $(".navPages-list-megamenu li").mouseover(function () {
                      if ($(this).find('.megamenu-slider2.slick-initialized').length) {
                        $(this).find('.megamenu-slider2').get(0).slick.setPosition();
                      }
                    });
                  }
                  $('.navPages-list-megamenu > .navPages-item > .navPages-action').on('click', function (event) {
                    if ($(this).parent().find('.megamenu-slider2.slick-initialized').length) {
                      $(this).parent().find('.megamenu-slider2').get(0).slick.setPosition();
                    }
                  });
                }
              }
              if (param.style === 'style 4') {
                if (!$(el).hasClass('has-megamenu')) {
                  if ($(el).hasClass('has-dropdown')) {
                    $(el).removeClass('has-dropdown');
                  }
                  $(el).addClass('has-megamenu style-4 fullWidth');
                }
                if (!subMegaMenu.find('.cateArea').length) {
                  subMegaMenu.find('.navPage-subMenu-list-level1').wrap('<div class="cateArea columns-' + param.cateColumns + '"><div class="container"></div></div>');
                }
                if (!subMegaMenu.find('.imageArea').length) {
                  subMegaMenu.append('<div class="rightArea itemArea"><div class="container"><div class="megamenu-right-item">' + param.images + '</div></div></div>');
                }
                subMegaMenu.find('.imageArea').css({
                  'width': '100%',
                  'max-width': param.imageAreaWidth
                });
                subMegaMenu.find('.cateArea').css({
                  'width': '100%',
                  'max-width': param.cateAreaWidth
                });
              }
              var navPagesAction = $(el).children('.navPages-action').children('.text');
              if (param.label === 'new') {
                navPagesAction.append('<span class="navPages-label new-label">New</span>');
              } else if (param.label === 'sale') {
                navPagesAction.append('<span class="navPages-label sale-label">Sale</span>');
              } else if (param.label === 'hot') {
                navPagesAction.append('<span class="navPages-label hot-label">Hot</span>');
              }
            } else {
              var _navPagesAction = $(el).children('.navPages-action').children('.text');
              if (param.label === 'new') {
                _navPagesAction.append('<span class="navPages-label new-label">New</span>');
              } else if (param.label === 'sale') {
                _navPagesAction.append('<span class="navPages-label sale-label">Sale</span>');
              } else if (param.label === 'hot') {
                _navPagesAction.append('<span class="navPages-label hot-label">Hot</span>');
              }
            }
          });
        } else {
          $('.navPages-list:not(.navPages-list--user) > li:nth-child(' + num + ')').each(function (idx, el) {
            if (param.disabled === false) {
              var subMegaMenu = $(el).find('> .navPage-subMenu');
              if (param.style === 'style 1') {
                if (!$(el).hasClass('has-megamenu')) {
                  if ($(el).hasClass('has-dropdown')) {
                    $(el).removeClass('has-dropdown');
                  }
                  $(el).addClass('has-megamenu style-1 fullWidth');
                  if (!subMegaMenu.find('.cateArea').length) {
                    subMegaMenu.find('.navPage-subMenu-list-level1').wrap('<div class="cateArea columns-' + param.cateColumns + '"><div class="container"></div></div>');
                  }
                  if (!subMegaMenu.find('.imageArea').length) {
                    subMegaMenu.append('<div class="imageArea"><div class="container"><div class="imageAreaInner"><div class="megamenu-right-item">' + param.images + '</div></div></div></div>');
                    if (param.products.length && param.products !== '') {
                      subMegaMenu.find('.imageArea > .container > .imageAreaInner').prepend('<div class="megamenu-product-list">' + param.products + '</div>');
                    }
                  }
                  subMegaMenu.find('.imageArea').css({
                    'width': '100%',
                    'max-width': param.imageAreaWidth
                  });
                  subMegaMenu.find('.cateArea').css({
                    'width': '100%',
                    'max-width': param.cateAreaWidth
                  });
                  if (param.productId.length && param.productId !== '') {
                    var productSlider = function productSlider(element) {
                      element.each(function (idx, el) {
                        if ($('.megamenu-slider', el).length) {
                          $('.megamenu-slider', el).slick({
                            dots: true,
                            arrows: false,
                            mobileFirst: true,
                            slidesToShow: 1,
                            slidesToScroll: 1,
                            responsive: [{
                              breakpoint: 1200,
                              settings: {
                                slidesToShow: 3,
                                slidesToScroll: 1
                              }
                            }]
                          });
                        }
                      });
                    };
                    var productIDS = param.productId,
                      featuredProductCarousel = subMegaMenu.find('.megamenu-product-list');
                    var $options = {
                      template: 'halothemes/halo-megamenu-tmp'
                    };
                    if (productIDS !== '') {
                      var listIDs = JSON.parse("[" + productIDS + "]");
                      if (featuredProductCarousel.length) {
                        featuredProductCarousel.find('.megamenu-slider').html('<div class="loadingOverlay" style="display:block;"></div>');
                        var n = 0;
                        for (var i = 0; i < listIDs.length; i++) {
                          var productId = listIDs[i];
                          _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_0__["default"].api.product.getById(productId, $options, function (err, response) {
                            var hasProd = $(response).find('.card').data('product-id');
                            if (hasProd != undefined && hasProd != '' && hasProd != null && !$(response).find('.page-content--err').length) {
                              featuredProductCarousel.find('.megamenu-slider').append(response);
                              n++;
                            } else {
                              n++;
                            }
                            if (n == listIDs.length) {
                              featuredProductCarousel.find('.megamenu-slider .loadingOverlay').remove();
                              productSlider(featuredProductCarousel);
                            }
                          });
                        }
                      }
                    }
                    if ($(window).width() > 1199) {
                      $(".navPages-list-megamenu li").mouseover(function () {
                        if ($(this).find('.megamenu-slider.slick-initialized').length) {
                          $(this).find('.megamenu-slider').get(0).slick.setPosition();
                        }
                      });
                    }
                    $('.navPages-list-megamenu > .navPages-item > .navPages-action').on('click', function (event) {
                      if ($(this).parent().find('.megamenu-slider.slick-initialized').length) {
                        $(this).parent().find('.megamenu-slider').get(0).slick.setPosition();
                      }
                    });
                  }
                }
              }
              if (param.style === 'style 2') {
                if (!$(el).hasClass('has-megamenu')) {
                  if ($(el).hasClass('has-dropdown')) {
                    $(el).removeClass('has-dropdown');
                  }
                  $(el).addClass('has-megamenu style-2 fullWidth');
                  if (!subMegaMenu.find('.cateArea').length) {
                    subMegaMenu.find('.navPage-subMenu-list-level1').wrap('<div class="cateArea columns-' + param.cateColumns + '"><div class="container"></div></div>');
                  }
                  if (!subMegaMenu.find('.imageArea').length) {
                    subMegaMenu.append('<div class="imageArea"><div class="container"><div class="imageAreaInner"><div class="megamenu-left-item">' + param.images + '</div></div></div></div>');
                    if (param.products.length && param.products !== '') {
                      subMegaMenu.find('.imageArea > .container > .imageAreaInner').append(param.products);
                    }
                  }
                  subMegaMenu.find('.imageArea').css({
                    'width': '100%',
                    'max-width': param.imageAreaWidth
                  });
                  subMegaMenu.find('.cateArea').css({
                    'width': '100%',
                    'max-width': param.cateAreaWidth
                  });
                  if (param.products.length && param.products !== '') {
                    var brand = subMegaMenu.find('.imageArea .megamenu-brands-inner');
                    if (brand.length) {
                      var $megamenuBrands = $('.megamenu-brands');
                      var $menubrandItem = $('.haloMegamenuBrand__list li');
                      $menubrandItem.each(function (index, element) {
                        var txt = $(element).data('brand-letter');
                        if (!$megamenuBrands.find('[data-brand-letter="' + txt + '"]').hasClass('has-letter')) {
                          $megamenuBrands.find('[data-brand-letter="' + txt + '"]').addClass('has-letter');
                        }
                      });
                    }
                  }
                }
              }
              if (param.style === 'style 3') {
                if (!$(el).hasClass('has-megamenu')) {
                  if ($(el).hasClass('has-dropdown')) {
                    $(el).removeClass('has-dropdown');
                  }
                  $(el).addClass('has-megamenu style-3 fullWidth');
                }
                if (!subMegaMenu.find('.cateArea').length) {
                  subMegaMenu.find('.navPage-subMenu-list-level1').wrap('<div class="container"><div class="cateArea columns-' + param.cateColumns + '"></div></div>');
                }
                if (!subMegaMenu.find('.imageArea').length) {
                  subMegaMenu.find('> .container').append('<div class="imageArea"><div class="megamenu-right-item">' + param.images + '</div></div>');
                  if (param.products.length && param.products !== '') {
                    subMegaMenu.find('.imageArea').prepend('<div class="megamenu-product-list">' + param.products + '</div>');
                  }
                }
                subMegaMenu.find('.imageArea').css({
                  'width': '100%',
                  'max-width': param.imageAreaWidth
                });
                subMegaMenu.find('.cateArea').css({
                  'width': '100%',
                  'max-width': param.cateAreaWidth
                });
                if (param.productId.length && param.productId !== '') {
                  var _productSlider2 = function _productSlider2(element) {
                    element.each(function (idx, el) {
                      if ($('.megamenu-slider2', el).length) {
                        $('.megamenu-slider2', el).slick({
                          dots: false,
                          arrows: true,
                          slidesToShow: 1,
                          slidesToScroll: 1
                        });
                      }
                    });
                  };
                  var productIDS = param.productId,
                    featuredProductCarousel = subMegaMenu.find('.megamenu-product-list');
                  var _$options2 = {
                    template: 'halothemes/halo-megamenu-tmp'
                  };
                  if (productIDS !== '') {
                    var listIDs = JSON.parse("[" + productIDS + "]");
                    if (featuredProductCarousel.length) {
                      featuredProductCarousel.find('.megamenu-slider2').html('<div class="loadingOverlay" style="display:block;"></div>');
                      var n = 0;
                      for (var i = 0; i < listIDs.length; i++) {
                        var productId = listIDs[i];
                        _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_0__["default"].api.product.getById(productId, _$options2, function (err, response) {
                          var hasProd = $(response).find('.card').data('product-id');
                          if (hasProd != undefined && hasProd != '' && hasProd != null && !$(response).find('.page-content--err').length) {
                            featuredProductCarousel.find('.megamenu-slider2').append(response);
                            n++;
                          } else {
                            n++;
                          }
                          if (n == listIDs.length) {
                            featuredProductCarousel.find('.megamenu-slider2 .loadingOverlay').remove();
                            _productSlider2(featuredProductCarousel);
                          }
                        });
                      }
                    }
                  }
                  if ($(window).width() > 1024) {
                    $(".navPages-list-megamenu li").mouseover(function () {
                      if ($(this).find('.megamenu-slider2.slick-initialized').length) {
                        $(this).find('.megamenu-slider2').get(0).slick.setPosition();
                      }
                    });
                  }
                  $('.navPages-list-megamenu > .navPages-item > .navPages-action').on('click', function (event) {
                    if ($(this).parent().find('.megamenu-slider2.slick-initialized').length) {
                      $(this).parent().find('.megamenu-slider2').get(0).slick.setPosition();
                    }
                  });
                }
              }
              if (param.style === 'style 4') {
                if (!$(el).hasClass('has-megamenu')) {
                  if ($(el).hasClass('has-dropdown')) {
                    $(el).removeClass('has-dropdown');
                  }
                  $(el).addClass('has-megamenu style-4 fullWidth');
                }
                if (!subMegaMenu.find('.cateArea').length) {
                  subMegaMenu.find('.navPage-subMenu-list-level1').wrap('<div class="cateArea columns-' + param.cateColumns + '"><div class="container"></div></div>');
                }
                if (!subMegaMenu.find('.imageArea').length) {
                  subMegaMenu.append('<div class="rightArea itemArea"><div class="container"><div class="megamenu-right-item">' + param.images + '</div></div></div>');
                }
                subMegaMenu.find('.imageArea').css({
                  'width': '100%',
                  'max-width': param.imageAreaWidth
                });
                subMegaMenu.find('.cateArea').css({
                  'width': '100%',
                  'max-width': param.cateAreaWidth
                });
              }
              var navPagesAction = $(el).children('.navPages-action').children('.text');
              if (param.label === 'new') {
                navPagesAction.append('<span class="navPages-label new-label">New</span>');
              } else if (param.label === 'sale') {
                navPagesAction.append('<span class="navPages-label sale-label">Sale</span>');
              } else if (param.label === 'hot') {
                navPagesAction.append('<span class="navPages-label hot-label">Hot</span>');
              }
            } else {
              var _navPagesAction2 = $(el).children('.navPages-action').children('.text');
              if (param.label === 'new') {
                _navPagesAction2.append('<span class="navPages-label new-label">New</span>');
              } else if (param.label === 'sale') {
                _navPagesAction2.append('<span class="navPages-label sale-label">Sale</span>');
              } else if (param.label === 'hot') {
                _navPagesAction2.append('<span class="navPages-label hot-label">Hot</span>');
              }
            }
          });
        }
        return this;
      }
    };
  };
  return haloMegaMenu;
}();

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/halothemes/haloNewsletterPopup.js":
/*!***********************************************************!*\
  !*** ./assets/js/theme/halothemes/haloNewsletterPopup.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);

/* eslint-disable space-before-function-paren */
/* eslint-disable indent */
/* eslint-disable no-undef */
/* eslint-disable no-unused-vars */
/* eslint-disable func-names */
/* eslint-disable padded-blocks */
/* eslint-disable prefer-template */
/* eslint-disable vars-on-top */
/* eslint-disable no-var */
/* eslint-disable no-inner-declarations */
/* eslint-disable prefer-arrow-callback */
/* eslint-disable no-else-return */

/* harmony default export */ __webpack_exports__["default"] = (function (t, ev) {
  function setCookie(cname, cvalue, exdays) {
    var d = new Date();
    d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);
    var expires = 'expires=' + d.toUTCString();
    document.cookie = cname + '=' + cvalue + ';' + expires + ';path=/';
  }
  function getCookie(cname) {
    var name = cname + '=';
    var ca = document.cookie.split(';');
    for (var i = 0; i < ca.length; i++) {
      var c = ca[i];
      while (c.charAt(0) === ' ') {
        c = c.substring(1);
      }
      if (c.indexOf(name) === 0) {
        return c.substring(name.length, c.length);
      }
    }
    return '';
  }
  var deleteCookie = function deleteCookie(name) {
    document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';
  };
  if (ev === true && getCookie('haloNewsletterPopup') === '') {
    var setClosePopup = function setClosePopup() {
      setCookie('haloNewsletterPopup', 'closed', t);
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('#halo-newsletter-popup').addClass('animated fadeOut');
      setTimeout(function () {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('#halo-newsletter-popup').addClass('hide');
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').removeClass('has-newsletter');
      }, 300);
    };
    setTimeout(function () {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('#halo-newsletter-popup').removeClass('hide').addClass('animated fadeIn');
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').addClass('has-newsletter');
    }, 2000);
    jquery__WEBPACK_IMPORTED_MODULE_0___default()('#popupSubcribeFormSubmit').submit(function (event) {
      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('#popupSubcribeFormSubmit').find('#nl_email3').val() === '') {
        return false;
      } else {
        setCookie('haloNewsletterPopup', 'closed', t);
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('#halo-newsletter-popup').addClass('animated fadeOut');
        setTimeout(function () {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()('#halo-newsletter-popup').addClass('hide');
          jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').removeClass('has-newsletter');
          return true;
        }, 300);
      }
    });
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-close-newsletter-popup]', function () {
      setClosePopup();
    });
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '#halo-newsletter-popup .no-thanks > a', function () {
      setClosePopup();
    });
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).keyup(function (e) {
      if (e.keyCode === 27) {
        // escape key maps to keycode `27`
        setClosePopup();
      }
    });
  }
  if (ev === false) {
    deleteCookie('haloNewsletterPopup');
  }
});

/***/ }),

/***/ "./assets/js/theme/halothemes/haloQuickEditCart.js":
/*!*********************************************************!*\
  !*** ./assets/js/theme/halothemes/haloQuickEditCart.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var lodash_isObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/isObject */ "./node_modules/lodash/isObject.js");
/* harmony import */ var lodash_isObject__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_isObject__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_isNumber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isNumber */ "./node_modules/lodash/isNumber.js");
/* harmony import */ var lodash_isNumber__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isNumber__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/isPlainObject */ "./node_modules/lodash/isPlainObject.js");
/* harmony import */ var lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bigcommerce/stencil-utils */ "./node_modules/@bigcommerce/stencil-utils/src/main.js");
/* harmony import */ var _global_modal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../global/modal */ "./assets/js/theme/global/modal.js");
/* harmony import */ var _global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../global/sweet-alert */ "./assets/js/theme/global/sweet-alert.js");
/* harmony import */ var _cart_shipping_estimator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../cart/shipping-estimator */ "./assets/js/theme/cart/shipping-estimator.js");
/* harmony import */ var _common_gift_certificate_validator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/gift-certificate-validator */ "./assets/js/theme/common/gift-certificate-validator.js");
/* harmony import */ var _cart__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../cart */ "./assets/js/theme/cart.js");
/* harmony import */ var _halothemes_haloCalculateFreeShipping__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../halothemes/haloCalculateFreeShipping */ "./assets/js/theme/halothemes/haloCalculateFreeShipping.js");



function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }







/* harmony default export */ __webpack_exports__["default"] = (function (context) {
  var $cartContent = $('[data-cart-content]');
  var $cartMessages = $('[data-cart-status]');
  var $cartTotals = $('[data-cart-totals]');
  var $overlay = $('[data-cart] .loadingOverlay');
  if (context.themeSettings.haloQuickEditCart == true) {
    var addToCart = function addToCart(form, i, arrP, cartId) {
      if (window.FormData === undefined) {
        return;
      }
      var k = arrP[i];
      _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_3__["default"].api.cart.itemAdd(filterEmptyFilesFromForm(new FormData(form[k])), function (err, response) {
        var errorMessage = err || response.data.error;
        if (errorMessage) {
          var tmp = document.createElement('DIV');
          tmp.innerHTML = errorMessage;
          return Object(_global_modal__WEBPACK_IMPORTED_MODULE_4__["showAlertModal"])(tmp.textContent || tmp.innerText);
        }
        i++;
        if (i >= arrP.length) {
          var modal = Object(_global_modal__WEBPACK_IMPORTED_MODULE_4__["defaultModal"])();
          modal.close();
          updateCartContent();
          return;
        }
        addToCart(form, i, arrP);
      });
    };
    var listenQuantityChangeUpdate = function listenQuantityChangeUpdate($target, preVal) {
      if (preVal === void 0) {
        preVal = null;
      }
      var itemId = $target.data('cart-itemid');
      var $el = $target;
      var $form = $target.parents('.product-edit-item').find('.form');
      var maxQty = parseInt($el.data('quantityMax'), 10);
      var minQty = parseInt($el.data('quantityMin'), 10);
      var oldQty = preVal !== null ? preVal : minQty;
      var minError = $el.data('quantityMinError');
      var maxError = $el.data('quantityMaxError');
      var newQty = parseInt(Number($el.val()), 10);
      var stock = $el.data('stock');
      var invalidEntry;
      if (!newQty) {
        invalidEntry = $el.val();
        $el.val(oldQty);
        return _global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__["default"].fire({
          text: invalidEntry + " is not a valid entry",
          icon: 'error'
        });
      } else if (newQty < minQty) {
        $el.val(oldQty);
        return _global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__["default"].fire({
          text: minError,
          icon: 'error'
        });
      } else if (maxQty > 0 && newQty > maxQty) {
        $el.val(oldQty);
        return _global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__["default"].fire({
          text: maxError,
          icon: 'error'
        });
      } else if (newQty > stock) {
        $el.val(oldQty);
        return _global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__["default"].fire({
          text: 'We don\'t have enough stock on hand for the quantity you selected. Please try again.',
          icon: 'error'
        });
      } else {
        $form.find('[name=qty\\[\\]]').attr('value', newQty);
      }
    };
    var filterEmptyFilesFromForm = function filterEmptyFilesFromForm(formData) {
      try {
        for (var _iterator = _createForOfIteratorHelperLoose(formData), _step; !(_step = _iterator()).done;) {
          var _step$value = _step.value,
            key = _step$value[0],
            val = _step$value[1];
          if (val instanceof File && !val.name && !val.size) {
            formData["delete"](key);
          }
        }
      } catch (e) {
        console.error(e);
      }
      return formData;
    };
    var checkProduct = function checkProduct(form, arrPro) {
      var check = true;
      for (var i = 0, len = arrPro.length; i < len; i++) {
        var k = arrPro[i],
          $form = $(form[k]);
        if ($form.find('[data-product-attribute]').length > 0) {
          check = checkBeforeAdd($form);
          if (check == false) {
            return false;
          }
        }
      }
      return check;
    };
    var checkBeforeAdd = function checkBeforeAdd($attributes) {
      var check = true,
        att = "";
      $attributes.find('input:text, input:password, input:file, textarea').each(function (index, element) {
        if (!$(element).prop('required')) {} else {
          if ($(element).val()) {} else {
            $(element).focus();
            check = false;
          }
        }
      });
      $attributes.find('select').each(function (index, element) {
        if (!$(element).prop('required')) {} else {
          if ($(element).val()) {} else {
            $(element).focus();
            check = false;
          }
        }
      });
      $attributes.find('input:radio, input:checkbox').each(function (index, element) {
        if (att != $(element).attr("name")) {
          att = $(element).attr("name");
          if (!$(element).prop('required')) {
            if ($(element).attr("type") == "checkbox") {
              if ($("[name='" + att + "']:checked").val()) {}
            }
            if ($(element).attr("type") == "radio") {
              if ($("[name='" + att + "']:checked").val()) {}
            }
          } else {
            if ($(element).attr("type") == "checkbox") {
              if ($("[name='" + att + "']:checked").val()) {} else {
                check = false;
              }
            }
            if ($(element).attr("type") == "radio") {
              if ($("[name='" + att + "']:checked").val()) {} else {
                check = false;
              }
            }
          }
        }
      });
      return check;
    };
    var updateProductClonedAttributes = function updateProductClonedAttributes($scope, number) {
      $('label[data-product-attribute-value]', $scope).each(function (index, attribute) {
        var $formLabel = $(attribute),
          $formInput = $formLabel.prev(),
          id = $formLabel.attr('for'),
          newId = id + number;
        $formLabel.attr('for', newId);
        $formInput.attr('id', newId);
      });
      $('label[data-product-attribute-value2]', $scope).each(function (index, attribute) {
        var $formLabel = $(attribute),
          $formInput = $formLabel.next(),
          id = $formLabel.attr('for'),
          newId = id + number;
        $formLabel.attr('for', newId);
        $formInput.attr('id', newId);
      });
      $('input.form-checkbox', $scope).each(function (index, attribute) {
        var $formInput = $(attribute),
          $formLabel = $formInput.next(),
          id = $formLabel.attr('for'),
          newId = id + number;
        $formLabel.attr('for', newId);
        $formInput.attr('id', newId);
      });
      $('select.form-select', $scope).each(function (index, attribute) {
        var $formSelect = $(attribute),
          $formLabel = $formSelect.prev(),
          id = $formLabel.attr('for'),
          newId = id + number;
        $formLabel.attr('for', newId);
        $formSelect.attr('id', newId);
      });
    };
    var setProductVariant = function setProductVariant(item, form) {
      var unsatisfiedRequiredFields = [];
      var options = [];
      $.each($('[data-product-attribute]', form), function (index, value) {
        var optionLabel = value.children[0].innerText;
        var optionTitle = optionLabel.split(':')[0].trim();
        var required = optionLabel.toLowerCase().includes('required');
        var type = value.getAttribute('data-product-attribute');
        if ((type === 'input-file' || type === 'input-text' || type === 'input-number') && value.querySelector('input').value === '' && required) {
          unsatisfiedRequiredFields.push(value);
        }
        if (type === 'textarea' && value.querySelector('textarea').value === '' && required) {
          unsatisfiedRequiredFields.push(value);
        }
        if (type === 'date') {
          var isSatisfied = Array.from(value.querySelectorAll('select')).every(function (select) {
            return select.selectedIndex !== 0;
          });
          if (isSatisfied) {
            var dateString = Array.from(value.querySelectorAll('select')).map(function (x) {
              return x.value;
            }).join('-');
            options.push(optionTitle + ":" + dateString);
            return;
          }
          if (required) {
            unsatisfiedRequiredFields.push(value);
          }
        }
        if (type === 'set-select') {
          var select = value.querySelector('select');
          var selectedIndex = select.selectedIndex;
          if (selectedIndex !== 0) {
            options.push(optionTitle + ":" + select.options[selectedIndex].innerText);
            $(value.children[0]).find('[data-option-value]').text(select.options[selectedIndex].innerText);
            return;
          }
          if (required) {
            unsatisfiedRequiredFields.push(value);
          }
        }
        if (type === 'set-rectangle' || type === 'set-radio' || type === 'swatch' || type === 'input-checkbox' || type === 'product-list') {
          var checked = value.querySelector(':checked');
          if (checked) {
            if (type === 'set-rectangle' || type === 'set-radio' || type === 'product-list') {
              var label = checked.labels[0].innerText;
              if (label) {
                options.push(optionTitle + ":" + label);
                $(value.children[0]).find('[data-option-value]').text(label);
              }
            }
            if (type === 'swatch') {
              var _label = checked.labels[0].children[0];
              if (_label) {
                options.push(optionTitle + ":" + _label.title);
                $(value.children[0]).find('[data-option-value]').text(_label.title);
              }
            }
            if (type === 'input-checkbox') {
              options.push(optionTitle + ":Yes");
            }
            return;
          }
          if (type === 'input-checkbox') {
            options.push(optionTitle + ":No");
          }
          if (required) {
            unsatisfiedRequiredFields.push(value);
          }
        }
      });
      var productVariant = unsatisfiedRequiredFields.length === 0 ? options.sort() : 'unsatisfied';
      if (productVariant) {
        item.find('.product-edit-variant').empty();
        $.each(productVariant, function (index, value) {
          item.find('.product-edit-variant').append('<span>' + productVariant[index].toString().split(':').pop() + '</span>');
        });
      }
    };
    var getViewModel = function getViewModel($scope) {
      return {
        $priceWithTax: $('[data-product-price-with-tax]', $scope),
        $priceWithoutTax: $('[data-product-price-without-tax]', $scope),
        rrpWithTax: {
          $div: $('.rrp-price--withTax', $scope),
          $span: $('[data-product-rrp-with-tax]', $scope)
        },
        rrpWithoutTax: {
          $div: $('.rrp-price--withoutTax', $scope),
          $span: $('[data-product-rrp-price-without-tax]', $scope)
        },
        nonSaleWithTax: {
          $div: $('.non-sale-price--withTax', $scope),
          $span: $('[data-product-non-sale-price-with-tax]', $scope)
        },
        nonSaleWithoutTax: {
          $div: $('.non-sale-price--withoutTax', $scope),
          $span: $('[data-product-non-sale-price-without-tax]', $scope)
        },
        priceSaved: {
          $div: $('.price-section--saving', $scope),
          $span: $('[data-product-price-saved]', $scope)
        },
        priceNowLabel: {
          $span: $('.price-now-label', $scope)
        },
        priceLabel: {
          $span: $('.price-label', $scope)
        },
        $stockLeft: $('[data-stock-left]', $scope),
        $stockLeftWrapper: $('.product-edit-optionsStock', $scope),
        $quantity: {
          $input: $('.product-edit-increment [name=qty\\[\\]]', $scope)
        },
        $image: $('.product-edit-image', $scope)
      };
    };
    var updateProductAttributes = function updateProductAttributes($scope, data) {
      var behavior = data.out_of_stock_behavior;
      var inStockIds = data.in_stock_attributes;
      var outOfStockMessage = " (" + data.out_of_stock_message + ")";
      if (behavior !== 'hide_option' && behavior !== 'label_option') {
        return;
      }
      $('[data-product-attribute-value]', $scope).each(function (i, attribute) {
        var $attribute = $(attribute);
        var attrId = parseInt($attribute.data('productAttributeValue'), 10);
        if (inStockIds.indexOf(attrId) !== -1) {
          enableAttribute($attribute, behavior, outOfStockMessage);
        } else {
          disableAttribute($attribute, behavior, outOfStockMessage);
        }
      });
    };
    var showProductImage = function showProductImage($scope, data) {
      var viewModel = getViewModel($scope);
      if (lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_2___default()(data.image)) {
        var mainImageUrl = _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_3__["default"].tools.imageSrcset.getSrcset(data.image.data, {
          '1x': context.themeSettings.productthumb_size
        });
        var mainImageSrcset = _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_3__["default"].tools.imageSrcset.getSrcset(data.image.data);
        viewModel.$image.find('img').attr({
          'srcset': mainImageUrl,
          'data-srcset': mainImageSrcset
        });
      }
    };
    var updateDefaultAttributesForOOS = function updateDefaultAttributesForOOS($scope, data) {
      var viewModel = getViewModel($scope);
      if (!data.purchasable || !data.instock) {
        $scope.removeClass('is-visible').addClass('is-hidden');
        viewModel.$quantity.$input.prop('disabled', true);
      } else {
        $scope.removeClass('is-hidden').addClass('is-visible');
        viewModel.$quantity.$input.prop('disabled', false);
      }
    };
    var showMessageBox = function showMessageBox($scope, message) {
      var $messageBox = $('.product-edit-message', $scope);
      if (message) {
        $('.alertBox-message', $messageBox).text(message);
        $messageBox.show();
      } else {
        $messageBox.hide();
      }
    };
    var clearPricingNotFound = function clearPricingNotFound(viewModel) {
      viewModel.rrpWithTax.$div.hide();
      viewModel.rrpWithoutTax.$div.hide();
      viewModel.nonSaleWithTax.$div.hide();
      viewModel.nonSaleWithoutTax.$div.hide();
      viewModel.priceSaved.$div.hide();
      viewModel.priceNowLabel.$span.hide();
      viewModel.priceLabel.$span.hide();
    };
    var updatePriceView = function updatePriceView(viewModel, price) {
      clearPricingNotFound(viewModel);
      if (price.with_tax) {
        viewModel.priceLabel.$span.show();
        viewModel.$priceWithTax.html(price.with_tax.formatted);
      }
      if (price.without_tax) {
        viewModel.priceLabel.$span.show();
        viewModel.$priceWithoutTax.html(price.without_tax.formatted);
      }
      if (price.rrp_with_tax) {
        viewModel.rrpWithTax.$div.show();
        viewModel.rrpWithTax.$span.html(price.rrp_with_tax.formatted);
      }
      if (price.rrp_without_tax) {
        viewModel.rrpWithoutTax.$div.show();
        viewModel.rrpWithoutTax.$span.html(price.rrp_without_tax.formatted);
      }
      if (price.saved) {
        viewModel.priceSaved.$div.show();
        viewModel.priceSaved.$span.html(price.saved.formatted);
      }
      if (price.non_sale_price_with_tax) {
        viewModel.priceLabel.$span.hide();
        viewModel.nonSaleWithTax.$div.show();
        viewModel.priceNowLabel.$span.show();
        viewModel.nonSaleWithTax.$span.html(price.non_sale_price_with_tax.formatted);
      }
      if (price.non_sale_price_without_tax) {
        viewModel.priceLabel.$span.hide();
        viewModel.nonSaleWithoutTax.$div.show();
        viewModel.priceNowLabel.$span.show();
        viewModel.nonSaleWithoutTax.$span.html(price.non_sale_price_without_tax.formatted);
      }
    };
    var updateView = function updateView($scope, data, content) {
      if (content === void 0) {
        content = null;
      }
      var viewModel = getViewModel($scope);
      if (lodash_isNumber__WEBPACK_IMPORTED_MODULE_1___default()(data.stock)) {
        if (data.stock <= parseInt(context.themeSettings.halo_stock_level_limit) && data.stock > 0) {
          viewModel.$stockLeftWrapper.removeClass('u-hiddenVisually');
          viewModel.$stockLeft.text(data.stock);
        } else {
          viewModel.$stockLeftWrapper.addClass('u-hiddenVisually');
        }
        viewModel.$quantity.$input.attr('data-stock', data.stock);
      } else {
        viewModel.$quantity.$input.removeAttr('data-stock');
      }
      showMessageBox($scope, data.stock_message || data.purchasing_message);
      if (lodash_isObject__WEBPACK_IMPORTED_MODULE_0___default()(data.price)) {
        updatePriceView(viewModel, data.price);
      }
      updateDefaultAttributesForOOS($scope, data);
      showProductImage($scope, data);
    };
    var disableAttribute = function disableAttribute($attribute, behavior, outOfStockMessage) {
      if (getAttributeType($attribute) === 'set-select') {
        return disableSelectOptionAttribute($attribute, behavior, outOfStockMessage);
      }
      if (behavior === 'hide_option') {
        $attribute.hide();
      } else {
        $attribute.addClass('unavailable');
      }
    };
    var disableSelectOptionAttribute = function disableSelectOptionAttribute($attribute, behavior, outOfStockMessage) {
      var $select = $attribute.parent();
      if (behavior === 'hide_option') {
        $attribute.toggleOption(false);
        if ($select.val() === $attribute.attr('value')) {
          $select[0].selectedIndex = 0;
        }
      } else {
        $attribute.attr('disabled', 'disabled');
        $attribute.html($attribute.html().replace(outOfStockMessage, '') + outOfStockMessage);
      }
    };
    var enableAttribute = function enableAttribute($attribute, behavior, outOfStockMessage) {
      if (getAttributeType($attribute) === 'set-select') {
        return enableSelectOptionAttribute($attribute, behavior, outOfStockMessage);
      }
      if (behavior === 'hide_option') {
        $attribute.show();
      } else {
        $attribute.removeClass('unavailable');
      }
    };
    var enableSelectOptionAttribute = function enableSelectOptionAttribute($attribute, behavior, outOfStockMessage) {
      if (behavior === 'hide_option') {
        $attribute.toggleOption(true);
      } else {
        $attribute.prop('disabled', false);
        $attribute.html($attribute.html().replace(outOfStockMessage, ''));
      }
    };
    var getAttributeType = function getAttributeType($attribute) {
      var $parent = $attribute.closest('[data-product-attribute]');
      return $parent ? $parent.data('productAttribute') : null;
    };
    var updateCartContent = function updateCartContent() {
      if (!$('body').hasClass('page-type-cart')) {
        var loadingClass = 'is-loading';
        var $cartDropdown = $('#cart-preview-dropdown');
        var $cartLoading = $('<div class="loadingOverlay"></div>');
        var $body = $('body');
        var options = {
          template: 'common/cart-preview'
        };
        $cartDropdown.addClass(loadingClass).prepend($cartLoading);
        $cartLoading.show();
        _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_3__["default"].api.cart.getContent(options, function (err, response) {
          $cartDropdown.removeClass(loadingClass).html(response);
          $cartLoading.hide();
          var quantity = $(response).find('[data-cart-quantity]').data('cartQuantity') || $('[data-cart-quantity]').data('cartQuantity') || 0;
          $body.trigger('cart-quantity-update', quantity);
          Object(_halothemes_haloCalculateFreeShipping__WEBPACK_IMPORTED_MODULE_9__["default"])(context);
        });
      } else {
        refreshContent();
        Object(_halothemes_haloCalculateFreeShipping__WEBPACK_IMPORTED_MODULE_9__["default"])(context);
      }
    };
    var refreshContent = function refreshContent(remove) {
      var $cartItemsRows = $('[data-item-row]', $cartContent);
      var $cartPageTitle = $('[data-cart-page-title]');
      var options = {
        template: {
          content: 'cart/content',
          totals: 'cart/totals',
          pageTitle: 'cart/page-title',
          statusMessages: 'cart/status-messages'
        }
      };
      $overlay.show();

      // Remove last item from cart? Reload
      if (remove && $cartItemsRows.length === 1) {
        return window.location.reload();
      }
      _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_3__["default"].api.cart.getContent(options, function (err, response) {
        $cartContent.html(response.content);
        $cartTotals.html(response.totals);
        $cartMessages.html(response.statusMessages);
        $cartPageTitle.replaceWith(response.pageTitle);
        bindEvents();
        $overlay.hide();
        var quantity = $('[data-cart-quantity]', $cartContent).data('cartQuantity') || 0;
        $('body').trigger('cart-quantity-update', quantity);
      });
    };
    var cartUpdate = function cartUpdate($target) {
      var itemId = $target.data('cartItemid');
      var $el = $("#qty-" + itemId);
      var oldQty = parseInt($el.val(), 10);
      var maxQty = parseInt($el.data('quantityMax'), 10);
      var minQty = parseInt($el.data('quantityMin'), 10);
      var minError = $el.data('quantityMinError');
      var maxError = $el.data('quantityMaxError');
      var newQty = $target.data('action') === 'inc' ? oldQty + 1 : oldQty - 1;
      // Does not quality for min/max quantity
      if (newQty < minQty) {
        return _global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__["default"].fire({
          text: minError,
          icon: 'error'
        });
      } else if (maxQty > 0 && newQty > maxQty) {
        return _global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__["default"].fire({
          text: maxError,
          icon: 'error'
        });
      }
      $overlay.show();
      _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_3__["default"].api.cart.itemUpdate(itemId, newQty, function (err, response) {
        $overlay.hide();
        if (response.data.status === 'succeed') {
          // if the quantity is changed "1" from "0", we have to remove the row.
          var remove = newQty === 0;
          refreshContent(remove);
        } else {
          $el.val(oldQty);
          _global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__["default"].fire({
            text: response.data.errors.join('\n'),
            icon: 'error'
          });
        }
      });
    };
    var cartUpdateQtyTextChange = function cartUpdateQtyTextChange($target, preVal) {
      if (preVal === void 0) {
        preVal = null;
      }
      var itemId = $target.data('cartItemid');
      var $el = $("#qty-" + itemId);
      var maxQty = parseInt($el.data('quantityMax'), 10);
      var minQty = parseInt($el.data('quantityMin'), 10);
      var oldQty = preVal !== null ? preVal : minQty;
      var minError = $el.data('quantityMinError');
      var maxError = $el.data('quantityMaxError');
      var newQty = parseInt(Number($el.val()), 10);
      var invalidEntry;

      // Does not quality for min/max quantity
      if (!newQty) {
        invalidEntry = $el.val();
        $el.val(oldQty);
        return _global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__["default"].fire({
          text: invalidEntry + " is not a valid entry",
          icon: 'error'
        });
      } else if (newQty < minQty) {
        $el.val(oldQty);
        return _global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__["default"].fire({
          text: minError,
          icon: 'error'
        });
      } else if (maxQty > 0 && newQty > maxQty) {
        $el.val(oldQty);
        return _global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__["default"].fire({
          text: maxError,
          icon: 'error'
        });
      }
      $overlay.show();
      _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_3__["default"].api.cart.itemUpdate(itemId, newQty, function (err, response) {
        $overlay.hide();
        if (response.data.status === 'succeed') {
          // if the quantity is changed "1" from "0", we have to remove the row.
          var remove = newQty === 0;
          refreshContent(remove);
        } else {
          $el.val(oldQty);
          _global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__["default"].fire({
            text: response.data.errors.join('\n'),
            icon: 'error'
          });
        }
      });
    };
    var cartRemoveItem = function cartRemoveItem(itemId) {
      $overlay.show();
      _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_3__["default"].api.cart.itemRemove(itemId, function (err, response) {
        if (response.data.status === 'succeed') {
          refreshContent(true);
        } else {
          _global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__["default"].fire({
            text: response.data.errors.join('\n'),
            icon: 'error'
          });
        }
      });
    };
    var bindCartEvents = function bindCartEvents() {
      // const debounceTimeout = 400;
      // const cartUpdate = _.bind(_.debounce(this.cartUpdate, debounceTimeout), this);
      // const cartUpdateQtyTextChange = _.bind(_.debounce(this.cartUpdateQtyTextChange, debounceTimeout), this);
      // const cartRemoveItem = _.bind(_.debounce(this.cartRemoveItem, debounceTimeout), this);
      var preVal;
      $('[data-cart-update]', $cartContent).on('click', function (event) {
        var $target = $(event.currentTarget);
        event.preventDefault();
        cartUpdate($target);
      });
      $('[data-cart-update]', $cartContent).on('click', function (event) {
        var $target = $(event.currentTarget);
        event.preventDefault();
        cartUpdate($target);
      });
      $('.cart-item-qty-input', $cartContent).on('focus', function (event) {
        preVal = $(event.currentTarget).val();
      }).change(function (event) {
        var $target = $(event.currentTarget);
        event.preventDefault();
        cartUpdateQtyTextChange($target, preVal);
      });
      $('.cart-remove', $cartContent).on('click', function (event) {
        var itemId = $(event.currentTarget).data('cartItemid');
        var string = $(event.currentTarget).data('confirmDelete');
        _global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__["default"].fire({
          text: string,
          icon: 'warning',
          showCancelButton: true
        }).then(function (result) {
          if (result.value) {
            cartRemoveItem(itemId);
          }
        });
        event.preventDefault();
      });
    };
    var bindPromoCodeEvents = function bindPromoCodeEvents() {
      var $couponContainer = $('.coupon-code');
      var $couponForm = $('.coupon-form');
      var $codeInput = $('[name="couponcode"]', $couponForm);
      $('.coupon-code-add').on('click', function (event) {
        event.preventDefault();
        $(event.currentTarget).hide();
        $couponContainer.show();
        $('.coupon-code-cancel').show();
        $codeInput.trigger('focus');
      });
      $('.coupon-code-cancel').on('click', function (event) {
        event.preventDefault();
        $couponContainer.hide();
        $('.coupon-code-cancel').hide();
        $('.coupon-code-add').show();
      });
      $couponForm.on('submit', function (event) {
        var code = $codeInput.val();
        event.preventDefault();
        if (!code) {
          return Object(_global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__["default"])({
            text: $codeInput.data('error'),
            type: 'error'
          });
        }
        _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_3__["default"].api.cart.applyCode(code, function (err, response) {
          if (response.data.status === 'success') {
            refreshContent();
          } else {
            Object(_global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__["default"])({
              text: response.data.errors.join('\n'),
              type: 'error'
            });
          }
        });
      });
    };
    var bindGiftCertificateEvents = function bindGiftCertificateEvents() {
      var $certContainer = $('.gift-certificate-code');
      var $certForm = $('.cart-gift-certificate-form');
      var $certInput = $('[name="certcode"]', $certForm);
      $('.gift-certificate-add').on('click', function (event) {
        event.preventDefault();
        $(event.currentTarget).toggle();
        $certContainer.toggle();
        $('.gift-certificate-cancel').toggle();
      });
      $('.gift-certificate-cancel').on('click', function (event) {
        event.preventDefault();
        $certContainer.toggle();
        $('.gift-certificate-add').toggle();
        $('.gift-certificate-cancel').toggle();
      });
      $certForm.on('submit', function (event) {
        var code = $certInput.val();
        event.preventDefault();
        if (!Object(_common_gift_certificate_validator__WEBPACK_IMPORTED_MODULE_7__["default"])(code)) {
          return Object(_global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__["default"])({
            text: $certInput.data('error'),
            type: 'error'
          });
        }
        _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_3__["default"].api.cart.applyGiftCertificate(code, function (err, resp) {
          if (resp.data.status === 'success') {
            refreshContent();
          } else {
            Object(_global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__["default"])({
              text: resp.data.errors.join('\n'),
              type: 'error'
            });
          }
        });
      });
    };
    var bindGiftWrappingEvents = function bindGiftWrappingEvents() {
      var modal = Object(_global_modal__WEBPACK_IMPORTED_MODULE_4__["defaultModal"])();
      $('[data-item-giftwrap]').on('click', function (event) {
        var itemId = $(event.currentTarget).data('itemGiftwrap');
        var options = {
          template: 'cart/modals/gift-wrapping-form'
        };
        event.preventDefault();
        modal.open();
        _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_3__["default"].api.cart.getItemGiftWrappingOptions(itemId, options, function (err, response) {
          modal.updateContent(response.content);
          bindGiftWrappingForm();
        });
      });
    };
    var bindGiftWrappingForm = function bindGiftWrappingForm() {
      $('.giftWrapping-select').on('change', function (event) {
        var $select = $(event.currentTarget);
        var id = $select.val();
        var index = $select.data('index');
        if (!id) {
          return;
        }
        var allowMessage = $select.find("option[value=" + id + "]").data('allowMessage');
        $(".giftWrapping-image-" + index).hide();
        $("#giftWrapping-image-" + index + "-" + id).show();
        if (allowMessage) {
          $("#giftWrapping-message-" + index).show();
        } else {
          $("#giftWrapping-message-" + index).hide();
        }
      });
      $('.giftWrapping-select').trigger('change');
      function toggleViews() {
        var value = $('input:radio[name ="giftwraptype"]:checked').val();
        var $singleForm = $('.giftWrapping-single');
        var $multiForm = $('.giftWrapping-multiple');
        if (value === 'same') {
          $singleForm.show();
          $multiForm.hide();
        } else {
          $singleForm.hide();
          $multiForm.show();
        }
      }
      $('[name="giftwraptype"]').on('click', toggleViews);
      toggleViews();
    };
    var bindEvents = function bindEvents() {
      bindCartEvents();
      bindPromoCodeEvents();
      bindGiftWrappingEvents();
      bindGiftCertificateEvents();

      // initiate shipping estimator module
      var shippingEstimator = new _cart_shipping_estimator__WEBPACK_IMPORTED_MODULE_6__["default"]($('[data-shipping-estimator]'));
    };
    $(document).on('click', '[data-cart-edit-id]', function (event) {
      event.preventDefault();
      var $target = $(event.currentTarget),
        productId = $target.data('cart-edit-id'),
        itemId = $target.data('cartItemid'),
        $qty = $target.data('cart-edit-quantity');
      var modal = Object(_global_modal__WEBPACK_IMPORTED_MODULE_4__["defaultModal"])(),
        options = {
          template: 'cart/modals/configure-product-2'
        },
        options2 = {
          template: 'cart/modals/configure-product-3'
        };
      $('body').addClass('halo-cart--editOptions');
      modal.$modal.removeClass().addClass('modal modal--editOptions');
      modal.open({
        size: 'medium'
      });
      _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_3__["default"].api.productAttributes.configureInCart(itemId, options2, function (err2, response2) {
        _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_3__["default"].api.product.getById(productId, options, function (err, response) {
          modal.updateContent(response);
          var $firstItem = modal.$content.find('.product-edit-itemFirst'),
            $form = $firstItem.find('.form'),
            $formQty = $firstItem.find('.product-edit-increment');
          $firstItem.attr('data-product-edit-item-id', itemId);
          $form.find('.product-edit-option .cart-edit-row').prepend(response2.content);
          $form.find('[name=qty\\[\\]]').attr('value', $qty);
          $formQty.find('.form-input').attr({
            'cart-itemid': itemId,
            'id': 'editqty-' + itemId,
            'value': $qty
          });
          $formQty.find('.form-label').attr({
            'for': 'editqty-' + itemId
          });
          _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_3__["default"].api.productAttributes.optionChange(productId, $form.serialize(), 'products/bulk-discount-rates', function (err, response) {
            var attributesData = response.data || {};
            var attributesContent = response.content || {};
            updateProductAttributes($firstItem, attributesData);
            updateView($firstItem, attributesData, attributesContent);
          });
          setProductVariant($firstItem, $form);
        });
      });
    });
    $(document).on('change', '[data-product-edit-item-id] .form-input[cart-itemid]', function (event) {
      var $target = $(event.currentTarget);
      var preVal = $target.data('preval');
      event.preventDefault();
      listenQuantityChangeUpdate($target, preVal);
    });
    $(document).on('change', '[data-product-edit-option-change]', function (event) {
      var $changedOption = $(event.target);
      var $item = $changedOption.parents('.product-edit-item');
      var $form = $changedOption.parents('form');
      var productId = $('[name="product_id"]', $form).val();
      _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_3__["default"].api.productAttributes.optionChange(productId, $form.serialize(), 'products/bulk-discount-rates', function (err, response) {
        var attributesData = response.data || {};
        var attributesContent = response.content || {};
        updateProductAttributes($item, attributesData);
        updateView($item, attributesData, attributesContent);
      });
      setProductVariant($item, $form);
    });
    $(document).on('click', '[data-edit-cart-add-more]', function (event) {
      event.preventDefault();
      var count = parseInt($('.modal--editOptions [data-count]').attr('data-count')),
        product = $('.modal--editOptions .product-edit-itemFirst').clone().removeClass('product-edit-itemFirst');
      product.appendTo('.modal--editOptions .product-edit-wrapper');
      updateProductClonedAttributes(product, count);
      count = count + 1;
      $('.modal--editOptions [data-count]').attr('data-count', count);
    });
    $(document).on('click', '[data-edit-cart-remove]', function (event) {
      event.preventDefault();
      var product = $(event.currentTarget).parents('.product-edit-item');
      if (product.hasClass('product-edit-itemFirst')) {
        var itemId = product.data('product-edit-item-id');
        _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_3__["default"].api.cart.itemRemove(itemId, function (err, response) {
          if (response.data.status === 'succeed') {
            var modal = Object(_global_modal__WEBPACK_IMPORTED_MODULE_4__["defaultModal"])();
            modal.close();
            updateCartContent();
          } else {
            _global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__["default"].fire({
              text: response.data.errors.join('\n'),
              icon: 'error'
            });
          }
        });
      } else {
        product.remove();
      }
    });
    $(document).on('click', '[data-edit-cart-add-to-cart]', function (event) {
      var $product = $('.modal--editOptions .product-edit-item.is-visible'),
        $form = $product.find('.form'),
        itemId = $('.modal--editOptions .product-edit-itemFirst.is-visible').data('product-edit-item-id'),
        arrPro = new Array(),
        check = false;
      $product.each(function (index, element) {
        arrPro.push(index);
      });
      if (arrPro.length > 0) {
        check = checkProduct($form, arrPro);
      }
      if (check) {
        if (arrPro.length > 0 && typeof itemId !== 'undefined') {
          _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_3__["default"].api.cart.itemRemove(itemId, function (err, response) {
            if (response.data.status === 'succeed') {
              var originalBtnVal = $('[data-edit-cart-add-to-cart]').text();
              var waitMessage = $('[data-edit-cart-add-to-cart]').data('waitMessage');
              $('[data-edit-cart-add-to-cart]').addClass('loading');
              $('[data-edit-cart-add-to-cart]').text(waitMessage);
              addToCart($form, 0, arrPro);
            } else {
              _global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__["default"].fire({
                text: response.data.errors.join('\n'),
                icon: 'error'
              });
              updateCartContent();
            }
          });
        }
      } else {
        var errorMessage = 'Please make sure all options have been filled in.';
        if (errorMessage) {
          var tmp = document.createElement('DIV');
          tmp.innerHTML = errorMessage;
          return Object(_global_modal__WEBPACK_IMPORTED_MODULE_4__["showAlertModal"])(tmp.textContent || tmp.innerText);
        }
      }
      event.preventDefault();
    });
    $(document).on('click', '[data-cart-edit-item-quantity] button', function (event) {
      event.preventDefault();
      var $target = $(event.currentTarget);
      var itemId = $target.data('cart-itemid');
      var $el = $target.siblings('.form-input--incrementTotal');
      var $form = $target.parents('.product-edit-item').find('.form');
      var maxQty = parseInt($el.data('quantityMax'), 10);
      var minQty = parseInt($el.data('quantityMin'), 10);
      var oldQty = parseInt($el.val(), 10);
      var minError = $el.data('quantityMinError');
      var maxError = $el.data('quantityMaxError');
      var newQty = $target.data('action') === 'inc' ? oldQty + 1 : oldQty - 1;
      var stock = $el.data('stock');
      var proTitle = $('.product-edit-title').html();
      var invalidEntry;

      // Does not quality for min/max quantity
      if (!newQty) {
        invalidEntry = newQty;
        $el.val(oldQty);
        return _global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__["default"].fire({
          text: invalidEntry + " is not a valid entry",
          icon: 'error'
        });
      } else if (newQty < minQty) {
        $el.val(oldQty);
        return _global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__["default"].fire({
          text: minError,
          icon: 'error'
        });
      } else if (maxQty > 0 && newQty > maxQty) {
        $el.val(oldQty);
        return _global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__["default"].fire({
          text: maxError,
          icon: 'error'
        });
      } else if (newQty > stock) {
        $el.val(oldQty);
        return _global_sweet_alert__WEBPACK_IMPORTED_MODULE_5__["default"].fire({
          text: 'We don\'t have enough stock on hand for the quantity you selected. Please try again.',
          icon: 'error'
        });
      } else {
        $el.val(newQty);
        $form.find('[name=qty\\[\\]]').attr('value', newQty);
      }
    });
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/halothemes/haloRecentlyBoughtPopup.js":
/*!***************************************************************!*\
  !*** ./assets/js/theme/halothemes/haloRecentlyBoughtPopup.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var jquery_cookie__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jquery.cookie */ "./node_modules/jquery.cookie/jquery.cookie.js");
/* harmony import */ var jquery_cookie__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jquery_cookie__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bigcommerce/stencil-utils */ "./node_modules/@bigcommerce/stencil-utils/src/main.js");



var fetch = __webpack_require__(/*! node-fetch */ "./node_modules/node-fetch/browser.js");
/* harmony default export */ __webpack_exports__["default"] = (function (context) {
  var token = context.token;
  function recentlyBought() {
    var productIDs = context.themeSettings.recently_bought_productID,
      hoursItems = context.themeSettings.recently_bought_hours,
      listHours = JSON.parse("[" + hoursItems + "]"),
      listIDs = JSON.parse("[" + productIDs + "]"),
      text_info = context.themeSettings.recently_bought_text_info,
      text_name = context.themeSettings.recently_bought_text_name,
      changeSlides = 1000 * Number(context.themeSettings.recently_bought_changeSlides);
    var location1 = context.themeSettings.recently_bought_location1,
      location2 = context.themeSettings.recently_bought_location2,
      location3 = context.themeSettings.recently_bought_location3,
      location4 = context.themeSettings.recently_bought_location4,
      location5 = context.themeSettings.recently_bought_location5,
      location6 = context.themeSettings.recently_bought_location6,
      location7 = context.themeSettings.recently_bought_location7,
      location8 = context.themeSettings.recently_bought_location8;
    var ar1 = location1.split(','),
      ar2 = location2.split(','),
      ar3 = location3.split(','),
      ar4 = location4.split(','),
      ar5 = location5.split(','),
      ar6 = location6.split(','),
      ar7 = location7.split(','),
      ar8 = location8.split(',');
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".halo-popup").prepend('<div class="hide" id="recently_bought_list"></div>');
    var listIDs_length = listIDs.length;
    if (listIDs_length) {
      getProductAndSiteInfo(listIDs).then(function (data) {
        setInterval(function () {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()('.halo-recently-bought').hide();
          if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('body.page-type-product').length && jquery__WEBPACK_IMPORTED_MODULE_0___default()('#sticky_addtocart').length) {
            var marBot;
            if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('#sticky_addtocart.show_sticky').length) {
              marBot = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#sticky_addtocart').outerHeight();
              if (window.innerWidth > 550) {
                marBot = marBot + 15;
              }
              jquery__WEBPACK_IMPORTED_MODULE_0___default()('#recently_bought_list').css('margin-bottom', marBot);
            } else {
              if (window.innerWidth > 1024) {
                marBot = 30;
              } else if (window.innerWidth > 550) {
                marBot = 15;
              } else {
                marBot = 0;
              }
              jquery__WEBPACK_IMPORTED_MODULE_0___default()('#recently_bought_list').css('margin-bottom', marBot);
            }
          }
          var item = Math.floor(Math.random() * listIDs.length),
            list = [];
          list.push(listIDs[item].toString());
          var locationList = Array(ar1, ar2, ar3, ar4, ar5, ar6, ar7, ar8),
            locationItem = Math.floor(Math.random() * locationList.length),
            location = locationList[locationItem],
            hour_item = Math.floor(Math.random() * listHours.length),
            hours = listHours[hour_item];
          if (jquery__WEBPACK_IMPORTED_MODULE_0___default.a.cookie('recently_bought_notification') == 'closed') {
            jquery__WEBPACK_IMPORTED_MODULE_0___default()('#recently_bought_list').remove();
          }
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '.halo-recently-bought [data-close-recently-bought]', function (event) {
            event.preventDefault();
            jquery__WEBPACK_IMPORTED_MODULE_0___default()('#recently_bought_list').remove();
            jquery__WEBPACK_IMPORTED_MODULE_0___default.a.cookie('recently_bought_notification', 'closed', {
              expires: 1,
              path: '/'
            });
          });
          if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('#RB_' + listIDs[item]).length) {
            jquery__WEBPACK_IMPORTED_MODULE_0___default()('#RB_' + listIDs[item]).show();
            jquery__WEBPACK_IMPORTED_MODULE_0___default()('#RB_' + listIDs[item]).css('animation-name', 'fadeInUp');
          } else {
            renderProduct(data.site.products.edges[item], text_name, hours, text_info, location);
          }
          setTimeout(function () {
            if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('#RB_' + listIDs[item]).length) {
              jquery__WEBPACK_IMPORTED_MODULE_0___default()('#RB_' + listIDs[item]).hide();
              jquery__WEBPACK_IMPORTED_MODULE_0___default()('#RB_' + listIDs[item]).css('animation-name', '');
            }
          }, changeSlides - 1000);
        }, changeSlides);
      });
    }
  }
  function getProductAndSiteInfo(arr) {
    return fetch('/graphql', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer ' + token
      },
      body: JSON.stringify({
        query: "\n            query MyQuery {\n                site {\n                    products (entityIds: [" + arr + "]) {\n                      edges {\n                        product: node {\n                          ...ProductFields\n                          }\n                        }\n                    }\n                }\n            }\n            fragment ProductFields on Product {\n                id\n                entityId\n                name\n                path\n                defaultImage {\n                    img320px: url(width: 320)\n                    altText\n                }\n            }\n        "
      })
    }).then(function (res) {
      return res.json();
    }).then(function (res) {
      return res.data;
    });
  }
  function renderProduct(product, text, hours, info, customer) {
    if (product != undefined) {
      var item = product.product;
      if (item != undefined) {
        var html = '<div id="RB_' + item.entityId + '" class="halo-recently-bought">\
                    <a href="#" data-close-recently-bought>&#215;</a>\
                    <div class="recently-bought-inner">\
                        <a class="product-image" href="' + item.path + '"><img class="image" data-sizes="auto" src="' + item.defaultImage.img320px + '" alt="' + item.defaultImage.altText + '" title="' + item.defaultImage.altText + '"></a>\
                        <div class="product-info">\
                            <p class="text-wrap"><span class="text">' + text + '</span><span class="product-name"><a href="' + item.path + '" style="-webkit-box-orient: vertical;"><span>' + item.name + '</span></a></span></p>\
                             <div class="location-info">' + hours + ' ' + info + ' ' + customer + '</div>\
                        </div>\
                    </div>\
                </div>';
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('#recently_bought_list').append(html);
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('#RB_' + item.entityId).css('animation-name', 'fadeInUp');
      }
    }
  }
  if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() > 1024) {
    if (context.themeSettings.haloRecentlyBought == true) {
      recentlyBought();
    }
  } else {
    if (context.themeSettings.haloRecentlyBought == true && context.themeSettings.haloRecentlyBought_mobile == true) {
      recentlyBought();
    }
  }
});

/***/ }),

/***/ "./assets/js/theme/halothemes/haloRecentlyViewedProducts.js":
/*!******************************************************************!*\
  !*** ./assets/js/theme/halothemes/haloRecentlyViewedProducts.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($, jQuery) {/* harmony import */ var _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bigcommerce/stencil-utils */ "./node_modules/@bigcommerce/stencil-utils/src/main.js");
/* harmony import */ var slick_carousel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! slick-carousel */ "./node_modules/slick-carousel/slick/slick.min.js");
/* harmony import */ var slick_carousel__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(slick_carousel__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _global_sweet_alert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../global/sweet-alert */ "./assets/js/theme/global/sweet-alert.js");
/* harmony import */ var _global_cart_preview__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../global/cart-preview */ "./assets/js/theme/global/cart-preview.js");
/* harmony import */ var _cart__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../cart */ "./assets/js/theme/cart.js");





/* harmony default export */ __webpack_exports__["default"] = (function (context) {
  if (location.pathname == "/cart.php") {
    var cart_page = new _cart__WEBPACK_IMPORTED_MODULE_4__["default"](context);
    cart_page.onReady();
  }
  function setCookie(cname, cvalue, exdays) {
    var d = new Date();
    d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);
    var expires = 'expires=' + d.toUTCString();
    document.cookie = cname + '=' + cvalue + ';' + expires + ';path=/';
  }
  function getCookie(cname) {
    var name = cname + '=';
    var ca = document.cookie.split(';');
    for (var i = 0; i < ca.length; i++) {
      var c = ca[i];
      while (c.charAt(0) === ' ') {
        c = c.substring(1);
      }
      if (c.indexOf(name) === 0) {
        return c.substring(name.length, c.length);
      }
    }
    return '';
  }
  var deleteCookie = function deleteCookie(name) {
    document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';
  };
  var BC_Products = function () {
    var e = {
      howManyToShow: 3,
      howManyToStoreInMemory: 10,
      wrapperId: "recently-viewed-products",
      onComplete: null
    };
    var t = [];
    var n = null;
    var r = null;
    var i = 0;
    var s = {
      configuration: {
        expires: context.themeSettings.recently_viewed_products_expires_date,
        path: "/",
        domain: window.location.hostname
      },
      name: "bigcommerce_recently_viewed",
      write: function write(e) {
        setCookie(this.name, e.join(" "), this.configuration.expires);
      },
      read: function read() {
        var e = [];
        var t = getCookie(this.name);
        if (t !== null && t != undefined) {
          e = t.split(" ");
        }
        return e;
      },
      destroy: function destroy() {
        setCookie(this.name, null, this.configuration.expires);
      },
      remove: function remove(e) {
        var t = this.read();
        var n = $.inArray(e, t);
        if (n !== -1) {
          t.splice(n, 1);
          this.write(t);
        }
      }
    };
    var o = function o() {
      for (var j = 0; j < e.howManyToShow; j++) {
        var productId = t[j];
        jQuery('#recently-viewed-products-list-tmp').find('.item[data-id="product-' + productId + '"]').appendTo(n);
      }
      jQuery('#recently-viewed-products-list-tmp').remove();
      n.show();
      if (e.onComplete) {
        try {
          e.onComplete();
        } catch (t) {}
      }
    };
    var u = function u() {
      var tmp = jQuery('#recently-viewed-products-list-tmp');
      for (var j = 0; j < e.howManyToShow; j++) {
        var productId = t[j];
        _bigcommerce_stencil_utils__WEBPACK_IMPORTED_MODULE_0__["default"].api.product.getById(productId, {
          template: 'halothemes/recently-viewed-product-tmp'
        }, function (err, response) {
          if (err) {
            return false;
          }
          $(response).appendTo(tmp);
          i++;
          if (i >= e.howManyToShow) {
            o();
          }
        });
      }
    };
    return {
      resizeImage: function resizeImage(e, t) {
        if (t == null) {
          return e;
        }
        if (t == "master") {
          return e.replace(/http(s)?:/, "");
        }
        var n = e.match(/\.(jpg|jpeg|gif|png|bmp|bitmap|tiff|tif)(\?v=\d+)?/i);
        if (n != null && n != undefined) {
          var r = e.split(n[0]);
          var i = n[0];
          return (r[0] + "_" + t + i).replace(/http(s)?:/, "");
        } else {
          return null;
        }
      },
      showRecentlyViewed: function showRecentlyViewed(i) {
        var i = i || {};
        jQuery.extend(e, i);
        t = s.read();
        n = jQuery("#" + e.wrapperId);
        e.howManyToShow = Math.min(t.length, e.howManyToShow);
        if (e.howManyToShow && n.length) {
          u();
        }
      },
      getConfig: function getConfig() {
        return e;
      },
      clearList: function clearList() {
        s.destroy();
      },
      recordRecentlyViewed: function recordRecentlyViewed(t) {
        var t = t || {};
        var product_id = $('.productView').find('form[data-cart-item-add] [name="product_id"]').val();
        jQuery.extend(e, t);
        var n = s.read();
        if (product_id) {
          var r = product_id;
          var i = jQuery.inArray(r, n);
          if (i === -1) {
            n.unshift(r);
            n = n.splice(0, e.howManyToStoreInMemory);
          } else {
            n.splice(i, 1);
            n.unshift(r);
          }
          s.write(n);
        }
      }
    };
  }();
  $(document).ready(function () {
    var view = true;
    if (context.themeSettings.recently_viewed_products_layout != 'default') {
      view = false;
    }
    BC_Products.recordRecentlyViewed();
    var cookieValue = getCookie("bigcommerce_recently_viewed");
    if (!(cookieValue !== null && cookieValue !== undefined && cookieValue !== "")) {
      $('.recently-viewed-products-sidebar').find(".no-products").show();
      $('#recently-viewed-products-list').css("padding", "0");
      if (window.innerWidth > 767 && view) {
        $(".lst-seen-widget").addClass("is-show-widget");
        $(".wrap-icons").removeClass("collapsed");
      } else {
        $(".wrap-icons").addClass("collapsed");
      }
    } else {
      BC_Products.showRecentlyViewed({
        howManyToShow: context.themeSettings.recently_viewed_products_count,
        howManyToStoreInMemory: context.themeSettings.recently_viewed_products_count,
        wrapperId: 'recently-viewed-products-list',
        onComplete: function onComplete() {
          //start
          var recentlyViewBlock = $('.recently-viewed-products-sidebar');
          var recentlyGrid = recentlyViewBlock.find('.products-grid');
          var productGrid = recentlyGrid.children();
          recentlyGrid.find(".no-products").remove();
          $('.recently-viewed-products-sidebar .in-content .title').removeClass('no-product');
          if (productGrid.length) {
            if (window.innerWidth > 767 && view) {
              $(".lst-seen-widget").addClass("is-show-widget");
              $(".wrap-icons").removeClass("collapsed");
            } else {
              $(".wrap-icons").addClass("collapsed");
            }
            if (recentlyViewBlock.is(':visible')) {
              if (!recentlyGrid.hasClass('slick-initialized')) {
                var slidesToShow = 4;
                var maxheight = 280;
                if (window.innerWidth > 1900) {
                  if (productGrid.length <= 4) {
                    slidesToShow = productGrid.length - 1;
                  } else {
                    if ($('#consent-manager-update-banner').length || $('#consent-manager').length) {
                      slidesToShow = slidesToShow - 1;
                      maxheight = 210;
                    }
                  }
                } else {
                  if (window.innerWidth >= 1280) {
                    slidesToShow = 3;
                    maxheight = 210;
                    if (productGrid.length <= 3) {
                      slidesToShow = productGrid.length - 1;
                      maxheight = 140;
                    } else {
                      if ($('#consent-manager-update-banner').length || $('#consent-manager').length) {
                        slidesToShow = slidesToShow - 1;
                        maxheight = 140;
                      }
                    }
                  } else {
                    if (window.innerWidth > 991) {
                      slidesToShow = 2;
                      maxheight = 140;
                      if (productGrid.length <= 2) {
                        slidesToShow = productGrid.length - 1;
                        maxheight = 70;
                      } else {
                        if ($('#consent-manager-update-banner').length || $('#consent-manager').length) {
                          slidesToShow = slidesToShow - 1;
                          maxheight = 70;
                        }
                      }
                    } else {
                      slidesToShow = 1;
                      maxheight = 70;
                    }
                  }
                }
                recentlyGrid.slick({
                  infinite: false,
                  dots: false,
                  arrows: true,
                  vertical: true,
                  mobileFirst: true,
                  slidesToScroll: slidesToShow,
                  slidesToShow: slidesToShow
                });
                recentlyGrid.prepend('<div class="product-info"></div>');
                $('.recently-viewed-products-sidebar .products-grid .slick-list').css('max-height', maxheight);
                if (window.innerWidth < 1025) {
                  $(".recently-viewed-products-sidebar .product-info").html($('.recently-viewed-products-sidebar .products-grid .slick-current .second-info').html());
                }
              }
              ;
            }
            ;
          }
          //end
        }
      });
    }

    /* */
    $(document).on("click", ".collapse-icon", function () {
      $(".lst-seen-widget").removeClass("is-show-widget");
      $(".wrap-icons").addClass("collapsed");
    });
    $(document).on("click", ".wrap-icons div:first-child", function () {
      $(".lst-seen-widget").addClass("is-show-widget");
      $(".wrap-icons").removeClass("collapsed");
    });
    $(document).on('click', 'a.recent_item_url', function (e) {
      if (window.innerWidth < 768) {
        e.preventDefault();
      }
    });
    if (window.innerWidth < 768) {
      $(".lst-seen-widget").removeClass("is-show-widget");
      $(".wrap-icons").addClass("collapsed");
    }
    $('.recently-viewed-products-sidebar .products-grid').on('mouseenter', '.slick-slide', function (e) {
      e.preventDefault();
      var $currTarget = $(e.currentTarget),
        index = $currTarget.index('.recently-viewed-products-sidebar .products-grid .slick-active');
      var margin_top = index * $('.lst-seen-widget .in-content .products-grid .item').outerHeight() - 14;
      if ($currTarget.parent().children().length > 3) {
        margin_top += 13;
      }
      $(".recently-viewed-products-sidebar .item .recent_item_url").removeClass('hide');
      $currTarget.find('.recent_item_url').addClass('hide');
      $(".recently-viewed-products-sidebar .product-info").html($(this).find(".second-info").html()).css("margin-top", margin_top).show();
    });
    $('.recently-viewed-products-sidebar .products-grid').on('mouseenter', '.slick-arrow', function (e) {
      $(".recently-viewed-products-sidebar .product-info").hide();
    });
    var backToTop = $('.recently-viewed-products-sidebar .backtoTop');
    if ($(this).scrollTop() > 220) {
      $('.recently-viewed-products-sidebar').addClass("slided-up");
    } else {
      $('.recently-viewed-products-sidebar').removeClass("slided-up");
    }
    ;
    $(window).scroll(function () {
      if ($(this).scrollTop() > 220) {
        $('.recently-viewed-products-sidebar').addClass("slided-up");
      } else {
        $('.recently-viewed-products-sidebar').removeClass("slided-up");
      }
      ;
    });
    backToTop.off('click.scrollTop').on('click.scrollTop', function (e) {
      e.preventDefault();
      e.stopPropagation();
      $('html, body').animate({
        scrollTop: 0
      }, 400);
      return false;
    });
  });
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js"), __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/halothemes/haloStickyHeader.js":
/*!********************************************************!*\
  !*** ./assets/js/theme/halothemes/haloStickyHeader.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);

/* harmony default export */ __webpack_exports__["default"] = (function () {
  function header_sticky() {
    var header_position, header_height;
    var header_wrap = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.header .header-bottom');
    header_height = header_wrap.height();
    header_position = header_wrap.offset().top;
    if (header_wrap.length) {
      header_scroll(header_position, header_height, header_wrap);
    }
  }
  function header_stickyMobile() {
    var header_position, header_height;
    var header_wrap = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.header-mobile');
    header_height = header_wrap.height();
    header_position = header_wrap.offset().top;
    if (header_wrap.length) {
      header_scroll(header_position, header_height, header_wrap);
    }
  }
  function header_scroll(header_position, header_height, header_wrap) {
    var didScroll;
    var lastScrollTop = 0;
    var delta = 5;
    var navbarHeight = header_wrap.offset().top;
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).on('scroll load', function () {
      var scroll = jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).scrollTop();
      if (Math.abs(lastScrollTop - scroll) <= delta) {
        return;
      }
      if (scroll > lastScrollTop && scroll > navbarHeight) {
        // Scroll Down
        header_wrap.removeClass('sticky-down').addClass('sticky-up');
        if (scroll > header_position) {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').removeClass('body-sticky-down').addClass('has-stickyHeader body-sticky-up');
        } else {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').removeClass('has-stickyHeader body-sticky-up body-sticky-down');
        }
      } else {
        // Scroll Up
        if (scroll + jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).height() < jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).height()) {
          header_wrap.removeClass('sticky-up').addClass('sticky-down');
          if (scroll > header_position) {
            jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').removeClass('body-sticky-up').addClass('has-stickyHeader body-sticky-down');
          } else {
            jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').removeClass('has-stickyHeader body-sticky-up body-sticky-down');
          }
        }
      }
      lastScrollTop = scroll;
    });
  }
  if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() < 1025) {
    header_stickyMobile();
  } else {
    header_sticky();
  }
});

/***/ }),

/***/ "./assets/js/theme/halothemes/haloStickyNotificationBar.js":
/*!*****************************************************************!*\
  !*** ./assets/js/theme/halothemes/haloStickyNotificationBar.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);

/* eslint-disable space-before-function-paren */
/* eslint-disable indent */
/* eslint-disable no-undef */
/* eslint-disable no-unused-vars */
/* eslint-disable func-names */
/* eslint-disable padded-blocks */
/* eslint-disable prefer-template */
/* eslint-disable vars-on-top */
/* eslint-disable no-var */
/* eslint-disable no-inner-declarations */
/* eslint-disable prefer-arrow-callback */
/* eslint-disable no-else-return */

/* harmony default export */ __webpack_exports__["default"] = (function (t, ev) {
  function setCookie(cname, cvalue, exdays) {
    var d = new Date();
    d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);
    var expires = 'expires=' + d.toUTCString();
    document.cookie = cname + '=' + cvalue + ';' + expires + ';path=/';
  }
  function getCookie(cname) {
    var name = cname + '=';
    var ca = document.cookie.split(';');
    for (var i = 0; i < ca.length; i++) {
      var c = ca[i];
      while (c.charAt(0) === ' ') {
        c = c.substring(1);
      }
      if (c.indexOf(name) === 0) {
        return c.substring(name.length, c.length);
      }
    }
    return '';
  }
  var deleteCookie = function deleteCookie(name) {
    document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';
  };
  if (ev === true && getCookie('haloStickyNotificationBar') === '') {
    var setClosePopup = function setClosePopup() {
      setCookie('haloStickyNotificationBar', 'closed', t);
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('#sticky-notification').removeClass('show');
    };
    jquery__WEBPACK_IMPORTED_MODULE_0___default()('#sticky-notification').addClass('show');
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '.close-btn', function () {
      setClosePopup();
    });
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).keyup(function (e) {
      if (e.keyCode === 27) {
        // escape key maps to keycode `27`
        setClosePopup();
      }
    });
  } else {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()('#sticky-notification').removeClass('show');
  }
  if (ev === false) {
    deleteCookie('haloStickyNotificationBar');
  }
  var interval;
  function startTextSlideOnMobile() {
    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() > 767) return;
    clearInterval(interval);
    interval = setInterval(function () {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.text-wrapper').toggleClass('slide-down');
    }, 4000);
  }
  var currentScrollTop = 0;
  function scrollHandle() {
    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() > 767) return;
    var currentTop = window.pageYOffset;
    if (currentTop < 100) {
      currentScrollTop = currentTop;
      return;
    }
    ;
    if (currentTop > currentScrollTop) {
      requestAnimationFrame(function () {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('#sticky-notification').removeClass('show');
      });
    }
    if (currentTop < currentScrollTop) {
      requestAnimationFrame(function () {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('#sticky-notification').addClass('show');
      });
    }
    currentScrollTop = currentTop;
  }
  function handlePromotionClick(e) {
    if (e.target.matches('[data-close-notification-btn]') || e.target.closest('[data-close-notification-btn]') != null) return;
    var link = e.target.closest('#sticky-notification').querySelector('[data-main-link]');
    if (link) link.click();
  }
  startTextSlideOnMobile();
  window.addEventListener('scroll', scrollHandle);
  window.addEventListener('resize', startTextSlideOnMobile);
  document.getElementById('sticky-notification').addEventListener('click', handlePromotionClick);
});

/***/ }),

/***/ "./assets/js/theme/halothemes/haloTopPromotion.js":
/*!********************************************************!*\
  !*** ./assets/js/theme/halothemes/haloTopPromotion.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);

/* eslint-disable space-before-function-paren */
/* eslint-disable indent */
/* eslint-disable no-undef */
/* eslint-disable no-unused-vars */
/* eslint-disable func-names */
/* eslint-disable padded-blocks */
/* eslint-disable prefer-template */
/* eslint-disable vars-on-top */
/* eslint-disable no-var */
/* eslint-disable no-inner-declarations */
/* eslint-disable prefer-arrow-callback */
/* eslint-disable no-else-return */

/* harmony default export */ __webpack_exports__["default"] = (function (t, ev) {
  function setCookie(cname, cvalue, exdays) {
    var d = new Date();
    d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);
    var expires = 'expires=' + d.toUTCString();
    document.cookie = cname + '=' + cvalue + ';' + expires + ';path=/';
  }
  function getCookie(cname) {
    var name = cname + '=';
    var ca = document.cookie.split(';');
    for (var i = 0; i < ca.length; i++) {
      var c = ca[i];
      while (c.charAt(0) === ' ') {
        c = c.substring(1);
      }
      if (c.indexOf(name) === 0) {
        return c.substring(name.length, c.length);
      }
    }
    return '';
  }
  var deleteCookie = function deleteCookie(name) {
    document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';
  };
  if (ev === true && getCookie('haloTopPromotion') === '') {
    var setClosePopup = function setClosePopup() {
      setCookie('haloTopPromotion', 'closed', t);
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('#home-promotion').addClass('hide');
    };
    jquery__WEBPACK_IMPORTED_MODULE_0___default()('#home-promotion').removeClass('hide');
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '.close-banner-promotion', function () {
      setClosePopup();
    });
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).keyup(function (e) {
      if (e.keyCode === 27) {
        // escape key maps to keycode `27`
        setClosePopup();
      }
    });
  } else {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()('#home-promotion').addClass('hide');
  }
  if (ev === false) {
    deleteCookie('haloTopPromotion');
  }
});

/***/ }),

/***/ "./assets/js/theme/page-manager.js":
/*!*****************************************!*\
  !*** ./assets/js/theme/page-manager.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return PageManager; });
var PageManager = /*#__PURE__*/function () {
  function PageManager(context) {
    this.context = context;
  }
  var _proto = PageManager.prototype;
  _proto.type = function type() {
    return this.constructor.name;
  };
  _proto.onReady = function onReady() {};
  PageManager.load = function load(context) {
    var page = new this(context);
    $(document).ready(function () {
      page.onReady.bind(page)();
    });
  };
  return PageManager;
}();

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/product/image-gallery.js":
/*!**************************************************!*\
  !*** ./assets/js/theme/product/image-gallery.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ImageGallery; });
/* harmony import */ var easyzoom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! easyzoom */ "./node_modules/easyzoom/dist/easyzoom.js");
/* harmony import */ var easyzoom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(easyzoom__WEBPACK_IMPORTED_MODULE_0__);

var ImageGallery = /*#__PURE__*/function () {
  function ImageGallery($gallery) {
    this.$mainImage = $gallery.find('[data-image-gallery-main]');
    this.$mainImageNested = $gallery.find('[data-main-image]');
    this.$selectableImages = $gallery.find('[data-image-gallery-item]');
    this.$swipThumbnails = $gallery.find('.productView-for');
    this.currentImage = {};
  }
  var _proto = ImageGallery.prototype;
  _proto.init = function init() {
    this.bindEvents();
    this.setImageZoom();
  };
  _proto.setMainImage = function setMainImage(imgObj) {
    this.currentImage = Object.assign({}, imgObj);
    this.setActiveThumb();
    this.swapMainImage();
  };
  _proto.setAlternateImage = function setAlternateImage(imgObj) {
    if (!this.savedImage) {
      this.savedImage = {
        mainImageUrl: this.$mainImage.find('img').attr('src'),
        zoomImageUrl: this.$mainImage.attr('data-zoom-image'),
        mainImageSrcset: this.$mainImage.find('img').attr('srcset'),
        $selectedThumb: this.currentImage.$selectedThumb
      };
    }
    this.setMainImage(imgObj);
  };
  _proto.restoreImage = function restoreImage() {
    if (this.savedImage) {
      this.setMainImage(this.savedImage);
      delete this.savedImage;
    }
  };
  _proto.selectNewImage = function selectNewImage(e) {
    e.preventDefault();
    var $target = $(e.currentTarget);
    var imgObj = {
      mainImageUrl: $target.attr('data-image-gallery-new-image-url'),
      zoomImageUrl: $target.attr('data-image-gallery-zoom-image-url'),
      mainImageSrcset: $target.attr('data-image-gallery-new-image-srcset'),
      $selectedThumb: $target,
      mainImageAlt: $target.children().first().attr('alt')
    };
    this.setMainImage(imgObj);
  };
  _proto.selectNewImage2 = function selectNewImage2(e) {
    var $target = $(e.currentTarget).find('.slick-current [data-image-gallery-item]');
    var imgObj = {
      mainImageUrl: $target.attr('data-image-gallery-new-image-url'),
      zoomImageUrl: $target.attr('data-image-gallery-zoom-image-url'),
      mainImageSrcset: $target.attr('data-image-gallery-new-image-srcset'),
      $selectedThumb: $(e.currentTarget).find('.slick-current')
    };
    this.setMainImage(imgObj);
  };
  _proto.setActiveThumb = function setActiveThumb() {
    this.$selectableImages.removeClass('is-active');
    if (this.currentImage.$selectedThumb) {
      this.currentImage.$selectedThumb.addClass('is-active');
    }
  };
  _proto.swapMainImage = function swapMainImage() {
    var isBrowserIE = navigator.userAgent.includes('Trident');
    this.easyzoom.data('easyZoom').swap(this.currentImage.mainImageUrl, this.currentImage.zoomImageUrl, this.currentImage.mainImageSrcset);
    this.$mainImage.attr({
      'data-zoom-image': this.currentImage.zoomImageUrl
    }).find('a').attr({
      href: this.currentImage.zoomImageUrl
    }).find('img').attr({
      src: this.currentImage.mainImageUrl
    });
    this.$mainImage.find('.productView-img-container img').attr({
      srcset: this.currentImage.mainImageUrl
    });
    this.$mainImageNested.attr({
      alt: this.currentImage.mainImageAlt,
      title: this.currentImage.mainImageAlt
    });
    if (isBrowserIE) {
      var fallbackStylesIE = {
        'background-image': "url(" + this.currentImage.mainImageUrl + ")",
        'background-position': 'center',
        'background-repeat': 'no-repeat',
        'background-origin': 'content-box',
        'background-size': 'contain'
      };
      this.$mainImageNested.css(fallbackStylesIE);
    }
  };
  _proto.checkImage = function checkImage() {
    var $imageContainer = $('.productView-image');
    var containerHeight = $imageContainer.height();
    var containerWidth = $imageContainer.width();
    var $image = this.easyzoom.data('easyZoom').$zoom;
    var height = $image.height();
    var width = $image.width();
    if (height < containerHeight || width < containerWidth) {
      this.easyzoom.data('easyZoom').hide();
    }
  };
  _proto.setImageZoom = function setImageZoom() {
    var _this = this;
    this.easyzoom = this.$mainImage.easyZoom({
      onShow: function onShow() {
        return _this.checkImage();
      },
      errorNotice: '',
      loadingNotice: ''
    });
  };
  _proto.bindEvents = function bindEvents() {
    this.$selectableImages.on('click', this.selectNewImage.bind(this));
    this.$swipThumbnails.on('afterChange', this.selectNewImage2.bind(this));
  };
  return ImageGallery;
}();

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./assets/js/theme/wishlist.js":
/*!*************************************!*\
  !*** ./assets/js/theme/wishlist.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return WishList; });
/* harmony import */ var foundation_sites_js_foundation_foundation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! foundation-sites/js/foundation/foundation */ "./node_modules/foundation-sites/js/foundation/foundation.js");
/* harmony import */ var foundation_sites_js_foundation_foundation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(foundation_sites_js_foundation_foundation__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var foundation_sites_js_foundation_foundation_reveal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! foundation-sites/js/foundation/foundation.reveal */ "./node_modules/foundation-sites/js/foundation/foundation.reveal.js");
/* harmony import */ var foundation_sites_js_foundation_foundation_reveal__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(foundation_sites_js_foundation_foundation_reveal__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _common_nod__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common/nod */ "./assets/js/theme/common/nod.js");
/* harmony import */ var _page_manager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./page-manager */ "./assets/js/theme/page-manager.js");
/* harmony import */ var _common_utils_pagination_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common/utils/pagination-utils */ "./assets/js/theme/common/utils/pagination-utils.js");
/* harmony import */ var _common_utils_form_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common/utils/form-utils */ "./assets/js/theme/common/utils/form-utils.js");
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }






var WishList = /*#__PURE__*/function (_PageManager) {
  _inheritsLoose(WishList, _PageManager);
  function WishList(context) {
    var _this;
    _this = _PageManager.call(this, context) || this;
    _this.options = {
      template: 'account/add-wishlist'
    };
    return _assertThisInitialized(_this) || _assertThisInitialized(_this);
  }

  /**
   * Creates a confirm box before deleting all wish lists
   */
  var _proto = WishList.prototype;
  _proto.wishlistDeleteConfirm = function wishlistDeleteConfirm() {
    var _this2 = this;
    $('body').on('click', '[data-wishlist-delete]', function (event) {
      var confirmed = window.confirm(_this2.context.wishlistDelete);
      if (confirmed) {
        return true;
      }
      event.preventDefault();
    });
  };
  _proto.registerAddWishListValidation = function registerAddWishListValidation($addWishlistForm) {
    var _this3 = this;
    this.addWishlistValidator = Object(_common_nod__WEBPACK_IMPORTED_MODULE_2__["default"])({
      submit: '.wishlist-form input[type="submit"]',
      tap: _common_utils_form_utils__WEBPACK_IMPORTED_MODULE_5__["announceInputErrorMessage"]
    });
    this.addWishlistValidator.add([{
      selector: '.wishlist-form input[name="wishlistname"]',
      validate: function validate(cb, val) {
        var result = val.length > 0;
        cb(result);
      },
      errorMessage: 'You must enter a wishlist name.'
    }]);
    $addWishlistForm.on('submit', function (event) {
      _this3.addWishlistValidator.performCheck();
      if (_this3.addWishlistValidator.areAll('valid')) {
        return;
      }
      event.preventDefault();
    });
  };
  _proto.onReady = function onReady() {
    var $addWishListForm = $('.wishlist-form');
    if ($('[data-pagination-wishlist]').length) {
      Object(_common_utils_pagination_utils__WEBPACK_IMPORTED_MODULE_4__["wishlistPaginatorHelper"])();
    }
    if ($addWishListForm.length) {
      this.registerAddWishListValidation($addWishListForm);
    }
    this.wishlistDeleteConfirm();
  };
  return WishList;
}(_page_manager__WEBPACK_IMPORTED_MODULE_3__["default"]);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./node_modules/@bigcommerce/stencil-utils/src/api/base.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@bigcommerce/stencil-utils/src/api/base.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, exports) {

throw new Error("Module build failed (from ./node_modules/babel-loader/lib/index.js):\nError: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\@bigcommerce\\stencil-utils\\src\\api\\base.js'");

/***/ }),

/***/ "./node_modules/@bigcommerce/stencil-utils/src/hooks/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@bigcommerce/stencil-utils/src/hooks/index.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, exports) {

throw new Error("Module build failed (from ./node_modules/babel-loader/lib/index.js):\nError: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\@bigcommerce\\stencil-utils\\src\\hooks\\index.js'");

/***/ }),

/***/ "./node_modules/@bigcommerce/stencil-utils/src/main.js":
/*!*************************************************************!*\
  !*** ./node_modules/@bigcommerce/stencil-utils/src/main.js ***!
  \*************************************************************/
/*! exports provided: hooks, api, tools, default */
/***/ (function(module, exports) {

throw new Error("Module build failed (from ./node_modules/babel-loader/lib/index.js):\nError: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\@bigcommerce\\stencil-utils\\src\\main.js'");

/***/ }),

/***/ "./node_modules/easyzoom/dist/easyzoom.js":
/*!************************************************!*\
  !*** ./node_modules/easyzoom/dist/easyzoom.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\easyzoom\\dist\\easyzoom.js'");

/***/ }),

/***/ "./node_modules/focus-within-polyfill/dist/focus-within-polyfill.js":
/*!**************************************************************************!*\
  !*** ./node_modules/focus-within-polyfill/dist/focus-within-polyfill.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\focus-within-polyfill\\dist\\focus-within-polyfill.js'");

/***/ }),

/***/ "./node_modules/foundation-sites/js/foundation/foundation.dropdown.js":
/*!****************************************************************************!*\
  !*** ./node_modules/foundation-sites/js/foundation/foundation.dropdown.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\foundation-sites\\js\\foundation\\foundation.dropdown.js'");

/***/ }),

/***/ "./node_modules/foundation-sites/js/foundation/foundation.js":
/*!*******************************************************************!*\
  !*** ./node_modules/foundation-sites/js/foundation/foundation.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\foundation-sites\\js\\foundation\\foundation.js'");

/***/ }),

/***/ "./node_modules/foundation-sites/js/foundation/foundation.reveal.js":
/*!**************************************************************************!*\
  !*** ./node_modules/foundation-sites/js/foundation/foundation.reveal.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\foundation-sites\\js\\foundation\\foundation.reveal.js'");

/***/ }),

/***/ "./node_modules/foundation-sites/js/foundation/foundation.tab.js":
/*!***********************************************************************!*\
  !*** ./node_modules/foundation-sites/js/foundation/foundation.tab.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\foundation-sites\\js\\foundation\\foundation.tab.js'");

/***/ }),

/***/ "./node_modules/jquery.cookie/jquery.cookie.js":
/*!*****************************************************!*\
  !*** ./node_modules/jquery.cookie/jquery.cookie.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\jquery.cookie\\jquery.cookie.js'");

/***/ }),

/***/ "./node_modules/jquery.tabbable/jquery.tabbable.js":
/*!*********************************************************!*\
  !*** ./node_modules/jquery.tabbable/jquery.tabbable.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\jquery.tabbable\\jquery.tabbable.js'");

/***/ }),

/***/ "./node_modules/jquery/dist/jquery.min.js":
/*!************************************************!*\
  !*** ./node_modules/jquery/dist/jquery.min.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\jquery\\dist\\jquery.min.js'");

/***/ }),

/***/ "./node_modules/lodash/bind.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/bind.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\lodash\\bind.js'");

/***/ }),

/***/ "./node_modules/lodash/camelCase.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/camelCase.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\lodash\\camelCase.js'");

/***/ }),

/***/ "./node_modules/lodash/capitalize.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/capitalize.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\lodash\\capitalize.js'");

/***/ }),

/***/ "./node_modules/lodash/debounce.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/debounce.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\lodash\\debounce.js'");

/***/ }),

/***/ "./node_modules/lodash/each.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/each.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\lodash\\_arrayEach.js'");

/***/ }),

/***/ "./node_modules/lodash/extend.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/extend.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\lodash\\extend.js'");

/***/ }),

/***/ "./node_modules/lodash/includes.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/includes.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\lodash\\_arrayIncludes.js'");

/***/ }),

/***/ "./node_modules/lodash/isEmpty.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/isEmpty.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\lodash\\isEmpty.js'");

/***/ }),

/***/ "./node_modules/lodash/isNaN.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/isNaN.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\lodash\\isNaN.js'");

/***/ }),

/***/ "./node_modules/lodash/isNumber.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isNumber.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\lodash\\isNumber.js'");

/***/ }),

/***/ "./node_modules/lodash/isObject.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isObject.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\lodash\\isObject.js'");

/***/ }),

/***/ "./node_modules/lodash/isPlainObject.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/isPlainObject.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\lodash\\isPlainObject.js'");

/***/ }),

/***/ "./node_modules/lodash/throttle.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/throttle.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\lodash\\throttle.js'");

/***/ }),

/***/ "./node_modules/lodash/transform.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/transform.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\lodash\\transform.js'");

/***/ }),

/***/ "./node_modules/nanobar/nanobar.min.js":
/*!*********************************************!*\
  !*** ./node_modules/nanobar/nanobar.min.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\nanobar\\nanobar.min.js'");

/***/ }),

/***/ "./node_modules/nod-validate/nod.js":
/*!******************************************!*\
  !*** ./node_modules/nod-validate/nod.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\nod-validate\\nod.js'");

/***/ }),

/***/ "./node_modules/node-fetch/browser.js":
/*!********************************************!*\
  !*** ./node_modules/node-fetch/browser.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\node-fetch\\browser.js'");

/***/ }),

/***/ "./node_modules/slick-carousel/slick/slick.min.js":
/*!********************************************************!*\
  !*** ./node_modules/slick-carousel/slick/slick.min.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\slick-carousel\\slick\\slick.min.js'");

/***/ }),

/***/ "./node_modules/svg-injector/dist/svg-injector.min.js":
/*!************************************************************!*\
  !*** ./node_modules/svg-injector/dist/svg-injector.min.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\svg-injector\\dist\\svg-injector.min.js'");

/***/ }),

/***/ "./node_modules/sweetalert2/dist/sweetalert2.min.js":
/*!**********************************************************!*\
  !*** ./node_modules/sweetalert2/dist/sweetalert2.min.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\sweetalert2\\dist\\sweetalert2.min.js'");

/***/ }),

/***/ "./node_modules/url/url.js":
/*!*********************************!*\
  !*** ./node_modules/url/url.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open 'C:\\BigCommerce\\node_modules\\url\\url.js'");

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,